{
  "openapi": "3.0.0",
  "info": {
    "title": "verteil/air/v4/offer/offer_service.proto",
    "version": "version not set"
  },
  "paths": {
    "/air/v4/offers/seats:list": {
      "post": {
        "summary": "Service to pull seat maps with fully integrated fees for any identified premium seats.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. The transactionId returned in previous Shop/SimpleShop/ReshopOrder service\n                     to relate all messages within the transaction ending with\n                     an Order create/change end-of-transaction (EoT) service.",
        "operationId": "OfferManagementService_ListSeats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offerSeatAvailabilityRS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offerSeatAvailabilityRQ"
              }
            }
          },
          "description": "Request to pull seat maps with fully integrated fees for any identified premium seats.",
          "required": true
        }
      }
    },
    "/air/v4/offers/services:list": {
      "post": {
        "summary": "Service to retrieve the list of all applicable ancillary services that meet request qualifiers and flights.\nThe message supports shopping for additional a la carte services to compliment any selected offer,\nas well as shopping for specialty service items not generally included in an initial offer\nbut rather based on service search filters, e.g. sports equipment, specialty baggage and unaccompanied minor fees.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. The transactionId returned in previous Shop/SimpleShop/ReshopOrder service\n                     to relate all messages within the transaction ending with\n                     an Order create/change (end-of-transaction/EoT) service.",
        "operationId": "OfferManagementService_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offerServiceListRS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offerServiceListRQ"
              }
            }
          },
          "description": "Request to retrieve the list of all applicable ancillary services that meet request qualifiers and flights.\nThe message supports shopping for additional a la carte services to compliment any selected offer,\nas well as shopping for specialty service items not generally included in an initial offer\nbut rather based on service search filters, e.g. sports equipment, specialty baggage and unaccompanied minor fees.",
          "required": true
        }
      }
    },
    "/air/v4/offers:price": {
      "post": {
        "summary": "Service used to request pricing of specific Offers/OfferItems\nselected from shopping/service-list/seat-availability responses.\nThis can return two different sets of content.\nThe response will initially provide the priced Offer reflecting the Offers/OfferItems requested for pricing,\nand potentially additional Offers that are applicable and relevant to the PricedOffer provided.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. The transactionId returned in previous Shop/SimpleShop service\n                     to relate all messages within the transaction ending with CreateOrder (end-of-transaction/EoT) service.",
        "operationId": "OfferManagementService_Price",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offerOfferPriceRS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offerOfferPriceRQ"
              }
            }
          },
          "required": true
        }
      }
    },
    "/air/v4/offers:refund_quote": {
      "post": {
        "summary": "Service used to fetch options for cancelling the entire Order.\nNot be used for unpaid orders.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Optional. A unique identifier to relate all messages within the transaction.\n                       If not provided, a UUID will be generated and used as the transactionId.\n                       This would need to be relayed in subsequent CancelOrder (end-of-transaction/EoT) service.",
        "operationId": "OfferManagementService_RefundQuote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offerOrderReshopRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ownerCode",
            "description": "Required. IATA-defined 2-character code of the carrier owning the service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order to which the Seller wants to udpate or delete an OrderItem.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.\n\n - NDC: Default NDC channel\n - DIRECT_CONNECT: Proprietary (non NDC) direct connect channel\n - GDS_1A: Amadeus GDS channel\n - GDS_1G: Galileo GDS channel\n - GDS_1S: Sabre GDS channel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ],
              "default": "NDC"
            }
          }
        ]
      }
    },
    "/air/v4/offers:reprice": {
      "post": {
        "summary": "Service used for repricing an unpaid Order before making payment.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Optional. A unique identifier to relate all messages within the transaction.\n                       If not provided, a UUID will be generated and used as the transactionId.\n                       This would need to be relayed in subsequent AcceptRepricedOrder (end-of-transaction/EoT) service.",
        "operationId": "OfferManagementService_RepriceOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offerOrderRepriceRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ownerCode",
            "description": "Required. IATA-defined 2-character code of the carrier owning the service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to Order which seller wants to reprice.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.\n\n - NDC: Default NDC channel\n - DIRECT_CONNECT: Proprietary (non NDC) direct connect channel\n - GDS_1A: Amadeus GDS channel\n - GDS_1G: Galileo GDS channel\n - GDS_1S: Sabre GDS channel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ],
              "default": "NDC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4offerRepriceOrder"
              }
            }
          },
          "description": "Optional. Option to Reprice an Order.",
          "required": true
        }
      }
    },
    "/air/v4/offers:requote": {
      "post": {
        "summary": "Service used to price an offer after ReshopOrder.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. The transactionId returned in previous ReshopOrder service\n                     to relate all messages within the transaction ending with\n                     an UpdateOrderItems end-of-transaction (EoT) service.",
        "operationId": "OfferManagementService_RequoteOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offerOrderQuoteRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ownerCode",
            "description": "Required. IATA-defined 2-character code of the carrier owning the service",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order to which the Seller wants to add, udpate, delete an OrderItem.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.\n\n - NDC: Default NDC channel\n - DIRECT_CONNECT: Proprietary (non NDC) direct connect channel\n - GDS_1A: Amadeus GDS channel\n - GDS_1G: Galileo GDS channel\n - GDS_1S: Sabre GDS channel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ],
              "default": "NDC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4offerRequoteOrder"
              }
            }
          },
          "description": "Required. The order item pricing in the reshop workflow",
          "required": true
        }
      }
    },
    "/air/v4/offers:reshop": {
      "post": {
        "summary": "Service used to request additions, replacement or deletions of OrderItems in a specific Order.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Optional. A unique identifier to relate all messages within the transaction ending with UpdateOrderItems service.\n                       If not provided, a UUID will be generated and used as the transactionId.\n                       This would need to be relayed in all subsequent service calls until UpdateOrderItems (end-of-transaction/EoT) service.",
        "operationId": "OfferManagementService_ReshopOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offerOrderReshopRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ownerCode",
            "description": "Required. IATA-defined 2-character code of the carrier owning the service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order to which the Seller wants to add, udpate, delete an OrderItem.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.\n\n - NDC: Default NDC channel\n - DIRECT_CONNECT: Proprietary (non NDC) direct connect channel\n - GDS_1A: Amadeus GDS channel\n - GDS_1G: Galileo GDS channel\n - GDS_1S: Sabre GDS channel",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ],
              "default": "NDC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4offerReshopOrder"
              }
            }
          },
          "description": "Required. Option to Reshop an Order.\nIn this version, only Reshop for flight date change is supported currently - Cancel options are being added",
          "required": true
        }
      }
    },
    "/air/v4/offers:shop": {
      "get": {
        "summary": "Simplified version of Shop service accepting a single OriginDestination pair, onward/return dates and PTC counts.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Optional. A unique identifier to relate all messages within the transaction ending with CreateOrder service.\n                       If not provided, a UUID will be generated and used as the transactionId.\n                       This would need to be relayed in all subsequent service calls until CreateOrder (end-of-transaction/EoT) service.",
        "operationId": "OfferManagementService_SimpleShop",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/offerAirShoppingRS"
                    }
                  },
                  "title": "Stream result of offerAirShoppingRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "originStationCode",
            "description": "Required. IATA 3-letter code defining the origin city or airport code.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destStationCode",
            "description": "Required. IATA 3-letter code defining the destination city or airport code.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onwardDepDate",
            "description": "Required. The passenger's requested onward departure date in ISO-8601 format (yyyy-mm-dd).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "returnDepDate",
            "description": "Required. The passenger's requested return departure date in ISO-8601 format (yyyy-mm-dd).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ptcAdtCount",
            "description": "Optional. Count of adult passengers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ptcYadtCount",
            "description": "Optional. Count of young adult passengers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ptcChdCount",
            "description": "Optional. Count of child passengers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ptcInfCount",
            "description": "Optional. Count of infant passengers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ]
      },
      "post": {
        "summary": "Service used to shop for offers.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Optional. A unique identifier to relate all messages within the transaction ending with CreateOrder service.\n                       If not provided, a UUID will be generated and used as the transactionId.\n                       This would need to be relayed in all subsequent service calls until Order create (end-of-transaction/EoT) service.",
        "operationId": "OfferManagementService_Shop",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/offerAirShoppingRS"
                    }
                  },
                  "title": "Stream result of offerAirShoppingRS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offerAirShoppingRQ"
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CabinCompartmentDeck": {
        "type": "string",
        "enum": [
          "MAIN",
          "LOWER",
          "UPPER"
        ],
        "default": "MAIN",
        "title": "- MAIN: Default main deck\n - LOWER: Upper deck\n - UPPER: Lower deck"
      },
      "CabinComponentPosition": {
        "type": "string",
        "enum": [
          "POSITION_UNSPECIFIED",
          "BEFORE",
          "AFTER"
        ],
        "default": "POSITION_UNSPECIFIED",
        "description": "Location of the component relative to the associated Seat Row position.\n\n - POSITION_UNSPECIFIED: Default unspecified"
      },
      "CabinComponentTypeCode": {
        "type": "string",
        "enum": [
          "TYPE_UNSPECIFIED",
          "D",
          "E",
          "G",
          "LA",
          "BK",
          "MD",
          "LE",
          "CL",
          "SO",
          "TA",
          "ST"
        ],
        "default": "TYPE_UNSPECIFIED",
        "description": "Enumeration of codes identifying cabin components.\nThis enumeration is expandable, additional values may be added in future.\nBased on PADIS code list 9978 Cabin facilities characteristic.\n\n - TYPE_UNSPECIFIED: Default unspecified\n - D: Exit\n - E: Emergency Exit\n - G: Galley\n - LA: Lavatory\n - BK: Bulkhead\n - MD: Movable compartment divider\n - LE: Lounge\n - CL: Closet\n - SO: Storage Space\n - TA: Table\n - ST: Stairs to upper deck"
      },
      "ContactEnumsPurpose": {
        "type": "string",
        "enum": [
          "CTC_OTHER",
          "CTC_ORIGIN",
          "CTC_DEST",
          "CTC_EMERGENCY",
          "CTC_NOTIF",
          "CTC_UMNR_ORIGIN",
          "CTC_UMNR_DEST",
          "CTC_PAYMENT",
          "CTC_BILLING"
        ],
        "default": "CTC_OTHER",
        "title": "Enumeration of contact purposes. Based on PADIS code list 3299"
      },
      "FeatureCategory": {
        "type": "string",
        "enum": [
          "OTHERS",
          "DINING",
          "CABIN_BAGGAGE",
          "CHECKED_BAGGAGE",
          "SEAT",
          "AMENITY",
          "CHECK_IN",
          "BOARDING",
          "PREMIUM",
          "CHG_CXL",
          "LOUNGE",
          "LOYALTY",
          "UPGRADE",
          "PROMOTION",
          "TRANSPORT",
          "ACCOMMODATION",
          "PURCHASES",
          "ASSIST",
          "REASSURANCE",
          "INSURANCE",
          "VISA_SERVICES",
          "BOOK_AND_HOLD"
        ],
        "default": "OTHERS",
        "description": "Enumeration of product or service feature categories\nThis enumeration is expandable, additional values may be added in future.\n\n - OTHERS: Default category\n - DINING: Food and Beverage Category.\n - CABIN_BAGGAGE: CABIN_BAGGAGE Category.\nPlease note that `CABIN_BAGGAGE` category is intended for descriptive communication of baggage policy applicable for Cabin Baggage to end user.\n`BaggageAllowance` provides more detailed and structured information and API consumers should depend\non `BaggageAllowance` when building logic.\n - CHECKED_BAGGAGE: CHECKED_BAGGAGE Category.\nPlease note that `CHECKED_BAGGAGE` category is intended for descriptive communication of baggage policy applicable for Checked Baggage to end user.\n`BaggageAllowance` provides more detailed and structured information and API consumers should depend\non `BaggageAllowance` when building logic.\n - SEAT: Seat Category\n - AMENITY: Category for amenities like entertainment, wi-fi, power etc.\n - CHECK_IN: Check-in Category\n - BOARDING: Boarding Category\n - PREMIUM: Indicates a premium feature\n - CHG_CXL: Category for communicating policies relating to restrictions on Change, Cancellation, NoShow, Upgrade etc.\nPlease note that `CHG_CXL` category is intended for descriptive communication of ticket policies to end user.\n`Penalty` provides more detailed and structured information and API consumers should depend\non `Penalty` when building logic.\n - LOUNGE: Lounge Category\n - LOYALTY: Loyalty/Award-Miles Category\n - UPGRADE: Upgrade Category\n - PROMOTION: Promotion Category\n - TRANSPORT: Category for transport services outside the airport\n - ACCOMMODATION: Category relating to Accommodation within or outside airport\n - PURCHASES: Category providing information relating to Purchases\n - ASSIST: Category relating to providing assistance to Passenger\n - REASSURANCE: Reassurance Category intended to make passengers feel safe and informed when they fly\n - INSURANCE: Category for products or services relating to Insurance\n - VISA_SERVICES: Category for products or services relating to Visa Services\n - BOOK_AND_HOLD: Category for products or services relating to Book and Hold Services"
      },
      "FeatureSubCategory": {
        "type": "string",
        "enum": [
          "UNSPECIFIED",
          "MEAL",
          "SNACK",
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "BEVERAGE",
          "BEVERAGE_ALCOHOLIC",
          "BEVERAGE_NON_ALCOHOLIC",
          "GOURMET",
          "BAG",
          "CAR_SEAT",
          "STROLLER",
          "PET",
          "EXCESS_BAG",
          "MEDIA_EQUIPMENT",
          "MUSIC_EQUIPMENT",
          "SPORTS_EQUIPMENT",
          "ADDITIONAL_ALLOWANCE",
          "FREE_SELECTION",
          "LEG_ROOM",
          "FLAT_BED",
          "BASSINET",
          "FREE_CHANGE",
          "CHANGE_WITH_FEE",
          "FREE_CXL",
          "CXL_WITH_FEE",
          "VALUE_STORE",
          "ENTERTAINMENT",
          "WIFI",
          "INTERNET",
          "POWER",
          "SUITE",
          "SHOWER",
          "LIMO",
          "TRAIN",
          "BUS",
          "PRIORITY",
          "HEALTH",
          "CARBON_OFFSET",
          "SUSTAINABILITY",
          "DUTY_FREE",
          "OXYGEN",
          "STRETCHER",
          "WHEELCHAIR",
          "INCUBATOR",
          "MEDICAL",
          "MINOR",
          "ADULT",
          "SECURED",
          "SENIOR",
          "VIP",
          "SERVICE_ANIMAL"
        ],
        "default": "UNSPECIFIED",
        "title": "- UNSPECIFIED: Default category\nThis enumeration is expandable, additional values may be added in future.\n - MEAL: Meal Sub Category under `DINING` and `LOUNGE`.\n - SNACK: Snack Sub Category under `DINING`.\n - BREAKFAST: Sub Category under `DINING`.\n - LUNCH: Sub Category under `DINING`.\n - DINNER: Sub Category under `DINING`.\n - BEVERAGE: Beverages Sub Category under `DINING` and `LOUNGE`.\n - BEVERAGE_ALCOHOLIC: Sub Category under `DINING`.\n - BEVERAGE_NON_ALCOHOLIC: Sub Category under `DINING`.\n - GOURMET: Gourmet meal Sub Category under `DINING`\n - BAG: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - CAR_SEAT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - STROLLER: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - PET: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - EXCESS_BAG: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - MEDIA_EQUIPMENT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - MUSIC_EQUIPMENT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - SPORTS_EQUIPMENT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - ADDITIONAL_ALLOWANCE: Additional Baggage Allowance Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE` indicating allowance on top of normal allowance.\n - FREE_SELECTION: Sub Category under `SEAT` indicating that complementary (free) seat selection is offered\nThere may be restrictions on the seat that can be selected for free (e.g. extra legroom seats excluded)\n - LEG_ROOM: Sub Category under `SEAT` indicating extra leg room space\n - FLAT_BED: Sub Category under `SEAT` indicating that seat may be converted to fully flat bed\n - BASSINET: Sub Category under `SEAT` indicating seat with bassinet.\n - FREE_CHANGE: Sub Category under `CHG_CXL` indicating that free order change is being offered\nThere may be restrictions like free change up to 24 hrs from departure\n - CHANGE_WITH_FEE: Sub Category under `CHG_CXL` indicating that fee may be changed for order changes\n - FREE_CXL: Sub Category under `CHG_CXL` indicating that free cancellation is being offered\nThere may be restrictions like free cancellation up to 24 hrs from departure\n - CXL_WITH_FEE: Sub Category under `CHG_CXL` indicating that fee may be changed for order cancellation\n - VALUE_STORE: A “Value Store” can be re-used within an existing order or reallocated when used in a new order.\n - ENTERTAINMENT: Sub Category under `AMENITY` indicating that entertainment (movies, games etc.) is offered\n - WIFI: Sub Category under `AMENITY` indicating that wi-fi is offered\n - INTERNET: Sub Category under `AMENITY` indicating that internet services are offered\n - POWER: Sub Category under `AMENITY` or `SEAT` indicating that power outlets are offered.\nUnder `SEAT` Category, it indicates availability of individual power outlets.\nUnder `AMENITY` Category, it indicates individual or shared power outlets.\n - SUITE: Sub Category under `AMENITY` indicating that a private suite is being offered\n - SHOWER: Sub Category under `AMENITY` indicating that a shower facility is being offered\n - LIMO: Sub Category under `TRANSPORT` indicating conveyance on chauffeured limousine\n - TRAIN: Sub Category under `TRANSPORT` for transportation via train\n - BUS: Sub Category under `TRANSPORT` for transportation via bus\n - PRIORITY: Sub Category under `CHECK_IN`, 'BOARDING`, `CABIN_BAGGAGE` or `CHECKED_BAGGAGE` indicating that dedicated priority service is offered to the customer\n - HEALTH: Sub Category under `REASSURANCE` for communicating passenger's health related policies and responses\n - CARBON_OFFSET: Sub Category under `REASSURANCE` relating to carbon footprint\n - SUSTAINABILITY: Sub Category under `REASSURANCE` providing information on eco friendly policies and responses\n - DUTY_FREE: Sub Category under `PURCHASES` indicating shopping without duty\n - OXYGEN: Sub Category under `ASSIST`.\n - STRETCHER: Sub Category under `ASSIST`.\n - WHEELCHAIR: Sub Category under `ASSIST`.\n - INCUBATOR: Sub Category under `ASSIST`.\n - MEDICAL: Sub Category under `ASSIST` that relates to an individual requiring medical assistance\n - MINOR: Sub Category under `ASSIST` that relates to a minor\n - ADULT: Sub Category under `ASSIST` that relates to an individual\n - SECURED: Sub Category under `ASSIST` that relates to a Prisoner or security restricted individual\n - SENIOR: Sub Category under `ASSIST` that relates to an senior individual\n - VIP: Sub Category under `ASSIST` that relates to a VIP\n - SERVICE_ANIMAL: Sub Category under `ASSIST` that relates to a Service Animal which will accompany a passenger"
      },
      "FlightCharacteristicsCriteriaFlightCharacteristic": {
        "type": "string",
        "enum": [
          "FLIGHT_CHARACTERISTIC_CODE_UNSPECIFIED",
          "AIRPORT_CHANGE",
          "DIRECT_FLIGHT",
          "NON_STOP",
          "OVERNIGHT_STOP",
          "RED_EYE"
        ],
        "default": "FLIGHT_CHARACTERISTIC_CODE_UNSPECIFIED",
        "description": "- FLIGHT_CHARACTERISTIC_CODE_UNSPECIFIED: Default unspecified",
        "title": "Code to identify the type of flight characteristic (including non-stop, red eye, etc.)"
      },
      "IdentityDocDocTypeCode": {
        "type": "string",
        "enum": [
          "DOC_TYPE_UNSPECIFIED",
          "PT"
        ],
        "default": "DOC_TYPE_UNSPECIFIED",
        "description": "Enumeration of the passenger document type codes.\n\n - DOC_TYPE_UNSPECIFIED: Default unspecified\n - PT: Passport"
      },
      "IndividualGenderCode": {
        "type": "string",
        "enum": [
          "UNSPECIFIED",
          "F",
          "M",
          "U"
        ],
        "default": "UNSPECIFIED",
        "description": "- UNSPECIFIED: Default unspecified\n - F: Female\n - M: Male\n - U: Unknown",
        "title": "Enumeration set for Gender Code.\n {codeListAgencyName}ICAO{/codeListAgencyName}\n {codeListName}Document 9303 Sex of the holder{/codeListName}"
      },
      "MediaSize": {
        "type": "string",
        "enum": [
          "SIZE_UNSPECIFIED",
          "SMALL",
          "MEDIUM",
          "LARGE",
          "X_LARGE"
        ],
        "default": "SIZE_UNSPECIFIED",
        "description": "- SMALL: Image- less than or equal to 150x150px\n - MEDIUM: Image-between 150x150px and 350x350px\n - LARGE: Image-less between 350x350px and 600x600px\n - X_LARGE: Images larger than 600x600px",
        "title": "Enumeration of media size"
      },
      "PaymentCardTrxPaymentCardCardProductTypeCode": {
        "type": "string",
        "enum": [
          "X",
          "P",
          "C"
        ],
        "default": "X",
        "description": "- X: Default value : Unknown card type\n - P: Personal\n - C: Commercial",
        "title": "Optional. Represents card product type.\nP-personal or C-Commercial"
      },
      "PaymentCardTrxPaymentCardCreditCardVendorCode": {
        "type": "string",
        "enum": [
          "VENDOR_UNSPECIFIED",
          "AX",
          "DS",
          "DC",
          "UP",
          "JC",
          "CA",
          "TP",
          "VI"
        ],
        "default": "VENDOR_UNSPECIFIED",
        "description": "- AX: American Express\n - DS: Discover Card\n - DC: Diners Club\n - UP: China UnionPay\n - JC: Japan Credit Bureau\n - CA: Mastercard\n - TP: Universal Air Travel Plan (UATP)\n - VI: VISA International",
        "title": "A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa"
      },
      "PriceCalendarPriceCalendarDate": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "title": "Date in ISO-8601 format - `yyyy-MM-dd`. E.g. `2007-12-03`"
          },
          "odRefId": {
            "type": "string",
            "title": "Optional. Association to one Origin/Destination instance. Example: od1"
          }
        },
        "title": "Specifies Origin Destination and date"
      },
      "PriceDifferentialDifferentialType": {
        "type": "string",
        "enum": [
          "DIFFERENTIAL_TYPE_UNSPECIFIED",
          "ADD_COL",
          "ADD_COL_AND_REFUND",
          "ADD_COL_AND_RESIDUAL",
          "EVEN_EXCHANGE",
          "REFUND",
          "RESIDUAL",
          "REUSABLE"
        ],
        "default": "DIFFERENTIAL_TYPE_UNSPECIFIED",
        "description": "- DIFFERENTIAL_TYPE_UNSPECIFIED: Default\n - ADD_COL: Additional collection i.e. due amount is more than 0\nthe change will result into a new payment from the customer (applies to change scenarios)\n - ADD_COL_AND_REFUND: the change will result into both a new payment from customer and a customer refund (applies to cancellation and change scenarios)\n - ADD_COL_AND_RESIDUAL: the change will result into both a new payment from customer and a determined amount kept by airline for future use\n(applies to cancellation and change scenarios)\n - EVEN_EXCHANGE: No addition collection i.e. due amount is 0\nthe change does not have any financial impact to the customer (applies to change scenarios)\n - REFUND: due amount is negative\nthe change will result into a customer refund (applies to cancellation and change scenarios)\n - RESIDUAL: the change will result into a determined amount kept by airline for future use (applies to cancellation and change scenarios)\n - REUSABLE: the financial result of the change will be determined when customer will come back to select new journey options\n(applies to change scenarios when customer does not yet know how to reuse his money)",
        "title": "Enumeration of Price Differential Types"
      },
      "RefundLevelType": {
        "type": "string",
        "enum": [
          "NONE",
          "PARTIAL",
          "FULL"
        ],
        "default": "NONE",
        "description": "Enumeration for level type that will identify \nthe type of refundability for the condition.\n\n - NONE: Non Refundable\n - PARTIAL: Partly Refundable\n - FULL: Fully Refundable"
      },
      "RemarkRemarkType": {
        "type": "string",
        "enum": [
          "PUBLIC",
          "INTERNAL"
        ],
        "default": "PUBLIC",
        "description": "- PUBLIC: Remark will be displayed and shared with airlines and other suppliers\n - INTERNAL: Remark will be displayed but will not be shared with airlines or any suppliers",
        "title": "Enumeration of types of remarks"
      },
      "ResponseControlsResultPreference": {
        "type": "string",
        "enum": [
          "OPTIMIZED",
          "BEST",
          "FULL"
        ],
        "default": "OPTIMIZED",
        "description": "Enumeration of shopping result preference that allows fine tuning of the offers that get returned when\n`ResponseControls.result_limit` is applied.\n\n - OPTIMIZED: Default. The offers returned tries to meet the following objectives in their order of importance:\n1. Provide best offer as per `ResponseControls.sort_order` on every onward and return flight combination.\n2. Provide all offers with same price class on onward and return for each flight combination, working from top of the best offer list\n   If same price class is not available on onward and return, the next available best price class combination is returned.\nThe objective is to first try and include all flight options in the result, and then try to include all price class\noptions available on those flights with top flight combinations getting higher preference.\n - BEST: Only the best offer as per `ResponseControls.sort_order` on every onward and return flight combination is returned.\n - FULL: All offers are to be returned.\nNote that a shopping response will not have more than `ResponseControls.results_limit` offers. Consequently sorted\noffers that spill over the result_limit will be dropped.\nThe primary intention is to *NOT* miss any flight combination, so a certain number of flight combinations will have all possible\noffers, but certain flight combinations will not have anything more than one.\nFor example, if the `ResponseControls.results_limit` is provided as 400 and if there are 500 offers returned by the supplier\nwith 300 unique flight combinations, then we will guarantee that offers returned will have all the 300 unique flight combinations.\nThe remaining 100 out of provided limit 400 will be filled in the topmost flight combinations."
      },
      "SeatColumnId": {
        "type": "string",
        "enum": [
          "ID_UNSPECIFIED",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y",
          "Z"
        ],
        "default": "ID_UNSPECIFIED",
        "description": "Enumeration of alphabetic character codes identifying a seat within a row.\n\n - ID_UNSPECIFIED: Default unspecified\n - A: A\n - B: B\n - C: C\n - D: D\n - E: E\n - F: F\n - G: G\n - H: H\n - I: I\n - J: J\n - K: K\n - L: L\n - M: M\n - N: N\n - O: O\n - P: P\n - Q: Q\n - R: R\n - S: S\n - T: T\n - U: U\n - V: V\n - W: W\n - X: X\n - Y: Y\n - Z: Z"
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "default": "ASCENDING",
        "title": "Sort order enumeration"
      },
      "SortParameter": {
        "type": "string",
        "enum": [
          "SORT_PARAMETER_UNSPECIFIED",
          "PRICE",
          "STOPS",
          "DEPARTURE_TIME"
        ],
        "default": "SORT_PARAMETER_UNSPECIFIED",
        "description": "- SORT_PARAMETER_UNSPECIFIED: Default. Results will be sorted based on Price\n - PRICE: Default. Sort based on total Offer price\n - STOPS: Sort based on the number of stops\n - DEPARTURE_TIME: Sort based on departure time of first flight segment",
        "title": "Enumeration of parameters that control sort order of offers in shopping response"
      },
      "TravelAgencyAgencyType": {
        "type": "string",
        "enum": [
          "OTHER",
          "IATA",
          "TIDS"
        ],
        "default": "OTHER",
        "description": "- OTHER: Travel agency without IATA number or TIDS code\n - IATA: Travel agency with IATA number having full IATA accreditation and access to BSP\n - TIDS: Travel agency with IATA issued TIDS code",
        "title": "Enumeration of types of travel agencies"
      },
      "commonAirlineTaxonomy": {
        "type": "object",
        "properties": {
          "feature": {
            "$ref": "#/components/schemas/commonFeature"
          },
          "taxonomyCode": {
            "type": "string",
            "description": "Optional. Code defining a product or service within the Shared Industry Taxonomy or bilaterally."
          },
          "additionalInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Optional. Further level of definition of the product or service\nE.g. `speed: 50, altitude: 10000`"
          },
          "descText": {
            "type": "string",
            "title": "Optional. Description of the product or service"
          }
        },
        "title": "Defines a product or service\nRefer https://guides.developer.iata.org/v213/docs/airline-taxonomy-concept",
        "required": [
          "feature"
        ]
      },
      "commonApplicableParty": {
        "type": "string",
        "enum": [
          "PER_PAX",
          "PARTY"
        ],
        "default": "PER_PAX",
        "description": "- PER_PAX: Applicable individually to each passenger\n - PARTY: Application combined to all passengers in a party",
        "title": "Enumeration of application modes of an amount or restriction (e.g. baggage allowance)"
      },
      "commonAvailableSeat": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "integer",
            "format": "int64",
            "title": "Required. Ordinal number identifying a seat row on a transport vehicle"
          },
          "columnId": {
            "$ref": "#/components/schemas/SeatColumnId"
          },
          "offerItemRefId": {
            "type": "string",
            "description": "Optional. Reference to the price point applicable to this individual seat. Multiple seats can reference the same OfferItem."
          },
          "status": {
            "$ref": "#/components/schemas/commonAvailableSeatStatus"
          },
          "seatCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatCharacteristicCode"
            },
            "title": "Optional. Characteristic of an aircraft seat. E.g. A (Extra leg room), E (Exit row) etc. Ref IATA Codeset Directory| code - 9825"
          },
          "seatProfileRefId": {
            "type": "string",
            "description": "Optional. Reference to a Seat Profile ID within this message."
          }
        },
        "description": "A sitting place for a passenger or crew in a cabin compartment on a transport vehicle.",
        "required": [
          "rowNumber",
          "columnId"
        ]
      },
      "commonAvailableSeatStatus": {
        "type": "string",
        "enum": [
          "STATUS_UNSPECIFIED",
          "AVAILABLE",
          "UNAVAILABLE",
          "RESERVED",
          "PROTECTED",
          "ABSENT",
          "EXTRA",
          "DEADLOAD_BLOCKED",
          "OTHER_BLOCKED",
          "ADVANCED_SELECTION",
          "TRANSIT_OCCUPANCY",
          "GROUP_PRE_ALLOCATION",
          "CODESHARE_PROTECTED",
          "UPLINE_PROTECTED",
          "DOWNLINE_PROTECTED",
          "ADV_BOARDING_PASS",
          "CHECKIN_RESERVED",
          "COURTESY_RESERVED",
          "AILINE_ONLY",
          "PARTNER_AIRLINES_EXCLUDED",
          "RBD_EXCLUDED",
          "IATCI_EXCLUDED",
          "WAITLIST_OPEN",
          "WAITLIST_CLOSED",
          "MEDICAL_OCCUPANCY"
        ],
        "default": "STATUS_UNSPECIFIED",
        "description": "Enumeration of codes identifying availability of a particular Seat on Leg.\nThis enumeration is expandable, additional values may be added in future.\n\n - STATUS_UNSPECIFIED: Default unspecified\n - AVAILABLE: Seat is available for sale\nStatusCode = F\n - UNAVAILABLE: Seat is unavailable for sale\nStatusCode = O\n - RESERVED: Reserved seat generic\nStatusCode = R\n - PROTECTED: Seat is protected\nStatusCode = P\n - ABSENT: No seat here\nStatusCode = Q\n - EXTRA: Extra seat\nStatusCode = E\n - DEADLOAD_BLOCKED: Seat blocked for/with deadload\nStatusCode = D\n - OTHER_BLOCKED: Seat blocked for other reasons\nStatusCode = Z\n - ADVANCED_SELECTION: Advanced seat selection seat\nStatusCode = Y\n - TRANSIT_OCCUPANCY: Transit passenger - seat occupied by a transit passenger or load\nStatusCode = T\n - GROUP_PRE_ALLOCATION: Seat for group pre-allocation\nStatusCode = G\n - CODESHARE_PROTECTED: Seat protected for code sharing\nStatusCode = S\n - UPLINE_PROTECTED: Upline protected seat\nStatusCode = U\n - DOWNLINE_PROTECTED: Downline protected seats\nStatusCode = V\n - ADV_BOARDING_PASS: Advanced boarding pass seat\nStatusCode = B\n - CHECKIN_RESERVED: Check-in reserved seat\nStatusCode = C\n - COURTESY_RESERVED: Courtesy reserved seat\nStatusCode = H\n - AILINE_ONLY: Seats on request only to airline\nStatusCode = 3\n - PARTNER_AIRLINES_EXCLUDED: Seat is not available for partner airlines use\nStatusCode = X\n - RBD_EXCLUDED: Seat not designated for RBD specified in request\nStatusCode = N\n - IATCI_EXCLUDED: Seat is not available for interline through check-in\nStatusCode = I\n - WAITLIST_OPEN: Seat waitlist open for segment\nStatusCode = 1\n - WAITLIST_CLOSED: Seat waitlist closed for segment\nStatusCode = 2\n - MEDICAL_OCCUPANCY: Seat occupied for medical reasons\nStatusCode = M"
      },
      "commonBaggageAllowance": {
        "type": "object",
        "properties": {
          "appParty": {
            "$ref": "#/components/schemas/commonApplicableParty"
          },
          "type": {
            "$ref": "#/components/schemas/commonBaggageAllowanceType"
          },
          "descText": {
            "type": "string",
            "description": "Optional. Baggage Allowance description and additional information."
          },
          "maxDimensionAllowances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDimensionAllowance"
            },
            "title": "Optional. Baggage dimension allowance"
          },
          "pieceAllowance": {
            "$ref": "#/components/schemas/commonPieceAllowance"
          },
          "weightAllowances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWeightAllowance"
            },
            "description": "Optional. Baggage weight allowance with application information."
          }
        },
        "description": "The amount of checked or carry-on luggage the airline will allow.",
        "required": [
          "type"
        ]
      },
      "commonBaggageAllowanceType": {
        "type": "string",
        "enum": [
          "BAGGAGE_TYPE_UNSPECIFIED",
          "CARRY_ON",
          "CHECKED"
        ],
        "default": "BAGGAGE_TYPE_UNSPECIFIED",
        "description": "Enumeration of types of Baggage Allowances. E.g. Checked or CarryOn."
      },
      "commonCabin": {
        "type": "object",
        "properties": {
          "cabinCode": {
            "$ref": "#/components/schemas/commonCabinCode"
          },
          "cabinName": {
            "type": "string",
            "description": "Optional. Name given to a cabin compartment (e.g. Business, First, Economy)."
          }
        },
        "required": [
          "cabinCode"
        ]
      },
      "commonCabinAssociation": {
        "type": "object",
        "properties": {
          "legCabinAssociations": {
            "$ref": "#/components/schemas/commonLegCabinAssociations"
          },
          "segmentCabin": {
            "$ref": "#/components/schemas/commonCabin"
          }
        },
        "title": "A choice of Cabin Association to leg(s) or a segment",
        "required": [
          "legCabinAssociations",
          "segmentCabin"
        ]
      },
      "commonCabinCode": {
        "type": "string",
        "enum": [
          "CABIN_UNSPECIFIED",
          "F",
          "C",
          "W",
          "Y"
        ],
        "default": "CABIN_UNSPECIFIED",
        "description": "Enumeration of cabin class codes\nThis enumeration is expandable, additional values may be added in future.\n\n - CABIN_UNSPECIFIED: The value is used when any cabin type selection is not specified explicitly in the request\n - F: First (F) class\n - C: Business (C) class\n - W: Premium Economy (W) class\n - Y: Economy (Y) class"
      },
      "commonCabinCompartment": {
        "type": "object",
        "properties": {
          "cabinCode": {
            "$ref": "#/components/schemas/commonCabinCode"
          },
          "cabinName": {
            "type": "string",
            "description": "Optional. Name given to a cabin compartment (e.g. Business, First, Economy)."
          },
          "deck": {
            "$ref": "#/components/schemas/CabinCompartmentDeck"
          },
          "firstRowNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Required. First row number of the Cabin Compartment."
          },
          "lastRowNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Required. Last row number of the Cabin Compartment."
          },
          "cabinComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCabinComponent"
            },
            "title": "Optional. Non-seat related cabin feature or facility (e.g. lavatory, galley, closet, stowage, etc.)"
          },
          "seatRows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatRow"
            },
            "description": "Optional. Row of passenger seats located in the cabin."
          },
          "seatColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatColumn"
            },
            "description": "Optional. Column of passenger seats located in the cabin."
          }
        },
        "description": "A physical aircraft compartment where passenger seats are installed, classified by a given Cabin Type.\nThese compartments are typically defined based on fare paid or facilities and services offered.",
        "required": [
          "cabinCode",
          "firstRowNumber",
          "lastRowNumber"
        ]
      },
      "commonCabinComponent": {
        "type": "object",
        "properties": {
          "componentTypeCode": {
            "$ref": "#/components/schemas/CabinComponentTypeCode"
          },
          "firstRowNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Required. First row number of the Cabin Component."
          },
          "lastRowNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Required. Last row number of the Cabin Component."
          },
          "columnIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeatColumnId"
            },
            "description": "Optional. Columns occupied by this Cabin Component.\nIf not specified, it indicates that entire row is occupied."
          },
          "position": {
            "$ref": "#/components/schemas/CabinComponentPosition"
          }
        },
        "title": "Non-seat related cabin feature or facility (e.g. lavatory, galley, closet, stowage, etc.)",
        "required": [
          "componentTypeCode",
          "firstRowNumber",
          "lastRowNumber",
          "position"
        ]
      },
      "commonCancelRestriction": {
        "type": "object",
        "properties": {
          "allowedModificationInd": {
            "type": "boolean",
            "description": "Optional. Indicates whether cancel is allowed.\nIf this is set to FALSE then the condition further identified by the other attributes indicates that no cancellation is allowed."
          },
          "descText": {
            "type": "string",
            "title": "Optional. Describes what this restriction is. E.g.\n* Change allowed within dates specified with associated fee.\n* No change allowed"
          },
          "effectiveDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The effective date used in conjunction with the Expiration date to qualify the applicability of this condition"
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The Expiration date used in conjunction with the Effective date to qualify the applicability of this condition\nThis date is relative to the first flight segment."
          },
          "fee": {
            "$ref": "#/components/schemas/commonChangeOrCancelFee"
          },
          "journeyStageCode": {
            "$ref": "#/components/schemas/commonJourneyStageCode"
          },
          "paxRefId": {
            "type": "string",
            "description": "Optional Used to store a ref to the passenger.\nshould be mapped only if separate cancel and change restriction are returned for each passenger under a fare detail."
          },
          "refund": {
            "$ref": "#/components/schemas/commonRefund"
          }
        },
        "description": "These are a set of qualifying conditions/rules/restrictions that are related to a constrained priced grouping of services for the Cancellation action.",
        "required": [
          "fee"
        ]
      },
      "commonChangeOrCancelFee": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "title": "Optional. Stores the percentage which was used to determine the Fee to be charged in conjunction or not with\n`min_amount` and `max_amount`"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "minAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "approxInd": {
            "type": "boolean",
            "description": "Optional. When true, this fee is approximate."
          },
          "descText": {
            "type": "string",
            "title": "Optional. Fee description.  Example: Change penalty"
          }
        },
        "description": "Amount added on to a charge for changes to an already reserved product, purpose, or service."
      },
      "commonChangeRestriction": {
        "type": "object",
        "properties": {
          "allowedModificationInd": {
            "type": "boolean",
            "description": "Optional. Indicates whether cancel is allowed.\nIf this is set to FALSE then the condition further identified by the other attributes indicates that no cancellation is allowed."
          },
          "changeType": {
            "$ref": "#/components/schemas/commonChangeRestrictionChangeType"
          },
          "descText": {
            "type": "string",
            "title": "Optional. Describes what this restriction is. E.g.\n* Change allowed within dates specified with associated fee.\n* No change allowed"
          },
          "effectiveDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The effective date used in conjunction with the Expiration date to qualify the applicability of this condition\nThis date is relative to the first flight segment."
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The Expiration date used in conjunction with the Effective date to qualify the applicability of this condition"
          },
          "fee": {
            "$ref": "#/components/schemas/commonChangeOrCancelFee"
          },
          "journeyStageCode": {
            "$ref": "#/components/schemas/commonJourneyStageCode"
          },
          "paxRefId": {
            "type": "string",
            "description": "Optional Used to store a ref to the passenger.\nshould be mapped only if separate cancel and change restriction are returned for each passenger under a fare detail."
          },
          "refund": {
            "$ref": "#/components/schemas/commonRefund"
          }
        },
        "description": "These are a set of qualifying conditions/rules/restriction \nthat are related to a constrained priced grouping of services \nfor a Change/modification action."
      },
      "commonChangeRestrictionChangeType": {
        "type": "string",
        "enum": [
          "FLIGHT",
          "NAME",
          "SERVICE"
        ],
        "default": "FLIGHT",
        "description": "Enumeration of the type of change that applies to the condition.\n\n - FLIGHT: Default Flight change\n - NAME: Pax name change\n - SERVICE: Service change"
      },
      "commonChannel": {
        "type": "string",
        "enum": [
          "NDC",
          "DIRECT_CONNECT",
          "GDS_1A",
          "GDS_1G",
          "GDS_1S"
        ],
        "default": "NDC",
        "description": "Enumeration of channels through with air products are sourced\nThis enumeration is expandable, additional values may be added in future.\n\n - NDC: Default NDC channel\n - DIRECT_CONNECT: Proprietary (non NDC) direct connect channel\n - GDS_1A: Amadeus GDS channel\n - GDS_1G: Galileo GDS channel\n - GDS_1S: Sabre GDS channel"
      },
      "commonChargeOwner": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "title": "IATA-defined 2-character code identifying an airline or GDS\nor an identifier like 'LHG' for Lufthansa Group\nEither `carrier_code` or `travel_agency` is set"
          },
          "travelAgency": {
            "$ref": "#/components/schemas/commonTravelAgency"
          }
        },
        "title": "Organization applying this fee/discount"
      },
      "commonCommission": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "code": {
            "type": "string",
            "title": "Optional. Commission code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Commission name"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "title": "Optional. The node will have information on the commission percentage. The element will not be present if the comission is a fixed amount and not a percentage.\n // Example: 20"
          }
        },
        "description": "An amount of money, typically a set percentage of the value involved,\npaid to an agent in a commercial transaction.",
        "required": [
          "amount"
        ]
      },
      "commonContactEnumsType": {
        "type": "string",
        "enum": [
          "OTHER",
          "HOME",
          "BUSINESS",
          "AGY_CUSTOMER_SERVICE",
          "AGY_LOYALTY"
        ],
        "default": "OTHER",
        "title": "Enumeration of contact types. Based on PADIS code list: Contact Type"
      },
      "commonContactInfo": {
        "type": "object",
        "properties": {
          "contactPurpose": {
            "$ref": "#/components/schemas/ContactEnumsPurpose"
          },
          "individual": {
            "$ref": "#/components/schemas/commonIndividual"
          },
          "phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPhone"
            },
            "title": "Optional. Telephone number details"
          },
          "postalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPostalAddress"
            },
            "description": "Optional. Physical address used for postal service."
          },
          "emailAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonEmailAddress"
            },
            "description": "Optional. The email address which should be used for contact purposes."
          },
          "paxSegmentRefId": {
            "type": "string",
            "description": "Optional. Reference to a Pax Segment ID."
          },
          "contactRefusedInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, Contact Information was refused to be provided."
          }
        },
        "description": "The electronic or geographic address which a party has provided as the contact channel. For example, contact email,\ncontact postal address, contact phone number."
      },
      "commonCurConversion": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "sourceAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "multiplierValue": {
            "type": "number",
            "format": "double",
            "title": "The conversion rate used to convert from `source_amount` to `amount`. E.g. `80.8716018`"
          },
          "format": {
            "type": "string",
            "title": "Optional. The converted currency format. E.g. `1`"
          }
        },
        "required": [
          "amount",
          "sourceAmount",
          "multiplierValue"
        ]
      },
      "commonDataMap": {
        "type": "object",
        "properties": {
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPax"
            },
            "title": "Passenger reference data definition.\nKey is `pax_id` and value the corresponding `Pax` data"
          },
          "contactInfos": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonContactInfo"
            },
            "title": "Contact info data definition.\nThe electronic or geographic address which a party has provided as the contact channel. For example, contact email, contact postal address, contact phone number.\nKey is `contact_info_id` and value the corresponding `ContactInfo` data"
          },
          "paxSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPaxSegment"
            },
            "title": "Segment reference data definition.\nKey is `pax_segment_id` and value the corresponding `PaxSegment` data"
          },
          "paxJourneys": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPaxJourney"
            },
            "title": "Journey reference data definition.\nKey is `pax_journey_id` and value the corresponding `PaxJourney` data"
          },
          "originDestinations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonOriginDest"
            },
            "title": "OD reference data definition.\nKey is `origin_dest_id` and value the corresponding `OriginDest` data"
          },
          "baggageAllowances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonBaggageAllowance"
            },
            "title": "Optional. Baggage allowance reference data definition\nKey is `baggage_allowance_id` and value the corresponding `BaggageAllowance` data"
          },
          "serviceDefs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonServiceDefinition"
            },
            "title": "Optional. Service Definition reference data definition\nKey is `service_def_id` and value the corresponding `ServiceDefinition` data"
          },
          "seatProfiles": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonSeatProfile"
            },
            "title": "Optional. Seat Profile reference data definition.\nKey is `seat_profile_id` and value the corresponding `ServiceDefinition` data"
          },
          "penalties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPenalty"
            },
            "title": "Optional. Penalty reference data definition.\nKey is `penalty_id` and value the corresponding `Penalty` data"
          },
          "priceClasses": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPriceClass"
            },
            "title": "Optional. PriceClass reference data definition.\nKey is `price_class_id` and value the corresponding `PriceClass` data"
          },
          "medias": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonMedia"
            },
            "title": "Optional. Media reference data definition.\nKey is `media_id` and value the corresponding `Media` data"
          },
          "datedMarketingSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonDatedMarketingSegment"
            },
            "title": "Optional. Dated marketing segments used in the contained message.\nKey is `dated_marketing_segment_id` and value the corresponding `DatedMarketingSegment` data"
          },
          "datedOperatingSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonDatedOperatingSegment"
            },
            "title": "Optional. Dated operating segments used in the contained message.\nKey is `dated_operating_segment_id` and value the corresponding `DatedOperatingSegment` data"
          },
          "datedOperatingLegs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonDatedOperatingLeg"
            },
            "title": "Optional. Dated operating legs used in the contained message.\nKey is `dated_operating_leg_id` and value the corresponding `DatedOperatingLeg` data"
          }
        },
        "description": "Reference Data Map.\nEach field is a [Map/Dictionary/Associative-Array](https://swagger.io/docs/specification/data-models/dictionaries/)\nwhere keys are string IDs of the mapped value objects of a specific type (e.g. `Pax`).\nA value object can be referred from other parts of a message using it's ID."
      },
      "commonDatedMarketingSegment": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "flightNumber": {
            "type": "string",
            "description": "Required. The numerical designation of a flight as it is marketed by a carrier."
          },
          "operationalSuffix": {
            "type": "string",
            "description": "Optional. Used to distinguish two flights having the same flight number and departing from their respective Origin Stations on the same date."
          },
          "dep": {
            "$ref": "#/components/schemas/commonStation"
          },
          "arrival": {
            "$ref": "#/components/schemas/commonStation"
          },
          "datedOperatingSegmentRefId": {
            "type": "string",
            "description": "Required. Reference to a unique identifier of a dated operating segment used in a message."
          }
        },
        "description": "The commercial designation under which a Dated Operating Segment can be booked, either under the operating carrier's designator or that of another carrier (codeshare).",
        "required": [
          "carrierCode",
          "flightNumber",
          "dep",
          "arrival",
          "datedOperatingSegmentRefId"
        ]
      },
      "commonDatedOperatingLeg": {
        "type": "object",
        "properties": {
          "dep": {
            "$ref": "#/components/schemas/commonStation"
          },
          "arrival": {
            "$ref": "#/components/schemas/commonStation"
          },
          "aircraftType": {
            "type": "string",
            "description": "Optional. Code assigned to an aircraft type in IATA SSIM."
          },
          "changeOfGaugeInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, indicates a Change of Gauge will take place between the current leg and that which immediately precedes it."
          }
        },
        "description": "The nonstop operation of a transport vehicle between the departure station and the arrival station. Can be used for aircrafts as well as other transport vehicles such as train or bus etc.",
        "required": [
          "dep",
          "arrival"
        ]
      },
      "commonDatedOperatingLegRef": {
        "type": "object",
        "properties": {
          "paxSegmentRefId": {
            "type": "string",
            "title": "Reference to the passenger segment containing the legs"
          },
          "datedLegRefId": {
            "type": "string",
            "title": "References to dated operating flight legs of a passenger segment"
          }
        },
        "title": "Holds references to dated operating flight legs of a passenger segment"
      },
      "commonDatedOperatingLegRefs": {
        "type": "object",
        "properties": {
          "datedOperatingLegRefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDatedOperatingLegRef"
            }
          }
        },
        "title": "Holds references to dated operating flight legs possibly belonging to different passenger segments"
      },
      "commonDatedOperatingSegment": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "flightNumber": {
            "type": "string",
            "title": "Optional. The numerical designation of a flight as it is operated by a carrier.\nThis will be set only if the operating flight is different from marketing flight"
          },
          "operationalSuffix": {
            "type": "string",
            "title": "Optional. Used to distinguish two flights having the same flight number and departing from their respective Origin Stations on the same date.\nThis will be set only if the operating flight is different from the marketing flight"
          },
          "datedOperatingLegRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Uniquely identifies a leg within the context of one message."
          },
          "secureFlightInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, this segment is subject to US TSA 'Secure Flight' passenger prescreening program. Passport details are requires while booking creation when true."
          },
          "duration": {
            "type": "string",
            "description": "Optional. Total segment time in ISO 8601 format, including the combined air time and connection times of any legs."
          }
        },
        "description": "An operation between board point and any subsequent off point within the same flight designator. Could be one or more legs. Could also be used for other transport vehicles such as train or bus etc.",
        "required": [
          "carrierCode"
        ]
      },
      "commonDiffPriceAndFareDetails": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/commonDifferentialPrice"
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the carrier for the carriage of one passenger and his/her allowable free baggage.\nThe price in the FareDetail will change based on whether the carrier provides New or Differential price\nin case of a Re-shop similar to the price of the offeritem."
          }
        },
        "description": "A specialization of a container for Price and Fare detail information.",
        "required": [
          "price"
        ]
      },
      "commonDifferentialPrice": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "baseAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "taxSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTaxSummary"
            },
            "description": "Optional. A compulsory contribution to state revenue, levied by the government on workers' income\nand business profits or added to the cost of some goods, services, and transactions.\nIf TaxSummary is not provided in the response, tax would be 0 for the fare under scope."
          },
          "dueByAirlineAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "dueToAirlineAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "surcharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSurcharge"
            },
            "description": "Optional. Surcharge details."
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFee"
            },
            "description": "Optional. Amount added on to a charge for a specific product, purpose, or service."
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDiscount"
            },
            "description": "Optional. Deductions from the price amount, made in advance of its payment."
          },
          "markups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonMarkup"
            },
            "description": "Optional. The amount added to the cost price of goods to cover overhead and profit."
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "title": "Optional. The commission amount information"
          }
        },
        "description": "A specialization of price used for price differentials.\nPrice is the amount of money expected, required, or given in payment for something.",
        "required": [
          "totalAmount"
        ]
      },
      "commonDimensionAllowance": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/commonDimensionUnit"
          },
          "length": {
            "type": "number",
            "format": "float",
            "title": "Optional. The length of the bag in `unit` measurement"
          },
          "width": {
            "type": "number",
            "format": "float",
            "title": "Optional. The width of the bag in `unit` measurement"
          },
          "height": {
            "type": "number",
            "format": "float",
            "title": "Optional. The height of the bag in `unit` measurement"
          },
          "totalLinear": {
            "type": "number",
            "format": "float",
            "title": "Optional. The total linear dimension of the bag in `unit` measurement"
          }
        },
        "title": "Baggage dimension allowance",
        "required": [
          "unit"
        ]
      },
      "commonDimensionUnit": {
        "type": "string",
        "enum": [
          "DIMENSION_UNIT_UNSPECIFIED",
          "CM",
          "IN"
        ],
        "default": "DIMENSION_UNIT_UNSPECIFIED",
        "description": "- DIMENSION_UNIT_UNSPECIFIED: Default unspecified\n - CM: Centimeter\n - IN: Inch",
        "title": "Enumeration of units of measurement for dimension"
      },
      "commonDiscount": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "code": {
            "type": "string",
            "title": "Optional. Discount code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Discount name"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "preDiscountedAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "description": "Optional. The percentage that was used to determine the Discount."
          }
        },
        "description": "Deduction from the price amount, made in advance of its payment.",
        "required": [
          "amount"
        ]
      },
      "commonEmailAddress": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/components/schemas/commonContactEnumsType"
          },
          "emailAddressText": {
            "type": "string",
            "description": "The email address which should be used for contact purposes."
          }
        },
        "description": "The email address which should be used for contact purposes."
      },
      "commonEmployer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Optional. Name of the organization"
          },
          "corporateId": {
            "type": "string",
            "description": "Optional. Corporate profile ID for the employer stored in Verteil."
          },
          "salesTaxRegistration": {
            "$ref": "#/components/schemas/commonSalesTaxRegistration"
          }
        },
        "title": "An employer such as a business, government body, department, charity, or financial institution.\nPrimarily intended for providing tax information"
      },
      "commonFareCalculationInfo": {
        "type": "object",
        "properties": {
          "pricingCodeText": {
            "type": "string",
            "description": "Optional. Primary identifier reflecting the method of pricing for a transaction."
          },
          "addlInfoText": {
            "type": "string",
            "description": "Optional. The fare calculation text required in the fare calculation area of an electronic ticket."
          },
          "reportingCodeText": {
            "type": "string",
            "description": "Optional. Secondary identifier reflecting the method of pricing for a transaction used in the reporting process."
          }
        },
        "description": "Information related to the calculation of the Fare amount by applying various rules to determine a final fare for an airline ticket."
      },
      "commonFareComponent": {
        "type": "object",
        "properties": {
          "priceClassRefId": {
            "type": "string",
            "title": "Optional. Identifies price class (fare family or fare brand) within the cabin"
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. Reference to passenger segments that are covered by this fare component"
          },
          "fbc": {
            "type": "string",
            "title": "Optional. Fare basis code. Example: Y26"
          },
          "fareType": {
            "$ref": "#/components/schemas/commonFareTypeCode"
          },
          "seatsLeft": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The number of seats remaining in this RBD. This will be available only of the supplier provides remaining\nseats counts."
          },
          "ticketDesigCode": {
            "type": "string",
            "description": "Optional. The Fare Basis Code Designator shall be placed within this element and removed from the Fare Basis Code element.\nFor example, if the Airline has a fare basis code with a designator like `JFBC/WO`, The `fbc` field will\ncontain `JFBC` and this field will contain `WO`."
          },
          "cancelRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCancelRestriction"
            },
            "description": "Optional. These are a set of qualifying conditions/rules/restrictions that are related to a constrained priced grouping of services for the Cancellation action."
          },
          "changeRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonChangeRestriction"
            },
            "description": "Optional These are a set of qualifying conditions/rules/restriction that are related to a constrained priced grouping of services for a Change/modification action."
          }
        },
        "title": "A portion of an itinerary between two consecutive fare construction points. If the journey has only one fare component,\nthe points of origin and destination are the only fare construction points",
        "required": [
          "paxSegmentRefIds"
        ]
      },
      "commonFareDetail": {
        "type": "object",
        "properties": {
          "passengerRefs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Passengers associated with the specific Fare Detail instance. Allows the Price breakdown of the fare for the offeritem per passenger."
          },
          "price": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "fareWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v4commonFareWaiver"
            },
            "description": "Optional. Validating carrier-assigned fare rule modification or override information."
          },
          "fareComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareComponent"
            },
            "title": "Optional. A portion of an itinerary between two consecutive fare construction points. If the journey has only one fare component,\nthe points of origin and destination are the only fare construction points.\nThis is mandatory in cases where segment level details are present"
          },
          "dealCode": {
            "type": "string",
            "title": "Optional. A tag on the fare used for accounting and backend processing"
          },
          "accountCode": {
            "type": "string",
            "title": "Optional. Corporate account ID E.g. CLID"
          },
          "fareCalculationInfo": {
            "$ref": "#/components/schemas/commonFareCalculationInfo"
          },
          "penaltyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional.\nReference to Penalty IDs. In Reshop scenario the Fee charged by the carrier to make a change for one passenger will be provided in the Penalty referred here."
          }
        },
        "title": "Fare Code Indicator to represent pricing method (IATA PADIS Code List for data element 5387 - Price Type Qualifier) •",
        "required": [
          "passengerRefs",
          "price"
        ]
      },
      "commonFareTypeCode": {
        "type": "string",
        "enum": [
          "FARE_TYPE_UNSPECIFIED",
          "PUBL",
          "MR",
          "PVT",
          "IT",
          "ITD",
          "ITSD",
          "CF",
          "CB",
          "HR",
          "PA",
          "LBR",
          "STU",
          "VFR",
          "CRU"
        ],
        "default": "FARE_TYPE_UNSPECIFIED",
        "description": "Fare type codes\nThis enumeration is expandable, additional values may be added in future.\n\n - FARE_TYPE_UNSPECIFIED: Default unspecified\n - PUBL: Published Fare\n - MR: Marine Fare\n - PVT: Agency Private Fare\n - IT: Inclusive Tours Fare\n - ITD: Inclusive Tours Fare Deferred (BA specific)\n - ITSD: Inclusive Tours Fare Semi Deferred (BA specific)\n - CF: Corporate Fare\n - CB: Contract bulk\n - HR: Humanitarian\n - PA: Private adult\n - LBR: Labour fare\n - STU: Student fare\n - VFR: Visit Friends & Relatives\n - CRU: Cruise fare"
      },
      "commonFeature": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/commonFeatureLocation"
          },
          "category": {
            "$ref": "#/components/schemas/FeatureCategory"
          },
          "subCategory": {
            "$ref": "#/components/schemas/FeatureSubCategory"
          }
        },
        "title": "Identifies a product or service feature. E.g. _FLIGHT.AMENITY.WI_FI_"
      },
      "commonFeatureLocation": {
        "type": "string",
        "enum": [
          "LOCATION_UNSPECIFIED",
          "FLIGHT",
          "AIRPORT",
          "GROUND"
        ],
        "default": "LOCATION_UNSPECIFIED",
        "description": "Enumeration of the locations where the feature is delivered or applies to\nThis enumeration is expandable, additional values may be added in future.\n\n - LOCATION_UNSPECIFIED: Default category\n - FLIGHT: Product or service is delivered on flight\n - AIRPORT: Product or service is delivered in airport\n - GROUND: Product or service is delivered on ground outside airport"
      },
      "commonFeaturesDesc": {
        "type": "object",
        "properties": {
          "descTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. Account or representation of the features"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeature"
            },
            "title": "Optional. Applicable features - e.g. __FLIGHT.AMENITY.WI_FI__"
          },
          "mediaRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. References to media depicting the features"
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. References to pax segments for which these features are applicable"
          }
        },
        "title": "Describes a product or service features",
        "required": [
          "descTexts"
        ]
      },
      "commonFee": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "code": {
            "type": "string",
            "title": "Optional. Fee code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Fee name"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "title": "Optional. Stores the percentage which was used to determine the Fee to be charged in conjunction or not with\n`min_amount` and `max_amount`"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "minAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "approxInd": {
            "type": "boolean",
            "description": "Optional. When true, this fee is approximate."
          },
          "refundInd": {
            "type": "boolean",
            "description": "Optional. When true, fee amount is refundable."
          },
          "descText": {
            "type": "string",
            "title": "Optional. Fee/surcharge Description.  Example: U.S Customs User Fee"
          },
          "includedInBaseFare": {
            "type": "boolean",
            "description": "Optional. Indicates if fee/surcharge is included in base fare."
          }
        },
        "description": "Amount added on to a charge for a specific product, purpose, or service.",
        "required": [
          "amount"
        ]
      },
      "commonIdentityDoc": {
        "type": "object",
        "properties": {
          "identityDocId": {
            "type": "string",
            "description": "Required. Uniquely identifies the document from all other identity documents issued by the state or organization.\ne.g. passport number, drivers license number."
          },
          "identityDocTypeCode": {
            "$ref": "#/components/schemas/IdentityDocDocTypeCode"
          },
          "individual": {
            "$ref": "#/components/schemas/commonIndividual"
          },
          "issuingCountryCode": {
            "type": "string",
            "description": "Optional. 2 letter ISO Country Code. Examples: US, FR."
          },
          "residenceCountryCode": {
            "type": "string",
            "description": "Optional. 2 letter ISO Country Code. Examples: US, FR."
          },
          "issueDate": {
            "type": "string",
            "title": "Optional. The date the identity document was issued.\nISO-8601 format - `yyyy-MM-dd'. E.g. `2021-12-03`"
          },
          "expiryDate": {
            "type": "string",
            "title": "Optional. The date the identity document expires.\nISO-8601 format - `yyyy-MM-dd'. E.g. `2031-12-02`"
          }
        },
        "description": "Any document which may be used to identify a person or verify aspects of a person's personal identity.\nIf issued in a small, standard credit card size form, it is usually called an identity card.\nSome countries issue formal identity documents, while others may require identity verification using informal documents.\nWhen the identity document incorporates a person's photograph, it may be called photo ID.\nIn the absence of a formal identity document, a driver's license may be accepted in many countries for identity verification.\nMost countries accept passports as a form of identification.",
        "required": [
          "identityDocId",
          "identityDocTypeCode"
        ]
      },
      "commonIndividual": {
        "type": "object",
        "properties": {
          "titleName": {
            "type": "string",
            "description": "Optional. A word such as Mr., Mrs., Miss or Dr that is used before an individual's name to indicate the gender, profession or marital status."
          },
          "givenNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. A personal name given to the individual at birth and used before a family name. Also called first name. E.g. JOHN.\nUp to 5 given names can be provided.\nMax length of each given name is 64 characters"
          },
          "surname": {
            "type": "string",
            "title": "Required. Individual's hereditary name(s) common to all members of a family. Also known as family name or last name. E.g. SMITH. Excludes any potential suffix.\nMax length of surname is 64 characters"
          },
          "genderCode": {
            "$ref": "#/components/schemas/IndividualGenderCode"
          },
          "age": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. The age of the individual."
          },
          "birthdate": {
            "type": "string",
            "title": "Optional. The date on which an individual was born. E.g. 2012-02-01"
          }
        },
        "description": "A single human being as distinct from a group, class, or family.",
        "required": [
          "surname"
        ]
      },
      "commonJourneyStageCode": {
        "type": "string",
        "enum": [
          "JOURNEY_STAGE_UNSPECIFIED",
          "PRIOR_TO_DEP",
          "AFTER_DEP",
          "NO_SHOW"
        ],
        "default": "JOURNEY_STAGE_UNSPECIFIED",
        "description": "- PRIOR_TO_DEP: Prior to departure (PDE)\n - AFTER_DEP: After departure (ADE)\n - NO_SHOW: No Show",
        "title": "Enumeration of stages of a passenger journey"
      },
      "commonLegCabinAssociations": {
        "type": "object",
        "properties": {
          "legsAssociatedCabins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonLegsAssociatedCabins"
            },
            "description": "Required. An association of cabin types to 1 or more legs."
          }
        },
        "description": "A container to enable cabins to be associated with legs."
      },
      "commonLegsAssociatedCabins": {
        "type": "object",
        "properties": {
          "datedOperatingLegRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Uniquely identifies a leg within the context of one message."
          },
          "legCabin": {
            "$ref": "#/components/schemas/commonCabin"
          }
        },
        "description": "An association of cabin types to 1 or more legs.",
        "required": [
          "datedOperatingLegRefIds",
          "legCabin"
        ]
      },
      "commonLoyaltyProgram": {
        "type": "object",
        "properties": {
          "allianceCode": {
            "type": "string",
            "description": "Optional. Two or more airlines participating in a commercial relationship or joint venture, where a joint and commonly identifiable product is marketed under a single commercial name or brand."
          },
          "carrierCode": {
            "type": "string",
            "description": "Optional. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "programCode": {
            "type": "string",
            "title": "Optional. Loyalty Program ID: Example: OnBusiness"
          }
        },
        "description": "A rewards program offered by a company to customers who frequently make purchases, which may give a customer advanced access to new products, special sales coupons or free merchandise.\nAt least one of alliance_code or carrier_code or program_code must be set."
      },
      "commonLoyaltyProgramAccount": {
        "type": "object",
        "properties": {
          "loyaltyProgram": {
            "$ref": "#/components/schemas/commonLoyaltyProgram"
          },
          "accountNumber": {
            "type": "string",
            "title": "Required. Loyalty Program account number. Example: ABC123456"
          }
        },
        "description": "An account set up for a customer within a rewards program which holds funds on behalf of that customer.",
        "required": [
          "loyaltyProgram",
          "accountNumber"
        ]
      },
      "commonMarkup": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "code": {
            "type": "string",
            "title": "Optional. Markup code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Markup name"
          }
        },
        "description": "Defines the reason for the markup added by an airline as part of the offer reported as calculation detail. The amount added to the cost price of goods to cover overhead and profit.",
        "required": [
          "amount"
        ]
      },
      "commonMedia": {
        "type": "object",
        "properties": {
          "descText": {
            "type": "string",
            "description": "Optional. Description of the referenced media.\nAny formatting will be in [CommonMark](https://commonmark.org/)."
          },
          "mediaLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonMediaLink"
            },
            "title": "Required. Links to media of different types and sizes"
          }
        },
        "description": "Electronic documents, images, and other files which accompany and support a product's description.",
        "required": [
          "mediaLinks"
        ]
      },
      "commonMediaLink": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "Required. The Uniform Resource Locator that identifies the media and where the it is located.\nAPI consumers are expected to access the media content by following this URL"
          },
          "type": {
            "$ref": "#/components/schemas/commonMediaType"
          },
          "size": {
            "$ref": "#/components/schemas/MediaSize"
          }
        },
        "required": [
          "url"
        ]
      },
      "commonMediaType": {
        "type": "string",
        "enum": [
          "IMAGE",
          "DOC",
          "VIDEO"
        ],
        "default": "IMAGE",
        "description": "- IMAGE: Image\n - DOC: Document\n - VIDEO: Video",
        "title": "Enumeration of media types"
      },
      "commonOfferAssociation": {
        "type": "object",
        "properties": {
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to an Offer for which this payment method applies."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. Identifier for the owner of this Offer and responsible for the delivery of the items.\nFor air content, this is the IATA-defined 2-character code of the carrier owning the offer."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "offerItemRefId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to OfferItems within the Offer for which this payment method applies.\nIf empty, the payment method is applicable to all OfferItems in the Offer."
          }
        },
        "description": "Reference to Offer and optionally OfferItems for which this payment method applies.",
        "required": [
          "offerRefId",
          "ownerCode"
        ]
      },
      "commonOfferFlightAssociations": {
        "type": "object",
        "properties": {
          "paxJourneyRefs": {
            "$ref": "#/components/schemas/commonPaxJourneyRefs"
          },
          "paxSegmentRefs": {
            "$ref": "#/components/schemas/commonPaxSegmentRefs"
          },
          "legRefs": {
            "$ref": "#/components/schemas/commonDatedOperatingLegRefs"
          }
        },
        "title": "The flight level (journey/OD vs segment vs leg) at which a service is associated",
        "required": [
          "paxJourneyRefs",
          "paxSegmentRefs",
          "legRefs"
        ]
      },
      "commonOfferServiceDefinitionRef": {
        "type": "object",
        "properties": {
          "offerFlightAssociations": {
            "$ref": "#/components/schemas/commonOfferFlightAssociations"
          },
          "serviceDefRefId": {
            "type": "string",
            "description": "Required. References a Service Definition within this message."
          }
        },
        "title": "Association of `ServiceDefinition` with a journey/OD, segment or leg in an offer or an order",
        "required": [
          "serviceDefRefId"
        ]
      },
      "commonOrderAssociation": {
        "type": "object",
        "properties": {
          "orderRefId": {
            "type": "string",
            "description": "Required. Reference to an Order for which this payment method applies."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. Identifier for the owner of this Order responsible for the delivery of the items .\nFor air content, this is the IATA-defined 2-character code of the carrier owning the order."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "orderItemRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to Order Item IDs within the Order for which this payment method applies.\nIf empty, the payment method is applicable to all OrderItems in the Order."
          }
        },
        "description": "Reference to Order and optionally OrderItems for which this payment method applies.",
        "required": [
          "orderRefId",
          "ownerCode"
        ]
      },
      "commonOriginDest": {
        "type": "object",
        "properties": {
          "origin": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the origin city or airport code."
          },
          "dest": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the destination city or airport code."
          },
          "paxJourneyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Uniquely identifies a Passenger Journey within the context of one message."
          }
        },
        "title": "The Origin and Destination airport/city pair which confines a passenger journey or an aircraft flight. Business Identifier Fields: - [Station] (Origin Station) IATA Location Code - [Station] (Destination Station) IATA Location Code",
        "required": [
          "origin",
          "dest"
        ]
      },
      "commonPassengerTypeCode": {
        "type": "string",
        "enum": [
          "PTC_UNSPECIFIED",
          "ADT",
          "YADT",
          "CHD",
          "INF"
        ],
        "default": "PTC_UNSPECIFIED",
        "description": "Type of passengers.\n\n - PTC_UNSPECIFIED: Default unspecified\n - ADT: Adult\n - YADT: Young Adult\n - CHD: Child\n - INF: Infant"
      },
      "commonPax": {
        "type": "object",
        "properties": {
          "ptc": {
            "$ref": "#/components/schemas/commonPassengerTypeCode"
          },
          "paxRefId": {
            "type": "string",
            "description": "Optional. Reference to a Passenger ID within this message, associating an infant on lap to this adult Passenger."
          },
          "primaryPaxInd": {
            "type": "boolean",
            "description": "Optional. Indicates if this is the primary passenger."
          },
          "individual": {
            "$ref": "#/components/schemas/commonIndividual"
          },
          "loyaltyProgramAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonLoyaltyProgramAccount"
            },
            "description": "Optional. An account set up for a customer within a rewards program which holds funds on behalf of that customer."
          },
          "citizenshipCountryCode": {
            "type": "string",
            "description": "Optional. 2 letter ISO Country Code. Examples: US, FR."
          },
          "contactInfoRefId": {
            "type": "string",
            "title": "Optional. Reference to contact info"
          },
          "identityDocs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonIdentityDoc"
            },
            "description": "Optional. Documents which may be used to identify a person or verify aspects of a person's personal identity."
          },
          "employer": {
            "$ref": "#/components/schemas/commonEmployer"
          },
          "profileId": {
            "type": "string",
            "description": "Optional. Profile ID of the passenger.\nThis could be Verteil customer profile Id, or an external profile Id."
          },
          "remarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonRemark"
            },
            "title": "Optional. Pax level remarks"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Tags are key-value pairs that can be used to associate additional information with the passenger."
          }
        },
        "description": "Any person except members of the crew to be carried with the consent of the carrier, on board an aircraft.\nHolds the attributes specific to a one booking, from shopping to fulfillment."
      },
      "commonPaxJourney": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "Optional. Total journey time in ISO 8601 format, including the combined air time and connection times."
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. References to passenger segments involved in this journey."
          }
        },
        "description": "A collection of segments which satisfies transportation of passenger for a given origin and destination.",
        "required": [
          "paxSegmentRefIds"
        ]
      },
      "commonPaxJourneyRefs": {
        "type": "object",
        "properties": {
          "paxJourneyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "References to passenger journeys"
          }
        },
        "title": "Holds references to passenger journeys"
      },
      "commonPaxSegment": {
        "type": "object",
        "properties": {
          "cabinAssociationChoice": {
            "$ref": "#/components/schemas/commonCabinAssociation"
          },
          "datedMarketingSegmentRefId": {
            "type": "string",
            "description": "Required.A reference to a unique identifier of a dated marketing segment used in a message."
          },
          "marketingCarrierRbd": {
            "type": "string",
            "description": "Optional. Code used to identify a particular RBD (e.g. P, J, W, M, etc.)."
          },
          "operatingCarrierRbd": {
            "type": "string",
            "description": "Optional. Code used to identify a particular RBD (e.g. P, J, W, M, etc.)."
          }
        },
        "description": "Transportation of a passenger on a Dated Operating Segment.",
        "required": [
          "datedMarketingSegmentRefId"
        ]
      },
      "commonPaxSegmentRefs": {
        "type": "object",
        "properties": {
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "References to passenger segments"
          }
        },
        "description": "Holds references to passenger segments."
      },
      "commonPaymentAssociatedFunctionCriteria": {
        "type": "object",
        "properties": {
          "offerAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonOfferAssociation"
            },
            "title": "Optional. Reference to an Offer and optionally OfferItems for which this payment method applies.\nIf empty, the payment method is applicable to all Offers in the Super Order"
          },
          "orderAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonOrderAssociation"
            },
            "title": "Optional. Reference to an Order and optionally OrderItems for which this payment method applies.\nIf empty, the payment method is applicable to the entire Order"
          },
          "paymentMethodCriteria": {
            "$ref": "#/components/schemas/commonPaymentMethodCriteria"
          }
        },
        "title": "Container of all payment relevant functions in the context of an order reprice/requote  request"
      },
      "commonPaymentFunctionOffer": {
        "type": "object",
        "properties": {
          "offerAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonOfferAssociation"
            },
            "title": "Optional. Reference to an Offer and optionally OfferItems for which this payment method applies.\nIf empty, the payment method is applicable to all Offers in the Super Order"
          },
          "orderAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonOrderAssociation"
            },
            "title": "Optional. Reference to an Order and optionally OrderItems for which this payment method applies.\nIf empty, the payment method is applicable to the entire Order"
          },
          "paymentSupportedMethod": {
            "$ref": "#/components/schemas/commonPaymentSupportedMethod"
          }
        },
        "title": "Container of all payment relevant functions in the context of an order reshop response",
        "required": [
          "paymentSupportedMethod"
        ]
      },
      "commonPaymentMethodCriteria": {
        "type": "object",
        "properties": {
          "paymentTypeCode": {
            "$ref": "#/components/schemas/commonPaymentTypeCode"
          },
          "paymentBrandCode": {
            "$ref": "#/components/schemas/PaymentCardTrxPaymentCardCreditCardVendorCode"
          },
          "cardProductTypeCode": {
            "$ref": "#/components/schemas/PaymentCardTrxPaymentCardCardProductTypeCode"
          },
          "tokenizedCardId": {
            "type": "string",
            "description": "Required. Identifies a tokenized card number in PCI Proxy.\nUsed when calls are routed through PCI Proxy."
          },
          "cardNumber": {
            "type": "string",
            "description": "Required. The actual card number as indicated on the payment card.\nPassing actual card data in this field is strongly discouraged.\nTo be used in scenarios where PCI Proxy cannot be used."
          }
        },
        "description": "Contains information relating to payer preference.",
        "required": [
          "paymentTypeCode",
          "paymentBrandCode",
          "tokenizedCardId",
          "cardNumber"
        ]
      },
      "commonPaymentSupportedMethod": {
        "type": "object",
        "properties": {
          "paymentSurcharge": {
            "$ref": "#/components/schemas/commonPaymentSurcharge"
          },
          "paymentTypeCode": {
            "$ref": "#/components/schemas/commonPaymentTypeCode"
          }
        },
        "description": "Contains information relating to payment method acceptance.",
        "required": [
          "paymentTypeCode"
        ]
      },
      "commonPaymentSurcharge": {
        "type": "object",
        "properties": {
          "preciseAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percentageRangeMin": {
            "type": "number",
            "format": "double",
            "title": "Optional. Maximum Percentage value of a Fee range of a payment method"
          },
          "percentageRangeMax": {
            "type": "number",
            "format": "double",
            "title": "Optional. Minimum Percentage value of a Fee range of a payment method"
          }
        },
        "description": "Information about surcharges for payment methods. E.g. Credit card payment fee charged by an airline.\nIn scenarios when precise payment surcharge is not available a min-max percentage range will be provided.\nThe consumer is expected to anticipate that an additional payment surcharge may be collected as part of payment."
      },
      "commonPaymentTypeCode": {
        "type": "string",
        "enum": [
          "PAYMENT_TYPE_UNSPECIFIED",
          "CA",
          "CC",
          "WL",
          "EX",
          "LK",
          "AI",
          "AG",
          "MS",
          "EP"
        ],
        "default": "PAYMENT_TYPE_UNSPECIFIED",
        "description": "Enumeration of form of payment codes.\n\n - CA: Cash\n - CC: Credit Card\n - WL: Verteil Wallet\n - EX: External Payment Service Provider\n - LK: Inbound form of payment when payment is done through a link to customer.\n - AI: Airline Invoice\n - AG: Airline Agency Credit\n - MS: Miscellaneous\n - EP: IATA EasyPay"
      },
      "commonPenalty": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/commonPenaltyType"
          },
          "descTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Description of the applicable penalty."
          },
          "feeInd": {
            "type": "boolean",
            "title": "Optional. When TRUE, fee(s) may apply based on PenaltyType"
          },
          "netInd": {
            "type": "boolean",
            "title": "Optional. For each penalty involved in a voluntary servicing action, the airline should inform the seller if the penalty is\nnetted (i.e. taken from any amount that the Airline will owe to the customer consequently to the servicing) or\nto be paid (i.e. charged to the customer upfront any servicing action, and even if customer benefits from a subsequent refund/ residual value).\nRead more on netting concept- https://guides.developer.iata.org/v213/docs/netting-concepts"
          },
          "price": {
            "$ref": "#/components/schemas/commonPenaltyPrice"
          }
        },
        "title": "Information relating to penalty changed on making changes to an order",
        "required": [
          "type",
          "price"
        ]
      },
      "commonPenaltyPrice": {
        "type": "object",
        "properties": {
          "baseAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "taxSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTaxSummary"
            },
            "description": "Optional. A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added to the cost of some goods, services, and transactions.\nIf TaxSummary is not provided in the response, tax would be 0 for the fare under scope."
          },
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          }
        },
        "description": "A specialization of price when associated with a Penalty.\nThe amount of money expected, required, or given in payment for something.",
        "required": [
          "totalAmount"
        ]
      },
      "commonPenaltyType": {
        "type": "string",
        "enum": [
          "OTHERS",
          "CHANGE",
          "CANCEL",
          "UPGRADE"
        ],
        "default": "OTHERS",
        "description": "- OTHERS: Any other type of penalties apart from the specified ones\n - CHANGE: Change penalty\n - CANCEL: Cancellation penalty\n - UPGRADE: Upgrade penalty",
        "title": "Enumeration of penalty types"
      },
      "commonPhone": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/components/schemas/commonContactEnumsType"
          },
          "countryDialingCode": {
            "type": "string",
            "description": "Required. Numeric telephone dialing prefixes for the member countries of the International Telecommunication Union (ITU)."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Required. Phone number text. 999-999-9999."
          },
          "extensionNumber": {
            "type": "string",
            "title": "Optional. Phone extension number.  Example: 1234"
          }
        },
        "title": "Telephone number details"
      },
      "commonPieceAllowance": {
        "type": "object",
        "properties": {
          "totalQty": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum pieces of baggage allowed.\n`0` indicates no baggage allowance."
          }
        },
        "title": "Defines the maximum number of each allowable baggage type"
      },
      "commonPostalAddress": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/components/schemas/commonContactEnumsType"
          },
          "streetTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Street name and number. Examples: Main Street, 100 Main Street"
          },
          "cityName": {
            "type": "string",
            "description": "Required. The name, expressed as text, of the city, town or village."
          },
          "postalCode": {
            "type": "string",
            "title": "Required. Postal code. Examples: 11001, 11001-2345"
          },
          "countryName": {
            "type": "string",
            "description": "Optional. The name, expressed as text, of the country."
          },
          "countryCode": {
            "type": "string",
            "description": "Required. 2 letter ISO Country Code. Examples: US, FR."
          },
          "countrySubDivisionName": {
            "type": "string",
            "description": "Optional. The name, expressed as text, of the sub-division of a country. E.g. California."
          }
        },
        "description": "Natural or physical address used for postal service. May be a building address, airport address, etc.",
        "required": [
          "postalCode",
          "countryCode"
        ]
      },
      "commonPreferenceLevel": {
        "type": "string",
        "enum": [
          "REQUIRED",
          "EXCLUDE"
        ],
        "default": "REQUIRED",
        "description": "- REQUIRED: Default required. No other options are to be returned in response\n - EXCLUDE: Exclude. Do not include these options in response",
        "title": "Level of preference of a request criteria in request"
      },
      "commonPriceAndFareDetails": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the carrier for the carriage of one passenger and his/her allowable free baggage.\nThe price in the FareDetail will change based on whether the carrier provides New or Differential price\nin case of a Re-shop similar to the price of the offeritem."
          },
          "penaltyRefId": {
            "type": "string",
            "description": "Optional. Reference to Change Fee at OfferItem level.\n\\\nSome carriers do not provide change fee applicable for one passenger in `fare_details`.\nIn such cases only the fee amount at offer item will be available, which can be known using this reference.\n\\\nThe node will be used only in the context of `ReshopPrice.differential.new` since\nprice of new itinerary during re-shop will be inclusive of change fee.\nThe node will not be present if change fee is nil."
          }
        },
        "description": "A container for Price and Fare detail information.",
        "required": [
          "price"
        ]
      },
      "commonPriceClass": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Required. Price class name. Example: _SUPERSAVER_"
          },
          "featuresDescs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeaturesDesc"
            },
            "description": "Optional. Features of this price class - e.g. _Lounge Access_."
          }
        },
        "description": "A price point within a particular Cabin Type (sometimes referred to as 'Fare Families' or 'Fare Brands').",
        "required": [
          "name"
        ]
      },
      "commonPriceDifferential": {
        "type": "object",
        "properties": {
          "differentialType": {
            "$ref": "#/components/schemas/PriceDifferentialDifferentialType"
          },
          "diff": {
            "$ref": "#/components/schemas/commonDiffPriceAndFareDetails"
          },
          "new": {
            "$ref": "#/components/schemas/commonPriceAndFareDetails"
          },
          "old": {
            "$ref": "#/components/schemas/commonPriceAndFareDetails"
          }
        },
        "description": "For each offer item, this function allows the airline to inform the seller about amount to be paid based on the\ndifference between current and newly re-shopped itinerary.",
        "required": [
          "diff",
          "new"
        ]
      },
      "commonProgram": {
        "type": "object",
        "properties": {
          "programOwner": {
            "$ref": "#/components/schemas/commonProgramOwner"
          },
          "programAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Identifies accounts that may be eligible for discounted or negotiated prices. E.g. Corporate ID and/or CLID"
          },
          "dealCode": {
            "type": "string",
            "description": "Optional. A code which provides access to discounted or negotiated prices."
          }
        },
        "description": "A negotiated program identifier ( e.g. CLID, Deal codes ) to be passed between seller and retailer."
      },
      "commonProgramOwner": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          }
        },
        "title": "Program Owner Information"
      },
      "commonPromotion": {
        "type": "object",
        "properties": {
          "promotionId": {
            "type": "string",
            "description": "Required. Promotion code ID or number. Example: PROMO123."
          },
          "promotionIssuer": {
            "$ref": "#/components/schemas/commonPromotionIssuer"
          }
        },
        "description": "A Promotion and discount code criteria to be passed to the retailer airline that could influence returned offers."
      },
      "commonPromotionIssuer": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc.\nEither `carrier_code` or `travel_agency` is set."
          },
          "travelAgency": {
            "$ref": "#/components/schemas/commonTravelAgency"
          }
        },
        "title": "Promotion Issuer or Sponsor"
      },
      "commonRefund": {
        "type": "object",
        "properties": {
          "descText": {
            "type": "string",
            "description": "Optional. Description. Example: 'Full refund within 30 days of departure'."
          },
          "fixedAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "levelType": {
            "$ref": "#/components/schemas/RefundLevelType"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "minAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "paymentTypeCode": {
            "$ref": "#/components/schemas/commonPaymentTypeCode"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "description": "Optional. Stores a percentage which will be used to determine the refund to be applied in conjunction or not with minimum and maximum amounts."
          }
        },
        "description": "Contains refund type, payment type, and amount attributes \nfor a specific product, purpose, or service."
      },
      "commonRemark": {
        "type": "object",
        "properties": {
          "remarkType": {
            "$ref": "#/components/schemas/RemarkRemarkType"
          },
          "remarkText": {
            "type": "string",
            "title": "Required. Supplementary information text"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Output Only. Remark creation timestamp.",
            "readOnly": true
          },
          "agentId": {
            "type": "string",
            "description": "Optional.\nThe agent who has updated/added the remark."
          }
        },
        "description": "Supplementary information which will not be processed by the system.",
        "required": [
          "remarkText"
        ]
      },
      "commonSalesTaxRegistration": {
        "type": "object",
        "properties": {
          "salesTaxRegistrationId": {
            "type": "string",
            "description": "Optional. Registered identifier of the business purchasing the goods and services.\nFor example, a GST number in India."
          },
          "emailAddressText": {
            "type": "string",
            "description": "Required. The email address which should be used for contact purposes."
          },
          "countryDialingCode": {
            "type": "string",
            "description": "Optional. Numeric telephone dialing prefixes for the member countries of the International Telecommunication Union (ITU)."
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Phone number text. 999-999-9999."
          },
          "streetTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Street name and number. Examples: Main Street, 100 Main Street"
          },
          "cityName": {
            "type": "string",
            "description": "Optional. The name, expressed as text, of the city, town or village."
          },
          "postalCode": {
            "type": "string",
            "title": "Required. Postal code. Examples: 11001, 11001-2345"
          },
          "countryCode": {
            "type": "string",
            "description": "Optional. ISO Country Code (can be extended by bilateral agreement in case of exceptions, e.g. Kosovo). Examples: US, FR."
          }
        },
        "description": "The Identification and contact information of a party purchasing goods or services as registered with Tax authority.",
        "required": [
          "emailAddressText",
          "postalCode"
        ]
      },
      "commonSeat": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "integer",
            "format": "int64",
            "title": "Ordinal number identifying a seat row on a transport vehicle"
          },
          "columnId": {
            "$ref": "#/components/schemas/SeatColumnId"
          },
          "seatCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatCharacteristicCode"
            },
            "description": "Optional. Characteristic of an aircraft seat e.g. A (Aisle seat), E (Exit and emergency exit) etc."
          },
          "seatProfileRefId": {
            "type": "string",
            "description": "Optional. Reference to a Seat Profile ID within this message."
          }
        },
        "description": "A sitting place for a passenger or crew in a cabin compartment on a transport vehicle."
      },
      "commonSeatAssignment": {
        "type": "object",
        "properties": {
          "seatAssignmentAssociations": {
            "$ref": "#/components/schemas/commonSeatAssignmentAssociations"
          },
          "seat": {
            "$ref": "#/components/schemas/commonSeat"
          },
          "serviceDefRefId": {
            "type": "string",
            "description": "Optional. References a Service Definition within this message."
          }
        },
        "description": "The Seat Location selected by the Passenger (via SeatAvailability)\nor assigned to the Passenger by the Airline for a given segment.\nWhen used, only a single Passenger must be referenced within the Service."
      },
      "commonSeatAssignmentAssociations": {
        "type": "object",
        "properties": {
          "paxSegmentRefId": {
            "type": "string",
            "description": "Reference to a PaxSegmentID . This will be a reference to a single passenger segment that will be defined in a data list or pax segment list in the contained message."
          },
          "legsRefs": {
            "$ref": "#/components/schemas/commonDatedOperatingLegRefs"
          }
        },
        "title": "Seat Assignment Associations"
      },
      "commonSeatCharacteristicCode": {
        "type": "string",
        "enum": [
          "CHARACTERISTIC_UNSPECIFIED",
          "NUM_1",
          "NUM_2",
          "NUM_3",
          "NUM_4",
          "NUM_6",
          "NUM_7",
          "NUM_8",
          "NUM_9",
          "NUM_28",
          "NUM_29",
          "NUM_30",
          "A",
          "AA",
          "AB",
          "AC",
          "AG",
          "AJ",
          "AL",
          "AM",
          "AR",
          "AS",
          "AT",
          "AU",
          "AV",
          "AW",
          "B",
          "BA",
          "BK",
          "BC",
          "BE",
          "BR",
          "BS",
          "C",
          "CC",
          "CH",
          "CL",
          "CS",
          "D",
          "DE",
          "E",
          "EA",
          "EC",
          "EK",
          "ES",
          "EX",
          "F",
          "FC",
          "FS",
          "G",
          "GF",
          "GN",
          "GR",
          "H",
          "I",
          "IE",
          "IF",
          "IK",
          "IR",
          "JS",
          "KA",
          "L",
          "LA",
          "LB",
          "LE",
          "LF",
          "LG",
          "LH",
          "LL",
          "LR",
          "LS",
          "LT",
          "M",
          "MA",
          "ML",
          "MS",
          "MX",
          "N",
          "O",
          "OW",
          "P",
          "PE",
          "Q",
          "RS",
          "S",
          "SC",
          "SO",
          "ST",
          "T",
          "TA",
          "U",
          "UP",
          "US",
          "V",
          "W",
          "WA",
          "X",
          "A1",
          "B1",
          "C1",
          "D1",
          "E1",
          "M1",
          "W1",
          "A3",
          "B3",
          "A6",
          "B6",
          "A7",
          "B7",
          "NUM_33",
          "NUM_34",
          "NUM_35",
          "NUM_36",
          "NUM_37",
          "NUM_38",
          "NUM_39",
          "NUM_40",
          "NUM_61",
          "NUM_62",
          "NUM_63",
          "NUM_64",
          "NUM_65",
          "NUM_66",
          "NUM_70",
          "NUM_71",
          "NUM_72",
          "NUM_73"
        ],
        "default": "CHARACTERISTIC_UNSPECIFIED",
        "description": "Enumeration of seat characteristic codes according to PADIS code list 9825.\nThis enumeration is expandable, additional values may be added in future.\n\n - CHARACTERISTIC_UNSPECIFIED: Default unspecified\n - NUM_1: Restricted seat - General\n - NUM_2: Leg rest available\n - NUM_3: Individual video screen - Choice of movies\n - NUM_4: Not a window seat\n - NUM_6: Near galley seat\n - NUM_7: Near toilet seat\n - NUM_8: No seat at this location\n - NUM_9: Center seat (not window, not aisle)\n - NUM_28: Not fitted\n - NUM_29: No recline seat\n - NUM_30: Limited recline seat\n - A: Aisle seat\n - AA: All available aisle seats\n - AB: Seat adjacent to bar\n - AC: Seat adjacent to closet\n - AG: Seat adjacent to galley\n - AJ: Adjacent aisle seats\n - AL: Seat adjacent to lavatory\n - AM: Individual movie screen - No choice of movie selection\n - AR: No seat - airphone\n - AS: Individual airphone\n - AT: Seat adjacent to table\n - AU: Seat adjacent to stairs to upper deck\n - AV: Only available seats\n - AW: All available window seats\n - B: Seat with bassinet facility\n - BA: No seat - bar\n - BK: Blocked Seat for preferred passenger in adjacent seat\n - BC: Seat blocked for Codeshare Partner\n - BE: Seat block designated for Basic Economy\n - BR: Seat is broken – not available for use\n - BS: Business Class Suite\n - C: Crew seat\n - CC: Center section seat(s)\n - CH: Chargeable seat\n - CL: No seat - closet\n - CS: Conditional seat-contact airline\n - D: No seat - exit door\n - DE: Deportee\n - E: Exit and emergency exit seat\n - EA: Not on exit seat\n - EC: AC Power Outlet\n - EK: Economy comfort seat\n - ES: Suite\n - EX: No seat - emergency Exit\n - F: Added seat\n - FC: Front of cabin class/compartment\n - FS: First Class Suite\n - G: Seat at forward end of cabin\n - GF: General facility\n - GN: No seat - galley\n - GR: Group seat - offered to travellers belonging to a group\n - H: Seat with facilities for handicapped/incapacitated passenger\n - I: Seat suitable for adult with an infant IA Inside aisle seats\n - IE: Seat not suitable for child\n - IF: Seat suitable for Child Restraint Fwd-facing\n - IK: Adjacent Seat Blocked for Infant\n - IR: Seat suitable for Child Restraint Aft-facing J Rear facing seat\n - JS: Seat designated for additional Jumpseat K Bulkhead seat\n - KA: Bulkhead seat with movie screen KN Bulkhead, no seat\n - L: Leg space seat\n - LA: No seat – lavatory\n - LB: Rear facing lie flat seat\n - LE: Left facing lie flat seat more left angle\n - LF: Lie flat seat\n - LG: No seat - luggage storage\n - LH: Restricted seat - offered on long-haul segments\n - LL: Left facing lie flat seat\n - LR: Right facing lie flat seat\n - LS: Left side of aircraft\n - LT: Right facing lie flat seat more right angle\n - M: Seat without a movie view\n - MA: Medically OK to travel\n - ML: Seat suitable for Musical Instrument – Large\n - MS: Middle seat\n - MX: Seat suitable for Musical Instrument – Extra Large\n - N: No smoking seat\n - O: Preferential seat\n - OW: Overwing seat(s)\n - P: Extra seat for comfort - arm rest can be raised PC Pet cabin\n - PE: Premium Economy Suite\n - Q: Seat in a quiet zone\n - RS: Right side of aircraft\n - S: Smoking seat\n - SC: Skycouch\n - SO: No seat - storage space\n - ST: No seat - stairs to upper deck\n - T: Rear/Tail section of aircraft\n - TA: No seat - table\n - U: Seat suitable for unaccompanied minors\n - UP: Upper deck\n - US: USB Power Port\n - V: Seat to be left vacant or offered last\n - W: Window seat\n - WA: Window and aisle together\n - X: No facility seat (indifferent seat) Z Buffer zone seat\n - A1: Seat not allowed for infant\n - B1: Seat not allowed for medical\n - C1: Seat not allowed for unaccompanied minor\n - D1: Restricted recline seat\n - E1: Seat with Airbag in Seatbelt\n - M1: Seat with movie view\n - W1: Window seat without window\n - A3: Individual video screen - No choice of movie\n - B3: Individual video screen-Choice of movies, games, information, etc\n - A6: In front of galley seat\n - B6: Behind galley seat\n - A7: In front of toilet seat\n - B7: Behind toilet seat\n - NUM_33: Seat designated for Tier 1\n - NUM_34: Seat designated for Tier 2\n - NUM_35: Seat designated for Tier 3\n - NUM_36: Seat designated for Tier 4\n - NUM_37: Seat designated for Neighbor-Free Seat\n - NUM_38: Seat block designated for Reservation Agents\n - NUM_39: Seat block designated for Reservations or Airport\n - NUM_40: Seat block designated for Airport Agents\n - NUM_61: Seat designated for Fare 1\n - NUM_62: Seat designated for Fare 2\n - NUM_63: Seat designated for Fare 3\n - NUM_64: Seat designated for Fare 4\n - NUM_65: Seat designated for Fare 5\n - NUM_66: Seat designated for Fare 6\n - NUM_70: Individual video screen - services unspecified\n - NUM_71: No seat - access to handicapped lavatory\n - NUM_72: Undesirable seat\n - NUM_73: Conditional chargeable seat"
      },
      "commonSeatColumn": {
        "type": "object",
        "properties": {
          "columnId": {
            "$ref": "#/components/schemas/SeatColumnId"
          },
          "seatCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatCharacteristicCode"
            },
            "description": "Optional. Characteristic of a seat e.g. A (Extra leg room), E (Exit row) etc."
          }
        },
        "description": "A sitting place column for a passenger or crew in a cabin compartment on a transport vehicle.",
        "required": [
          "columnId"
        ]
      },
      "commonSeatMap": {
        "type": "object",
        "properties": {
          "paxSegmentRefId": {
            "type": "string",
            "description": "Required. References a Passenger Segment ID from this message or from wiithin the SeatAvailability request."
          },
          "cabinCompartments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCabinCompartment"
            },
            "description": "Required. A physical aircraft compartment where passenger seats are installed, classified by a given Cabin Type.\nThese compartments are typically defined based on fare paid or facilities and services offered."
          }
        },
        "description": "A list of cabins and the seats within in.\nThis information can be used by the Seller to render a graphical Seat Map.",
        "required": [
          "paxSegmentRefId",
          "cabinCompartments"
        ]
      },
      "commonSeatProfile": {
        "type": "object",
        "properties": {
          "seatProfileId": {
            "type": "string",
            "description": "Required. Unique identifier associated to this Seat Profile."
          },
          "seatCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatCharacteristicCode"
            },
            "description": "Characteristic of an aircraft seat e.g. A (Aisle seat), E (Exit and emergency exit) etc."
          },
          "marketingInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeaturesDesc"
            },
            "title": "Optional. Describes the seat characteristics"
          }
        },
        "description": "Airline defined group of seats sharing common characteristics.",
        "required": [
          "seatCharCodes"
        ]
      },
      "commonSeatRow": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Required. Ordinal number identifying a seat row on an aircraft."
          },
          "rowCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatRowCharacteristicCode"
            },
            "description": "Optional. Characteristic of a seat row e.g. A (Extra leg room), E (Exit row) etc."
          },
          "seats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonAvailableSeat"
            },
            "description": "Required. Seats in this row."
          }
        },
        "description": "Row of passenger seats located in the cabin.",
        "required": [
          "rowNumber"
        ]
      },
      "commonSeatRowCharacteristicCode": {
        "type": "string",
        "enum": [
          "CHARACTERISTIC_UNSPECIFIED",
          "A",
          "B",
          "C",
          "CH",
          "D",
          "E",
          "K",
          "M",
          "MV",
          "N",
          "X",
          "CC",
          "EC",
          "EL",
          "ER",
          "FC",
          "I",
          "L",
          "S",
          "U",
          "XC",
          "Z"
        ],
        "default": "CHARACTERISTIC_UNSPECIFIED",
        "description": "Enumeration of codes identifying seat row characteristics.\nDefined by PADIS code list 9864.\nThis enumeration is expandable, additional values may be added in future.\n\n - CHARACTERISTIC_UNSPECIFIED: Default unspecified\n - A: Extra leg room\n - B: Buffer row\n - C: Row with cabin facilities in a designated column\n - CH: Chargeable seat\n - D: Seat restrictions apply in this row\n - E: Exit row\n - K: Overwing row\n - M: Maindeck row\n - MV: Row with movie screen\n - N: No-smoking row\n - X: Not overwing row\n - CC: Row with cabin facilities in an undesignated column\n - EC: Exit row with cabin facilities in a designated column\n - EL: Exit left\n - ER: Exit right\n - FC: Front of cabin/class compartment\n - I: Indifferent row\n - L: Lowerdeck row\n - S: Smoking row\n - U: Upperdeck row\n - XC: Exit row with cabin facilities in an undesignated column\n - Z: Row does not exist"
      },
      "commonSelectedALaCarteOfferItem": {
        "type": "object",
        "properties": {
          "offerFlightAssociations": {
            "$ref": "#/components/schemas/commonOfferFlightAssociations"
          },
          "qty": {
            "type": "integer",
            "format": "int64",
            "description": "Required. Quantity to allow the ordering of more than one instances of the related a la carte OfferItem."
          }
        },
        "description": "Use to specify the quantity of Offer Items from the A La Carte Offer Items.",
        "required": [
          "qty"
        ]
      },
      "commonSelectedBundleServices": {
        "type": "object",
        "properties": {
          "selectedServiceRefId": {
            "type": "string",
            "description": "Required. Reference to the Service (within the Offer Item) form which the Service Bundle is contained."
          },
          "selectedServiceDefinitionRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to the Service Definition selected by the Passenger as part of a service bundle.\nIf not provided, it implies that all constituent service definitions in the bundle are selected."
          }
        },
        "title": "For service bundle selection - only to be used for bundles with optional choices (e.g. pick 2 out of 4)",
        "required": [
          "selectedServiceRefId"
        ]
      },
      "commonSelectedOffer": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier providing the offer."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to the selected Offer ID (either a standard Offer or an a-la-carte Offer)\nreturned in a previous shopping response."
          },
          "selectedOfferItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSelectedOfferItem"
            },
            "description": "Required. OfferItem selected by the Passenger for inclusion in the requested Order."
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to augmentations."
          }
        },
        "title": "An Offer requested for pricing",
        "required": [
          "ownerCode",
          "offerRefId",
          "selectedOfferItems"
        ]
      },
      "commonSelectedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemRefId": {
            "type": "string",
            "description": "Required. Reference to the OfferItem ID of the selected OfferItem (contained in either a standard Offer or an a-la-carte Offer)\nreturned in a previous shopping response."
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Reference to passenger(s) for which this OfferItem and selected Services (in case of Service Bundles) applies."
          },
          "selectedBundleServices": {
            "$ref": "#/components/schemas/commonSelectedBundleServices"
          },
          "selectedALaCarteOfferItem": {
            "$ref": "#/components/schemas/commonSelectedALaCarteOfferItem"
          },
          "selectedSeat": {
            "$ref": "#/components/schemas/commonSelectedSeat"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Augmentation references"
          }
        },
        "description": "OfferItem selected by the Passenger for inclusion in the requested Order.\nRepeat occurrence of OfferItem if different passengers want to select different service options,\ndifferent quantities of a-la-carte items or different seat locations.\nAs a minimum, all mandatory OfferItems from a desired Offer should be explicitly defined within these selections\nand should repeat the same Passenger associations defined in the originating OfferItems.\nOptional OfferItems may then be appended as further items selected by the Passenger.\nOfferItems from the originating Offers may take on two different forms,\nwhich in turn drives how the ALaCarteSelection element is to be used\n- If the OfferItem referenced comes originally from an a-la-carte Offer,\nthen the ALaCarteSelection element should be used to defined the Quantity of said OfferItem.\nOn the other hand, if the OfferItem comes from a standard type of Offer in the previous shopping response,\nthe ALaCarteSelection element should not be used, as the quantity is explicitly driven by\nwhat is defined in that OfferItem's associations (to passengers and/or flight segments).",
        "required": [
          "offerItemRefId",
          "paxRefIds"
        ]
      },
      "commonSelectedSeat": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "integer",
            "format": "int64",
            "title": "Seat Row number. Example: 2"
          },
          "columnId": {
            "type": "string",
            "description": "Seat column to identify a particular seat position on an aircraft."
          }
        },
        "title": "Identifies a seat selected"
      },
      "commonServiceBundle": {
        "type": "object",
        "properties": {
          "minServiceQty": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. The minimum number of service definitions that may be selected from those in the bundle."
          },
          "maxServiceQty": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. The maximum number of service definitions that may be selected from those in the bundle.\nThe default is no limit."
          },
          "serviceDefRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. References to services included in the bundle"
          }
        },
        "description": "A set of services offered for sale as a single service.",
        "required": [
          "serviceDefRefIds"
        ]
      },
      "commonServiceDefinition": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "title": "Optional. IATA-defined 2-character code of the carrier owning the service"
          },
          "name": {
            "type": "string",
            "title": "Required. Service name. Example: _Lounge Pass_"
          },
          "airlineTaxonomy": {
            "$ref": "#/components/schemas/commonAirlineTaxonomy"
          },
          "serviceCode": {
            "type": "string",
            "title": "Optional. Airline specific service code which can be associated with the Reason for Issuance Sub Code.\nSample implementer encoding: XLEG for Extra Leg Room Seat XBAG for Extra Bag"
          },
          "serviceDefAssociation": {
            "$ref": "#/components/schemas/commonServiceDefinitionAssociation"
          },
          "featuresDescs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeaturesDesc"
            },
            "description": "Optional. A representation of major characteristics or features of the service."
          }
        },
        "description": "Description and characteristics of a non-flight product or service that can be separately sold and delivered. E.g. bag, seat, meal on a flight.",
        "required": [
          "name",
          "airlineTaxonomy"
        ]
      },
      "commonServiceDefinitionAssociation": {
        "type": "object",
        "properties": {
          "baggageAllowanceRefId": {
            "type": "string",
            "title": "Required. Reference to a Baggage Allowance\nEither `baggage_allowance_ref_id` or `service_bundle` is set"
          },
          "serviceBundle": {
            "$ref": "#/components/schemas/commonServiceBundle"
          }
        },
        "description": "Service Definition Association Choice to determine if the information of this ServiceDefinition needs to be extended\nwith specific Bag or Seat characteristics or whether the ServiceDefinition is used as a bundle of further\nServiceDefinitions.",
        "required": [
          "baggageAllowanceRefId",
          "serviceBundle"
        ]
      },
      "commonStation": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string",
            "title": "Required. IATA 3-letter code specifying the city or airport code"
          },
          "terminalName": {
            "type": "string",
            "description": "Optional. The name of the terminal."
          },
          "schedDateTime": {
            "type": "string",
            "title": "Required. The Scheduled Date and Time of arrival of the aircraft at the terminal or the departure from gate.\nWill be in ISO-8601 format - `yyyy-MM-dd'T'HH:mm`. E.g. `2021-12-03T10:15`"
          }
        },
        "description": "Defines a transport point or station.",
        "required": [
          "stationCode",
          "schedDateTime"
        ]
      },
      "commonSurcharge": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "breakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFee"
            },
            "description": "Optional. Individual surcharges applied."
          }
        },
        "description": "Amount added on to a usual charge for a specific product, purpose, or service.",
        "required": [
          "totalAmount"
        ]
      },
      "commonTax": {
        "type": "object",
        "properties": {
          "taxCode": {
            "type": "string",
            "title": "Optional. Tax Code. Example: AY, GB"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "descText": {
            "type": "string",
            "title": "Optional. Tax short description. Example: $4 per flight segment, per passenger (U.S. domestic segment tax)"
          },
          "refundInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax amount is refundable."
          },
          "qualifierCode": {
            "type": "string",
            "title": "Optional. Used to specify if current, paid, additional taxes Refer to IATA PADIS Code list data element 5305"
          },
          "collectionInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax amount must be collected."
          }
        },
        "description": "A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added\nto the cost of some goods, services, and transactions.",
        "required": [
          "amount"
        ]
      },
      "commonTaxSummary": {
        "type": "object",
        "properties": {
          "totalTaxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "allRefundableInd": {
            "type": "boolean",
            "description": "Optional. When true, all tax breakdown amounts are refundable."
          },
          "approximateInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax is approximate."
          },
          "collectionInd": {
            "type": "boolean",
            "description": "Optional. When true, all specified tax breakdowns must be collected."
          },
          "breakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTax"
            },
            "description": "Optional. Individual tax breakdown.\nThis will not be provided during shopping but will be available from subsequent pricing response onwards."
          }
        },
        "title": "Tax summary information, including total tax amount and optional tax breakdown",
        "required": [
          "totalTaxAmount"
        ]
      },
      "commonTravelAgency": {
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Required. Unique identifier of this travel agency."
          },
          "officeId": {
            "type": "string",
            "description": "Optional. Unique identifier of the office involved in the transaction."
          },
          "industryCode": {
            "type": "string",
            "title": "Optional. IATA number or TIDS numeric code of the user's office if `agencyType` is IATA or TIDS"
          },
          "agencyType": {
            "$ref": "#/components/schemas/TravelAgencyAgencyType"
          },
          "travelAgentId": {
            "type": "string",
            "description": "Optional. Travel agent information.\nUnique identifier of the travel agent involved in the transaction."
          }
        },
        "description": "Travel Agency party information."
      },
      "commonWarning": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "A code corresponding to the processing warning that can be handled by API consumer.\nPossible warnings codes that can be returned will be documented against each service"
          },
          "message": {
            "type": "string",
            "description": "Free text description of the provided warning."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            },
            "description": "Optional. Any type object providing further details about the warning."
          }
        },
        "description": "Contains information related to potential business errors/warnings detected during\nprocessing of the preceding request."
      },
      "commonWeightAllowance": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/commonWeightUnit"
          },
          "maxWeight": {
            "type": "number",
            "format": "float",
            "title": "Required. Maximum weight value - e.g. 30.0"
          },
          "totalMaxWeight": {
            "type": "number",
            "format": "float",
            "description": "Optional. maximum weight for all the combined pieces within this baggage allowance."
          }
        },
        "description": "Baggage weight allowance with application information.",
        "required": [
          "unit",
          "maxWeight"
        ]
      },
      "commonWeightUnit": {
        "type": "string",
        "enum": [
          "WEIGHT_UNIT_UNSPECIFIED",
          "KG",
          "LB"
        ],
        "default": "WEIGHT_UNIT_UNSPECIFIED",
        "description": "- WEIGHT_UNIT_UNSPECIFIED: Default unspecified\n - KG: Kilogram\n - LB: Pound",
        "title": "Enumeration of units of measurement for weight"
      },
      "offerALaCarteOffer": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier providing the offer."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "offerItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerALaCarteOfferItem"
            },
            "description": "A priced grouping of one or more services within an Offer.\nThe A La Carte Offer Item assigns a total price for all included services\nfor all passengers and all segments referenced. Once constructed, the OfferItem cannot be modified."
          },
          "offerExpirationTimeLimit": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z\nUpon expiry, the expectation is that the offer is no longer retrievable and the shopping process must begin again.\nNote the presence of an Offer Time Limit does not indicate either a guarantee of price or inventory against a given\nOffer item within the Offer. Should the offer time limit expire, any other time limit also expires unless an Order\nhas been created or changed."
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Augmentation references\nAPI consumers must relay all `Augmentation`s referred in the offer/offer item they select in\nsubsequent price request (`OfferPriceRQ`)."
          }
        },
        "description": "A proposal to sell a specific set of products or Services under specific conditions, for a certain price.\nCan be the response to a shopping request.\nA La Carte Offer is defined as a container for A La Carte Offer Items.\nThis supports a shopping basket concept for non-flight services.\nThe main purpose of this structure is to reduce the size of the messages\nby inserting Offer Items which are applicable to multiple flight-related Offers.",
        "required": [
          "ownerCode"
        ]
      },
      "offerALaCarteOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Required. Uniquely identifies an offer item within an Offer."
          },
          "eligibility": {
            "$ref": "#/components/schemas/offerEligibility"
          },
          "unitPrice": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "service": {
            "$ref": "#/components/schemas/offerALaCarteService"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Augmentation references\nAPI consumers must relay all `Augmentation`s referred in the offer/offer item they select in\n price request (`OfferPriceRQ`)."
          }
        },
        "description": "A priced grouping of one or more services within an Offer.\nThe A La Carte Offer Item assigns a total price for all included services\nfor all passengers and all segments referenced. Once constructed, the OfferItem cannot be modified.",
        "required": [
          "offerItemId",
          "eligibility",
          "unitPrice",
          "service"
        ]
      },
      "offerALaCarteService": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "Required. Uniquely Identifies a Service within the context of this message."
          },
          "serviceDefRefId": {
            "type": "string",
            "description": "Required. References a Service Definition within this message."
          }
        },
        "description": "The instance of a specific flight or Service Definition as it has been offered (and eventually ordered and consumed)\nin the context of a specific Offer and/or Order.\nAt the time of shopping, a service can be sold to multiple passengers on a given journey.\nAt time of order, the services should be applied to a single passenger on a single segment.",
        "required": [
          "serviceId",
          "serviceDefRefId"
        ]
      },
      "offerAddOfferItem": {
        "type": "object",
        "properties": {
          "flightRequest": {
            "$ref": "#/components/schemas/offerFlightRequest"
          },
          "flightRelatedCriteria": {
            "$ref": "#/components/schemas/offerFlightRelatedCriteria"
          },
          "offerCriteria": {
            "$ref": "#/components/schemas/offerOfferCriteria"
          },
          "responseControls": {
            "$ref": "#/components/schemas/offerResponseControls"
          }
        },
        "required": [
          "flightRequest"
        ]
      },
      "offerAddedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Required. Uniquely identifies an offer item within an Offer."
          },
          "existingOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerExistingOrderItem"
            },
            "description": "Optional. Provides information about the OrderItem and service which will be replaced by the offeritem.\nfollowing the acceptance of the Reshopped Offer."
          },
          "reshopPrice": {
            "$ref": "#/components/schemas/offerReshopPrice"
          },
          "offeredServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOfferedService"
            },
            "description": "Required. Offered Service is the instance of a specific flight or Service Definition as it has been offered (and eventually ordered and consumed)\nin the context of a specific Offer and/or Order."
          }
        },
        "description": "A priced grouping of one or more services within an Added Offer.",
        "required": [
          "offerItemId",
          "existingOrderItems",
          "reshopPrice",
          "offeredServices"
        ]
      },
      "offerAffectedOrderItemRequest": {
        "type": "object",
        "properties": {
          "orderItemRefId": {
            "type": "string",
            "description": "Required. Reference to the Order Item requested for deletion."
          },
          "retainServiceRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Reference to the Service within the specified Order Item which the Passenger would like the Airline to retain and\nreturn within the proposed Offer Item(s) in the OrderReshopRS. Not supported currently"
          }
        },
        "description": "Contains affected existing order items and related services that will be impacted by any new offers in the message.\nThe primary use case is when an existing order item is to be deleted or partial deletion either with a replacement\nin a new offer or an offer to be used for the deletion.",
        "required": [
          "orderItemRefId"
        ]
      },
      "offerAffinityDepArrivalRequest": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string",
            "description": "Required. IATA defined code identifying a city or station."
          },
          "dateTimeFrom": {
            "type": "string",
            "title": "Required. The customer's requested departure/arrival _date time from_ as part of a date time range.\nShould be in ISO-8601 format - `yyyy-MM-dd'T'HH:mm`. E.g. `2021-12-03T10:15`"
          },
          "dateTimeTo": {
            "type": "string",
            "title": "Optional. The customer's requested departure/arrival _date time to_ as part of a date time range.\nShould be in ISO-8601 format - `yyyy-MM-dd'T'HH:mm`. E.g. `2021-12-03T10:15`"
          }
        },
        "description": "Departure or arrival information for affinity shopping requests."
      },
      "offerAffinityOriginDestination": {
        "type": "object",
        "properties": {
          "affinityDepRequest": {
            "$ref": "#/components/schemas/offerAffinityDepArrivalRequest"
          },
          "affinityArrivalRequest": {
            "$ref": "#/components/schemas/offerAffinityDepArrivalRequest"
          },
          "cabinCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCabinCode"
            },
            "title": "Optional. Cabin preference. If not provided, offers on all cabins are eligible to be returned"
          }
        },
        "description": "Origin and Destination information for affinity shopping requests."
      },
      "offerAffinityShoppingCriteria": {
        "type": "object",
        "properties": {
          "affinityOriginDestinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerAffinityOriginDestination"
            },
            "description": "Required. Origin and Destination information for affinity shopping requests."
          }
        },
        "title": "A container for a flight request based on trip time periods, proximity, travel budget etc.\nCurrently trip time periods based search is supported",
        "required": [
          "affinityOriginDestinations"
        ]
      },
      "offerAirShoppingRQ": {
        "type": "object",
        "properties": {
          "flightRequest": {
            "$ref": "#/components/schemas/offerFlightRequest"
          },
          "flightRelatedCriteria": {
            "$ref": "#/components/schemas/offerFlightRelatedCriteria"
          },
          "offerCriteria": {
            "$ref": "#/components/schemas/offerOfferCriteria"
          },
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPax"
            },
            "description": "Required. Details of the passengers.\nKey is `pax_id` and value the corresponding `Pax` data\nFor anonymous shopping, this should provide each pax PTC\nFor personalized shopping, this should further qualify individual pax - like name, loyalty account Id etc."
          },
          "paxJourneys": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/offerRequestPaxJourney"
            },
            "title": "Optional. Details of passenger journeys.\nKey is `pax_journey_id` and value the corresponding `RequestPaxJourney` data.\nIntended for providing reference from `SpecificOriginDestCriteria`"
          },
          "responseControls": {
            "$ref": "#/components/schemas/offerResponseControls"
          }
        },
        "title": "AirShopping Request message"
      },
      "offerAirShoppingRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Contains information related to potential business errors detected during processing of the preceding request."
          },
          "offersSummary": {
            "$ref": "#/components/schemas/offerOffersSummary"
          },
          "offers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/offerNewOffer"
            },
            "description": "A proposal to sell a specific set of products or Services under specific conditions, for a certain price.\nKey is Offer ID and value the corresponding Offer.\nOffer ID is the carrier assigned ID which uniquely identifies a specific Offer across several messages.\nOffer ID facilitates the tracking and verification of individually priced offer(s) selected from the shopping response."
          },
          "priceCalendars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerPriceCalendar"
            },
            "description": "Optional. Calendar based Flight Price.\nThis capability supports multi-day calendar shopping, e.g. returning priced flight offers\nfor a specified period before and/or after the actual requested date."
          },
          "sortedOfferGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOffersGroup"
            },
            "description": "Offers grouped by `ResponseControls.group_by' parameter and ordered by `ResponseControls.order_by` parameter.\nThis may be leveraged for displaying flight wise offers in shopping results page.\n\nGrouping, if requested, will be based on PaxJourney (for one way shopping) or PaxJourney combination (for return shopping).\nEach OfferGroup in this list would then contain offers on a specific PaxJourney (i.e. specific flight or connecting flights).\nWithin each OfferGroup, `other_offer_ref_ids` will be ordered based on `ResponseControls.order_by`.\nThe overall ordering of `sorted_offer_groups` will again be based on `ResponseControls.order_by` applied on offers identified by\n`OffersGroup.best_offer_ref_id`.\n\nDuring aggregated shopping (involving more than one carrier or channel), results are returned as stream of `AirShoppingRS` messages.\nThis field in each `AirShoppingRS` provides ordering of relevant offers returned in that `AirShoppingRS`\nas well as all preceding `AirShoppingRS`s in the stream.\nThe number of offers references in `sorted_offer_groups` will never be more than limit specified by\n`com.verteil.air.v4.offer.ResponseControls.results_limit`.\nConsumers can drop an Offer returned in earlier `AirShoppingRS` if its `offerId` is not referred within `sorted_offer_groups`\nin latest `AirShoppingRS`. Once an `offerId` is dropped, it will never reappear in subsequent `AirShoppingRS`s in the stream.\n\nFor e.g., assume that a one way aggregated shopping request was made with `ResponseControls.results_limit` 100.\n1. As soon as offers are returned by an airline participating in the aggregated shopping, it will be returned as the\n   first `AirShoppingRS` in the response stream. Assume that 40 offers were returned.\n   There will be 40 offerIds across all the OffersGroups in `sorted_offer_groups`.\n2. As soon as offers are returned by another airline participating in the aggregated search, it will be returned as\n   the second `AirShoppingRS` in the response stream. Assumed that 50 offers were returned by second airline. The\n   `sorted_offer_groups` in this `AirShoppingRS` will include 90 `offer_id`s (40 + 50).\n3. As soon as offers are returned by a third airline participating in the aggregated search, it will be returned as\n   the third `AirShoppingRS` in the response stream. Assume that 40 offers were returned by third airline.\n   `sorted_offer_groups` in the third `AirShoppingRS` will contain 100 offerIds.\n   30 offerIds were dropped since they spilled over the 100 `results_limit`. These may include offerIds of\n   offers returned by first, second and/or third airline.\n\nPlease note that the offers getting included in the result is strongly influenced by the request parameter\n`ResponseControls.result_preference`"
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent `FlightPriceRQ`\nKey is Augmentation ID and value the corresponding `Struct` type data."
          }
        },
        "title": "AirShopping Response message"
      },
      "offerBaggageAllowanceSpec": {
        "type": "object",
        "properties": {
          "paxJourneyRefs": {
            "$ref": "#/components/schemas/commonPaxJourneyRefs"
          },
          "paxSegmentRefs": {
            "$ref": "#/components/schemas/commonPaxSegmentRefs"
          },
          "legsRefs": {
            "$ref": "#/components/schemas/commonDatedOperatingLegRefs"
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "References to passengers for whom the allowance apply"
          },
          "baggageAllowanceRefId": {
            "type": "string",
            "title": "Reference to applicable baggage allowance"
          }
        },
        "description": "Specification of baggage allowances eligible for a set of passengers on a set of pax journeys."
      },
      "offerBaggageCriteria": {
        "type": "object",
        "properties": {
          "allowanceType": {
            "$ref": "#/components/schemas/commonBaggageAllowanceType"
          },
          "perfLevel": {
            "$ref": "#/components/schemas/commonPreferenceLevel"
          }
        },
        "title": "Baggage criteria used to filter shopping results\nE.g. include offers with checked baggage allowance",
        "required": [
          "allowanceType"
        ]
      },
      "offerCarrierCriteria": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "title": "Required. IATA-defined 2-character code of the carrier"
          },
          "perfLevel": {
            "$ref": "#/components/schemas/commonPreferenceLevel"
          }
        },
        "description": "Airline preferences for a shopping request.",
        "required": [
          "carrierCode"
        ]
      },
      "offerChangedOffer": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Required. Uniquely Identifies an Offer within the context of one message."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier providing the offer."
          },
          "addOfferItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerAddedOfferItem"
            },
            "description": "Optional. Offers presented in response to a reshop query with Add or Replace function.\nIf original query also specified items for deletion, the suggested OfferItems here could be meant to replace the\nOrderItems specified in the request's Delete function.\nPrice and FareDetails can be presented either in the “Differential” or \"New\" structure based on airline behaviour."
          },
          "deleteOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOrderItemDeletionOfferItem"
            },
            "description": "Optional. OrderItems which the Airline confirms can be deleted from the current order in a subsequent Update. E.g. Flight, seat and ancillary\nOptionally, a price differential can be added to each OrderItem occurrence being deleted. It will have information of refund, amount held (if any) and cancellation penalty (if any) in addition to the value of the orderitem."
          },
          "offerExpirationTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Required. The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z\nUpon expiry, the expectation is that the offer is no longer retrievable and the shopping process must begin again.\nNote the presence of an Offer Time Limit does not indicate either a guarantee of price or inventory against a given\nOffer item within the Offer. Should the offer time limit expire, any other time limit also expires unless an Order\nhas been created or changed.\nWhen an offer does not have an expiry the time limit will value will be 9999-12-31T23:59:59Z"
          },
          "paymentTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format by which a commitment to pay must be made for the confirmed items in the offer. Examples: 2015-01-13T13:59:38Z"
          },
          "priceGuaranteeTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format after which the offer price is no longer guaranteed. Examples: 2015-01-13T13:59:38Z"
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. Commissions applicable on the offer."
          },
          "totalPrice": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "journeyOverviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerJourneyPriceClass"
            },
            "description": "Optional. Price class information per Journey. The order of the array will be the order of the flights in the itinerary.\nThis is mandatory in re-shop scenarios."
          },
          "baggageAllowanceSpecs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerBaggageAllowanceSpec"
            },
            "title": "Optional. Eligible baggage allowances for passengers"
          },
          "penaltyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Reference to penalties applicable on this offer"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "A proposal to sell a specific set of products or services under specific conditions, for a certain price.\nThe OfferId of this offer would be the key against which this offer is mapped (in `verteil.air.v4.offer.OrderReshopRS.reshop_offers`).",
        "required": [
          "offerId",
          "ownerCode",
          "offerExpirationTimeLimit",
          "totalPrice"
        ]
      },
      "offerConnectionCriteria": {
        "type": "object",
        "properties": {
          "connectionCriteriaId": {
            "type": "string",
            "description": "Required. Unique identifier assigned to this transfer preference."
          },
          "minConnectionDuration": {
            "type": "string",
            "description": "Optional. Minimum connection duration preference - in ISO 8601 format."
          },
          "maxConnectionDuration": {
            "type": "string",
            "description": "Optional. Maximum connection duration preference - in ISO 8601 format."
          },
          "maxConnectionQty": {
            "type": "integer",
            "format": "int64",
            "title": "Optional. Maximum number of connections.\nPlease note that FlightCriteria should be used to search for non stop flights"
          },
          "stationCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerStationCriteria"
            },
            "description": "Optional. The customer's requested Station criteria."
          }
        },
        "description": "Customer's requested connection information.",
        "required": [
          "connectionCriteriaId"
        ]
      },
      "offerEligibility": {
        "type": "object",
        "properties": {
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Reference to the passengers who are elibigle for this Offer Item"
          },
          "flightAssociations": {
            "$ref": "#/components/schemas/commonOfferFlightAssociations"
          }
        },
        "description": "Refers to the Passengers or segments for which this offer item is eligible."
      },
      "offerExistingOrderItem": {
        "type": "object",
        "properties": {
          "orderItemRefId": {
            "type": "string",
            "description": "Required. The ID of the existing Order Item."
          },
          "existingServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerExistingService"
            },
            "description": "Optional. Provides information about the service which will be replaced in the reshop process."
          }
        },
        "description": "Provides information about the OrderItem and service which will be replaced by the offeritem.\nfollowing the acceptance of the Reshopped Offer."
      },
      "offerExistingService": {
        "type": "object",
        "properties": {
          "serviceRefId": {
            "type": "string",
            "description": "Required. The ID of the existing Service."
          }
        },
        "description": "Provides information about the service which will be replaced in the reshop process."
      },
      "offerFareCriteria": {
        "type": "object",
        "properties": {
          "fareTypeCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareTypeCode"
            },
            "description": "Optional. Fare type preferences. E.g. Agency Private fare, Marine fare etc."
          }
        },
        "description": "Fare criteria used to filter shopping results."
      },
      "offerFlightCharacteristicsCriteria": {
        "type": "object",
        "properties": {
          "flightCharacteristic": {
            "$ref": "#/components/schemas/FlightCharacteristicsCriteriaFlightCharacteristic"
          },
          "perfLevel": {
            "$ref": "#/components/schemas/commonPreferenceLevel"
          }
        },
        "title": "Flight characteristic preferences (including non-stop, red eye, etc.)",
        "required": [
          "flightCharacteristic"
        ]
      },
      "offerFlightCriteria": {
        "type": "object",
        "properties": {
          "flightCharacteristicsCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerFlightCharacteristicsCriteria"
            },
            "title": "Flight characteristic preferences (including non-stop, red eye, etc.)"
          }
        },
        "title": "Flight filter criteria, namely flight characteristics (Direct, Non Stop, Red Eye)"
      },
      "offerFlightRelatedCriteria": {
        "type": "object",
        "properties": {
          "carrierCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerCarrierCriteria"
            },
            "title": "Optional. Carriers that should/should-not participate in this shopping request.\nIf not provided, VDC will decide carriers based on the routes being searched\nIf `REQUIRED` and `EXCLUDE` preference levels are mixed, only `REQUIRED` will be considered"
          },
          "connectionCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerConnectionCriteria"
            },
            "description": "Optional. Customer's requested connection information."
          },
          "flightCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerFlightCriteria"
            },
            "title": "Optional. Flight filter criteria, namely flight characteristics (Direct, Non Stop, Red Eye)"
          }
        },
        "description": "Airline preferences for a shopping request."
      },
      "offerFlightRequest": {
        "type": "object",
        "properties": {
          "originDestinationsCriteria": {
            "$ref": "#/components/schemas/offerOriginDestinationsCriteria"
          },
          "specificOriginDestinations": {
            "$ref": "#/components/schemas/offerSpecificOriginDestinations"
          },
          "affinityShoppingCriteria": {
            "$ref": "#/components/schemas/offerAffinityShoppingCriteria"
          }
        },
        "description": "Flight Request Choice of Affinity, Origin Destination or Journey flight information for this shopping request.\nCurrently only `origin_destinations_criteria` based shopping request is supported.",
        "required": [
          "originDestinationsCriteria",
          "specificOriginDestinations",
          "affinityShoppingCriteria"
        ]
      },
      "offerGroupByParameter": {
        "type": "string",
        "enum": [
          "GROUP_BY_FLIGHTS"
        ],
        "default": "GROUP_BY_FLIGHTS",
        "description": "- GROUP_BY_FLIGHTS: Default. Offers should be grouped based on PaxJourney for one way shopping\nor PaxJourney combination for return shopping.\nEffectively, offers on the same onward/return flights or connection flights combination will collate in one group.",
        "title": "Enumeration of parameters that control grouping of offers in shopping response"
      },
      "offerIndirectChannelCriteria": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "carrierCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. The carriers for which the channel preference should apply.\nIf not provided, the preference applies to all carriers supported by the channel."
          },
          "perfLevel": {
            "$ref": "#/components/schemas/commonPreferenceLevel"
          }
        },
        "description": "Preference of an indirect (non-NDC/non-direct connect) channel through which offers may be sourced.\n- If `carrier_codes` are not specified, and `perf_level` is `REQUIRED` or `PREFERRED`, then all carriers available via that channel will be returned.\n- If `carrier_codes` are specified, and `perf_level` is `REQUIRED` or `PREFERRED`, then only those specified carriers will be sourced via the channel.\n- If `carrier_codes` are not specified, and `perf_level` is `EXCLUDE`, then no offers will be sourced via the channel.\n- If `carrier_codes` are specified, and `perf_level` is `EXCLUDE`, then offers for all other carriers excluding specified carriers will be sourced via that channel.",
        "required": [
          "channel"
        ]
      },
      "offerJourneyPriceClass": {
        "type": "object",
        "properties": {
          "paxJourneyRefId": {
            "type": "string",
            "title": "Required. References to a pax journey"
          },
          "priceClassRefId": {
            "type": "string",
            "title": "Required. Reference to a price class"
          }
        },
        "description": "Price class information per Journey.",
        "required": [
          "paxJourneyRefId",
          "priceClassRefId"
        ]
      },
      "offerNewOffer": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "IATA-defined 2-character code of the carrier providing the offer."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "offerItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerNewOfferItem"
            },
            "description": "Required. A priced grouping of one or more services within an Offer. The New Offer Item assigns a total price for all included\nservices for all passengers and all segments referenced. Once constructed, the OfferItem cannot be modified."
          },
          "offerExpirationTimeLimit": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z\nUpon expiry, the expectation is that the offer is no longer retrievable and the shopping process must begin again.\nNote the presence of an Offer Time Limit does not indicate either a guarantee of price or inventory against a given\nOffer item within the Offer. Should the offer time limit expire, any other time limit also expires unless an Order\nhas been created or changed."
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. Commission is an amount of money, typically a set percentage of the value involved, paid to an agent in a commercial transaction."
          },
          "totalPrice": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "journeyOverview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerJourneyPriceClass"
            },
            "description": "Price class information per Journey."
          },
          "baggageAllowanceSpecs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerBaggageAllowanceSpec"
            },
            "title": "Eligible baggage allowances for passengers"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to augmentations. API consumers must relay all `Augmentation`s referred in the offer they select in\nsubsequent `FlightPriceRQ`."
          }
        },
        "title": "New Offer: A proposal to sell a specific set of products or Services under specific conditions, for a certain price.\nThe OfferId for this offer would be the key against which this offer is mapped (in `verteil.air.v4.offer.AirShoppingRS.offers`)",
        "required": [
          "offerItems"
        ]
      },
      "offerNewOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Uniquely identifies an offer item within an Offer."
          },
          "price": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the carrier for the carriage of passenger(s) and her allowable\nfree baggage."
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOfferedService"
            },
            "description": "Optional. Offered Service is the instance of a specific flight or Service Definition as it has been offered (and eventually ordered and consumed)\nin the context of a specific Offer and/or Order."
          },
          "paymentTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format by which a commitment to pay must be made for the confirmed items in the offer. Examples: 2015-01-13T13:59:38Z"
          },
          "priceGuaranteeTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format after which the offer price is no longer guaranteed. Example: 2015-01-13T13:59:38Z"
          }
        },
        "description": "A priced grouping of one or more services within an Offer. The New Offer Item assigns a total price for all included\nservices for all passengers and all segments referenced. Once constructed, the OfferItem cannot be modified.",
        "required": [
          "price"
        ]
      },
      "offerOfferCriteria": {
        "type": "object",
        "properties": {
          "indirectChannelCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerIndirectChannelCriteria"
            },
            "title": "Optional. Preference of indirect (non-NDC/non-direct connect) channels through which offers may to be sourced.\nThese preferences will get overridden if indirect channel rules are configured for the agency.\nIf not provided, then offers will be sourced only through `NDC` and `DIRECT_CONNECT` channels"
          },
          "fareCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerFareCriteria"
            },
            "description": "Optional. Fare criteria used to filter shopping results.\nIf `fare_criteria` is not provided default values `PVT` and `PUBL` will be applied."
          },
          "baggageCriteria": {
            "$ref": "#/components/schemas/offerBaggageCriteria"
          },
          "serviceCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerServiceCriteria"
            },
            "title": "Optional. Feature criteria used to filter shopping results.\nE.g. return only offers with lounge access"
          },
          "programCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonProgram"
            },
            "description": "Optional. Filtering criteria based on discount programs ( e.g. CLID, Deal codes )."
          },
          "promotionCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPromotion"
            },
            "description": "Optional. Information related to publicizing a product, organization, or venture so as to increase sales or public awareness."
          }
        },
        "title": "Further qualifies the flight request by influencing which results are returned in the shopping response"
      },
      "offerOfferPriceRQ": {
        "type": "object",
        "properties": {
          "pricedOffer": {
            "$ref": "#/components/schemas/offerPricedOffer"
          },
          "offerCriteria": {
            "$ref": "#/components/schemas/offerOfferCriteria"
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentAssociatedFunctionCriteria"
            },
            "title": "Optional. Container of all payment relevant functions in the context of an pricing transaction"
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation elements from previous shopping response (AirShoppingRS/ServiceListRS/SeatAvailabilityRS).\nAPI consumers must relay all `Augmentation`s referred in the offer\nthey select from a shopping response in subsequent pricing call.\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "title": "OfferPrice request message"
      },
      "offerOfferPriceRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Contains information related to potential business errors detected during processing of the preceding request."
          },
          "pricedOffers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/offerNewOffer"
            },
            "description": "The priced offers.\nKey is carrier assigned ID and value the corresponding priced offer.\nNote that after pricing, the Offer IDs could be different from what was provided in `OfferPriceRQ` (sourced from `AirShoppingRS`).\nHence it is important that the latest Offer IDs returned here are used in subsequent API requests."
          },
          "totalPrice": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentFunctionOffer"
            },
            "title": "Optional. Container of all payment relevant functions in the context of an order change transaction"
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s returned in subsequent requests.\nKey is Augmentation ID and value the corresponding `Struct` type data."
          }
        },
        "description": "OfferPrice response message\nThis can return two different sets of content.\nThe response will initially provide the priced Offer reflecting the Offers/OfferItems requested for pricing,\nand potentially additional Offers that are applicable and relevant to the PricedOffer provided."
      },
      "offerOfferServiceAssociation": {
        "type": "object",
        "properties": {
          "paxJourneyRefs": {
            "$ref": "#/components/schemas/commonPaxJourneyRefs"
          },
          "seatAssignment": {
            "$ref": "#/components/schemas/commonSeatAssignment"
          },
          "serviceDefRef": {
            "$ref": "#/components/schemas/commonOfferServiceDefinitionRef"
          }
        },
        "title": "Offer service association. One of `pax_journey_refs` or `service_def_ref`",
        "required": [
          "paxJourneyRefs",
          "seatAssignment",
          "serviceDefRef"
        ]
      },
      "offerOfferedService": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "Required. Uniquely Identifies a Service within the context of this message."
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. References to passengers"
          },
          "serviceAssociation": {
            "$ref": "#/components/schemas/offerOfferServiceAssociation"
          },
          "validatingCarrierCode": {
            "type": "string",
            "title": "Optional IATA-defined 2-character code of carrier providing the service"
          }
        },
        "title": "Offered Service is the instance of a specific flight or Service Definition as it has been offered (and eventually\nordered and consumed) in the context of an Offer. At time of order, the services should be applied to a single passenger\non a single segment",
        "required": [
          "serviceId",
          "paxRefIds",
          "serviceAssociation"
        ]
      },
      "offerOffersGroup": {
        "type": "object",
        "properties": {
          "bestOfferRefId": {
            "type": "string",
            "description": "Required. The Offer ID of the _best_ offer on a flight or flights combination\ndetermined based on `com.verteil.air.offer.shop.v4.ResponseControls.sort_order`."
          },
          "otherOfferRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Offer IDs of other offers on the same flight or flights combination that are within the result limit.\nThe ordering of Offer IDs is based on `com.verteil.air.offer.shop.v4.ResponseControls.sort_order`.\nOther Offers wont be present if there is only one offer on a flight or flight combination."
          },
          "availableOffersQty": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The total number of offers received (from supplier) for the flight or flights combination.\nThis counts the best offer, offers referred in `other_offer_ref_ids`\nand offers that could not be included in the response due to result limit\nor due to application of `BEST` `result_preference`.\nThis will only be present if there are offer(s) that could not be included in the response."
          }
        },
        "description": "Container for grouping offers based on flight or flights combination\n(corresponding to a PaxJourney for one way shopping or PaxJourney combination for return shopping).\nThis is intended for displaying  flight wise offers in shopping results page.",
        "required": [
          "bestOfferRefId"
        ]
      },
      "offerOffersSummary": {
        "type": "object",
        "properties": {
          "highestOfferPrice": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "lowestOfferPrice": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "matchedOfferQty": {
            "type": "integer",
            "format": "int64",
            "title": "Number of matched offers included in the response"
          }
        },
        "description": "Offer summary that includes highest, lowest, and number of matched offers included in this response.\nWhen using streams, the values will take into account the preceding streamed responses.\nie, `highest_offer_price` would be the highest price of all offers across the current response and\nresponses that were streamed back."
      },
      "offerOrderItemDeletionOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Required. Uniquely identifies an offer item within an Offer."
          },
          "existingOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerExistingOrderItem"
            },
            "description": "Optional. Provides information about the OrderItem and service which will be replaced by the offeritem.\nfollowing the acceptance of the Reshopped Offer."
          },
          "priceDifferential": {
            "$ref": "#/components/schemas/commonPriceDifferential"
          }
        },
        "description": "OrderItems which the Airline confirms can be deleted in a subsequent Update.\nOptionally, a price differential can be added to each OrderItem occurrence being deleted.  It will have information of refund, amount held (if any) and cancellation penalty (if any) in addition to the value of the orderitem.\nShould not be used for 'replace' type functions.",
        "required": [
          "offerItemId",
          "existingOrderItems"
        ]
      },
      "offerOrderQuoteRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Contains information related to potential business errors detected during processing of the preceding request."
          },
          "requotedOffer": {
            "$ref": "#/components/schemas/offerRequotedOffer"
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentFunctionOffer"
            },
            "description": "Optional. Container of all payment relevant functions."
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "A proposal to sell a specific Offer in the OrderReshop  workflow.\nThe OrderRequote transaction return the priced Offer reflecting the Offer/OfferItems requested for pricing after the\nOrderReshop transaction."
      },
      "offerOrderRepriceRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Optional. Contains information related to potential business errors detected during processing of the preceding request."
          },
          "repriceResult": {
            "$ref": "#/components/schemas/offerRepriceResult"
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentFunctionOffer"
            },
            "description": "Optional. Container of all payment relevant functions."
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an OrderChangeRQ or OrderCancelRQ transaction, to commit the re-shop offer.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
        "required": [
          "repriceResult",
          "dataMap"
        ]
      },
      "offerOrderRequest": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/offerRequestOrder"
          }
        },
        "title": "This is request using Order(s)"
      },
      "offerOrderReshopRS": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order to which is being modified."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Optional. Contains information related to potential business errors detected during processing of the preceding request."
          },
          "offersSummary": {
            "$ref": "#/components/schemas/offerOffersSummary"
          },
          "reshopOffers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/offerChangedOffer"
            },
            "description": "Required. Reshop offer results.\nKey is `offer_id` and value the corresponding reshop offer."
          },
          "sortedOffersGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOffersGroup"
            },
            "description": "Required. Offers grouped by `ResponseControls.group_by' parameter and ordered by `ResponseControls.order_by` parameter.\nThis may be leveraged for displaying flight wise offers in shopping results page.\n\nGrouping, if requested, will be based on PaxJourney (for one way shopping) or PaxJourney combination (for return shopping).\nEach OfferGroup in this list would then contain offers on a specific PaxJourney (i.e. specific flight or connecting flights).\nWithin each OfferGroup, `other_offer_ref_ids` will be ordered based on `ResponseControls.order_by`.\nThe overall ordering of `sorted_offer_groups` will again be based on `ResponseControls.order_by` applied on offers identified by\n`OffersGroup.best_offer_ref_id`."
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an pricing and commit transaction.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
        "required": [
          "orderId",
          "reshopOffers",
          "sortedOffersGroups",
          "dataMap"
        ]
      },
      "offerOriginDestCriteria": {
        "type": "object",
        "properties": {
          "originStationCode": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the origin city or airport code."
          },
          "destStationCode": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the destination city or airport code."
          },
          "depDate": {
            "type": "string",
            "description": "Required. The passenger's requested departure date in ISO-8601 format (yyyy-mm-dd)."
          },
          "cabinPreferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCabinCode"
            },
            "description": "Optional. Cabin preference.\nIf not provided, offers on all cabins are eligible (but not necessary) to be returned\nIf offers on all cabins are required, all cabin codes are to be explicitly specified here."
          },
          "connectionPrefRefId": {
            "type": "string",
            "title": "Optional. Reference to a transfer preference (FlightRelatedCriteria.ConnectionCriteria).\nTo be provided if more than 1 FlightRelatedCriteria.ConnectionCriteria are set in this request"
          }
        },
        "description": "The Origin and Destination airport/city pair which confines a passenger journey.",
        "required": [
          "originStationCode",
          "destStationCode",
          "depDate"
        ]
      },
      "offerOriginDestinationsCriteria": {
        "type": "object",
        "properties": {
          "originDestCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOriginDestCriteria"
            },
            "description": "Required. The Origin and Destination airport/city pair which confines a passenger journey."
          }
        },
        "description": "A container for a flight request type which allow multiple Origin and Destination flight criteria to be provided.",
        "required": [
          "originDestCriteria"
        ]
      },
      "offerOriginalOrderItem": {
        "type": "object",
        "properties": {
          "orderItemRefId": {
            "type": "string",
            "description": "Required. Reference to the Order Item.\nOwner assigned ID which is unique within an Order."
          },
          "ownerCode": {
            "type": "string",
            "description": "Optional. Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the travel service provider for the OrderItem.\nFor air content, this provide details of the charges for carriage of passenger(s) and her allowable free baggage."
          },
          "price": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOfferedService"
            },
            "description": "Required. List of services present in this OrderItem\nAt the time of shopping, a service can be sold to multiple passengers on a given journey.\nAt time of order, the services should be applied to a single passenger on a single segment."
          }
        },
        "title": "An individually priced item within the Order, made up of one or more Services.\nMay or may not be a selected Offer Item (e.g. non-chargeable Services available on request such as a wheelchair).\nOriginal Order Item for which the price was repriced",
        "required": [
          "orderItemRefId",
          "price",
          "services"
        ]
      },
      "offerPriceCalendar": {
        "type": "object",
        "properties": {
          "leadPriceInd": {
            "type": "boolean",
            "description": "When true, this is a lead calendar shopping price for a date that is prior to or after the required travel date."
          },
          "priceCalendarDate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceCalendarPriceCalendarDate"
            },
            "title": "Price Calendar Date"
          },
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          }
        },
        "description": "Calendar based Flight Price. This capability supports multi-day calendar shopping, e.g. returning priced flight offers\nfor a specified period before and/or after the actual requested date."
      },
      "offerPricedOffer": {
        "type": "object",
        "properties": {
          "selectedOffers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSelectedOffer"
            },
            "title": "Required. The collection of selected offers"
          }
        },
        "title": "Offers/OfferItems requested for pricing"
      },
      "offerRepriceResult": {
        "type": "object",
        "properties": {
          "noPriceChangeInd": {
            "type": "boolean",
            "title": "Required. When `true`, the Reprice had no effect on the price(s) of the original Order/OrderItems.\nOnly one of `no_price_change_ind` or `reprice_offer` will be returned"
          },
          "repricedOffers": {
            "$ref": "#/components/schemas/offerRepricedOffers"
          },
          "noPriceChangeOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOriginalOrderItem"
            },
            "description": "Optional. information on OrderItems which does not have price change among the OrderItems in OrderViewRS.\nThere can be scenarios in which there is no price change for an unpaid ancillary or a specific passenger."
          },
          "unchangedCommissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. Existing commissions in the order that continue to apply after reprice\nNew commissions can come in `repriced_offers.offers[].commissions`."
          },
          "totalPrice": {
            "$ref": "#/components/schemas/v4commonPrice"
          }
        },
        "description": "Results of the Reprice request providing `reprice_offer` Offer or `no_price_change_ind`.",
        "required": [
          "noPriceChangeInd",
          "repricedOffers",
          "totalPrice"
        ]
      },
      "offerRepricedOffer": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Required. The unique id of the repriced offer."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character airline code assigned to a carrier. ."
          },
          "repricedOfferItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerRepricedOfferItem"
            },
            "description": "Required. Offers presented in response to a Reprice query from in OrderRepriceRQ."
          },
          "offerExpirationTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z"
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. Commissions applicable on the offer."
          },
          "totalPrice": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "baggageAllowanceSpecs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerBaggageAllowanceSpec"
            },
            "title": "Optional. Eligible baggage allowances for passengers"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Augment reference"
          }
        },
        "description": "Returns the result of repricing of an existing Order, possibly as a consequence of expired TimeLimits. Airline\nreturns Offers/OfferItems that describe the changes incurred from the reprice request.",
        "required": [
          "offerId",
          "ownerCode",
          "repricedOfferItems",
          "totalPrice"
        ]
      },
      "offerRepricedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Required. Unique identifier for this offerItem instance. Must be unique within XML message."
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the travel service provider for the OrderItem.\nFor air content, this provide details of the charges for carriage of passenger(s) and her allowable free baggage."
          },
          "price": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "originalOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOriginalOrderItem"
            },
            "description": "Required. Original Order Item for which the price was repriced."
          },
          "paymentTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format by which a commitment to pay must be made for the confirmed items in the offer. Examples: 2015-01-13T13:59:38Z"
          },
          "priceGuaranteeTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format after which the offer price is no longer guaranteed. Example: 2015-01-13T13:59:38Z"
          }
        },
        "description": "A priced grouping of one or more services within a Repriced Offer.",
        "required": [
          "offerItemId",
          "price",
          "originalOrderItems"
        ]
      },
      "offerRepricedOffers": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerRepricedOffer"
            },
            "description": "List of offers which has undergone a price change."
          }
        },
        "title": "The Repriced Carrier Offers"
      },
      "offerRequestMarketingSegment": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "flightNumber": {
            "type": "string",
            "description": "Required. The numerical designation of a flight as it is marketed by a carrier."
          },
          "operationalSuffix": {
            "type": "string",
            "description": "Optional. The numerical designation of a flight as it is marketed by a carrier."
          },
          "cabinCode": {
            "$ref": "#/components/schemas/commonCabinCode"
          },
          "rbd": {
            "type": "string",
            "title": "Reservation Booking Designator\nEither `cabin_code` or `rbd`"
          }
        },
        "description": "The commercial designation under which a Dated Operating Segment can be booked, either under the operating carrier's designator or that of another carrier (codeshare).",
        "required": [
          "carrierCode",
          "flightNumber",
          "cabinCode",
          "rbd"
        ]
      },
      "offerRequestOrder": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order to which the Seller wants to list the services."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier providing the offer."
          }
        },
        "title": "Identifies an Order in a Service List or Seat Availability request",
        "required": [
          "orderId",
          "ownerCode"
        ]
      },
      "offerRequestPaxJourney": {
        "type": "object",
        "properties": {
          "paxSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerRequestPaxSegment"
            },
            "title": "Required. Transportation of a passenger on a Dated Operating Segment. The array should be ordered according to departure date of segments"
          }
        },
        "description": "A collection of segments which satisfies transportation of passenger for a given origin and destination.",
        "required": [
          "paxSegments"
        ]
      },
      "offerRequestPaxSegment": {
        "type": "object",
        "properties": {
          "paxSegmentId": {
            "type": "string",
            "title": "Optional. Pax Segment ID"
          },
          "depStationCode": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the departure city or airport code."
          },
          "arrivalStationCode": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the arrival city or airport code."
          },
          "depDate": {
            "type": "string",
            "description": "Required. The segment departure date in ISO-8601 format (yyyy-mm-dd)."
          },
          "marketingSegment": {
            "$ref": "#/components/schemas/offerRequestMarketingSegment"
          }
        },
        "description": "Transportation of a passenger on a Dated Operating Segment.",
        "required": [
          "depStationCode",
          "arrivalStationCode",
          "depDate"
        ]
      },
      "offerRequotedOffer": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Uniquely Identifies an Offer within the context of one message."
          },
          "ownerCode": {
            "type": "string",
            "description": "Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "addOfferItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerRequotedOfferItem"
            },
            "description": "Requoted OfferItems\nIf original query also specified items for deletion, the suggested OfferItems here could be meant to replace the\nOrderItems specified in the request's Delete function.\nPrice and FareDetails will always be presented in the “Differential” structure."
          },
          "offerExpirationTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z"
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. Commissions applicable on the offer."
          },
          "totalPrice": {
            "$ref": "#/components/schemas/v4commonPrice"
          },
          "journeyOverview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerJourneyPriceClass"
            },
            "description": "Required. Price class information per Journey."
          },
          "baggageAllowanceSpecs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerBaggageAllowanceSpec"
            },
            "title": "Optional. Eligible baggage allowances for passengers"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional.  Reference to augmentation which is expected to be carry forwarded in subsequent request"
          }
        },
        "description": "Required. A requoted offer in response to a requote request with an offer selected from a previous reshop response.",
        "required": [
          "offerId",
          "addOfferItems"
        ]
      },
      "offerRequotedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Unique identifier for this OfferItem instance. Must be unique within XML message."
          },
          "priceDifferential": {
            "$ref": "#/components/schemas/commonPriceDifferential"
          },
          "offeredServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerOfferedService"
            },
            "description": "Optional. Offered Service is the instance of a specific flight or Service Definition as it has been offered (and eventually ordered and consumed)\nin the context of a specific Offer and/or Order."
          },
          "penaltyRefId": {
            "type": "string",
            "title": "Optional. Reference to requote penalty applicable on this offer item"
          },
          "paymentTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format by which a commitment to pay must be made for the confirmed items in the offer. Examples: 2015-01-13T13:59:38Z"
          },
          "priceGuaranteeTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time in ISO8601 format after which the offer price is no longer guaranteed. Example: 2015-01-13T13:59:38Z"
          }
        },
        "description": "A priced grouping of one or more services within a Requoted Offer.",
        "required": [
          "offerItemId"
        ]
      },
      "offerReshopOrderChoice": {
        "type": "object",
        "properties": {
          "serviceOrder": {
            "$ref": "#/components/schemas/offerServiceOrder"
          }
        },
        "title": "Reshop order Choice\nOne of service_order, update_pax or update_pax_name. update_pax and update_pax_name to be supported in future",
        "required": [
          "serviceOrder"
        ]
      },
      "offerReshopPrice": {
        "type": "object",
        "properties": {
          "new": {
            "$ref": "#/components/schemas/commonPriceAndFareDetails"
          },
          "differential": {
            "$ref": "#/components/schemas/commonPriceDifferential"
          }
        },
        "description": "For each offer item, `reshop_price_and_fare_details` allows carrier to inform the seller about the price and fare details\nassociated with this offer item.\n\\\nCarriers can provide this information in two ways\n1- New Price: Price of the new offer re-shopped by the user.\n2- Differential Price: Difference between the existing order and new offer re-shopped by the user.",
        "required": [
          "new",
          "differential"
        ]
      },
      "offerResponseControls": {
        "type": "object",
        "properties": {
          "orderBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerSort"
            },
            "description": "Optional. Specifies how offers returned should be sorted. See `AirShoppingRS.sorted_offer_groups`.\nIf provided, the sorting will be done based based on the first sort control, then with the second to break ties,\nthen with third to break ties and so on.\n\nIf not provided, the default sort order will be [`PRICE`, `STOPS`, `DEPARTURE_TIME`]"
          },
          "groupBy": {
            "$ref": "#/components/schemas/offerGroupByParameter"
          },
          "resultsLimit": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The maximum number of offers that should be returned.\nIf provided, only top results_limit offers after sorting based on sort_order will be returned.\nIf not provided the system limit of 800 offers will apply.\nIf provided, `result_limit` cannot be more than system limit."
          },
          "resultPreference": {
            "$ref": "#/components/schemas/ResponseControlsResultPreference"
          }
        },
        "description": "Guidance on how the response should be returned - sorting, maximum number of results etc."
      },
      "offerSeatAvailCoreRequest": {
        "type": "object",
        "properties": {
          "offerRequest": {
            "$ref": "#/components/schemas/offerSeatAvailOfferRequest"
          },
          "orderRequest": {
            "$ref": "#/components/schemas/offerOrderRequest"
          }
        },
        "title": "Seat Availability Core Request"
      },
      "offerSeatAvailOffer": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier providing the offer."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to a Offer ID of a selected offer."
          },
          "offerItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerSeatAvailOfferItem"
            },
            "description": "Optional. Specialized offer item used in the context of seat availability request."
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to augmentations."
          }
        },
        "description": "Specialized offer used in the context of seat availability request.",
        "required": [
          "ownerCode",
          "offerRefId"
        ]
      },
      "offerSeatAvailOfferItem": {
        "type": "object",
        "properties": {
          "offerItemRefId": {
            "type": "string",
            "description": "Required. Reference to a OfferItem ID of a selected offer item."
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. References to a Passenger ID from a previously returned Offer"
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. References to a PaxSegment ID from a previously returned Offer"
          }
        },
        "description": "Specialized offer item used in the context of seat availability request.",
        "required": [
          "offerItemRefId",
          "paxRefIds",
          "paxSegmentRefIds"
        ]
      },
      "offerSeatAvailOfferRequest": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerSeatAvailOffer"
            }
          }
        },
        "title": "A request using offers"
      },
      "offerSeatAvailabilityRQ": {
        "type": "object",
        "properties": {
          "coreRequest": {
            "$ref": "#/components/schemas/offerSeatAvailCoreRequest"
          },
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPax"
            },
            "title": "Required. Passenger reference data definition.\nKey is `pax_id` and value the corresponding `Pax` data"
          },
          "paxSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPaxSegment"
            },
            "description": "Optional. Segment reference data definition.\nKey is `pax_segment_id` and value the corresponding `PaxSegment` data\nWhen pax_segments is not provided search is applicable for all segments of the passenger.\nCurrently, airlines do not support offer search at segment level. E.g. In case of a round trip it is not possible to request for offers in the outbound segment alone."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation elements from previous shopping response (AirShoppingRS/ServiceListRS/SeatAvailabilityRS/OfferPriceRS).\nAPI consumers must relay all `Augmentation`s referred in the offer\nthey select from a shopping response in subsequent pricing call.\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "Request to pull seat maps with fully integrated fees for any identified premium seats.",
        "required": [
          "coreRequest",
          "passengers"
        ]
      },
      "offerSeatAvailabilityRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Optional. Contains information related to potential business errors detected during processing of the preceding request."
          },
          "aLaCarteOffers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/offerALaCarteOffer"
            },
            "description": "Optional. A proposal to sell a specific set of products or Services under specific conditions, for a certain price.\nCan be the response to a shopping request.\nA La Carte Offer is defined as a container for A La Carte Offer Items.\nThis supports a shopping basket concept for non-flight services.\nThe main purpose of this structure is to reduce the size of the messages\nby inserting Offer Items which are applicable to multiple flight-related Offers."
          },
          "seatMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatMap"
            },
            "description": "Required. A list of cabins and the seats within in.\nThis information can be used by the Seller to render a graphical Seat Map."
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s returned in subsequent requests.\nKey is Augmentation ID and value the corresponding `Struct` type data."
          }
        },
        "description": "Seat maps with fully integrated fees for any identified premium seats.",
        "required": [
          "seatMaps"
        ]
      },
      "offerServiceCriteria": {
        "type": "object",
        "properties": {
          "feature": {
            "$ref": "#/components/schemas/commonFeature"
          },
          "prefLevel": {
            "$ref": "#/components/schemas/commonPreferenceLevel"
          }
        },
        "title": "Service criteria used to filter response Offers based on categories of\nOptional Services included.\nE.g. return only offers with lounge access"
      },
      "offerServiceListCoreRequest": {
        "type": "object",
        "properties": {
          "offerRequest": {
            "$ref": "#/components/schemas/offerServiceListOfferRequest"
          },
          "orderRequest": {
            "$ref": "#/components/schemas/offerOrderRequest"
          }
        },
        "title": "Service List Core Request"
      },
      "offerServiceListOffer": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier providing the offer."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to a Offer ID of a selected offer."
          },
          "offerItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerServiceListOfferItem"
            },
            "description": "Optional. Specialized offer item used in the context of ancillary service shopping."
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to augmentations."
          }
        },
        "description": "Specialized offer used in the context of ancillary service shopping.",
        "required": [
          "ownerCode",
          "offerRefId"
        ]
      },
      "offerServiceListOfferItem": {
        "type": "object",
        "properties": {
          "offerItemRefId": {
            "type": "string",
            "description": "Required. Reference to a OfferItem ID of a selected offer item."
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. References to a Passenger ID from a previously returned Offer"
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. References to a PaxSegment ID from a previously returned Offer"
          }
        },
        "description": "Specialized offer used in the context of ancillary service shopping.",
        "required": [
          "offerItemRefId",
          "paxRefIds",
          "paxSegmentRefIds"
        ]
      },
      "offerServiceListOfferRequest": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerServiceListOffer"
            },
            "description": "Specialized offer used in the context of ancillary service shopping."
          }
        },
        "title": "A request using offers"
      },
      "offerServiceListRQ": {
        "type": "object",
        "properties": {
          "coreRequest": {
            "$ref": "#/components/schemas/offerServiceListCoreRequest"
          },
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPax"
            },
            "title": "Required. Passenger reference data definition.\nKey is `pax_id` and value the corresponding `Pax` data"
          },
          "paxSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPaxSegment"
            },
            "description": "Optional. Segment reference data definition.\nKey is `pax_segment_id` and value the corresponding `PaxSegment` data\nWhen pax_segments is not provided search is applicable for all segments of the passenger.\nCurrently, airlines do not support offer search at segment level. E.g. In case of a round trip it is not possible to request for offers in the outbound segment alone."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation elements from previous shopping response (AirShoppingRS/ServiceListRS/SeatAvailabilityRS/OfferPriceRS).\nAPI consumers must relay all `Augmentation`s referred in the offer\nthey select from a shopping response in subsequent pricing call.\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "Request to retrieve the list of all applicable ancillary services that meet request qualifiers and flights.\nThe message supports shopping for additional a la carte services to compliment any selected offer,\nas well as shopping for specialty service items not generally included in an initial offer\nbut rather based on service search filters, e.g. sports equipment, specialty baggage and unaccompanied minor fees.",
        "required": [
          "coreRequest",
          "passengers"
        ]
      },
      "offerServiceListRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Optional. Contains information related to potential business errors detected during processing of the preceding request."
          },
          "aLaCarteOffers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/offerALaCarteOffer"
            },
            "description": "Required. A proposal to sell a specific set of products or Services under specific conditions, for a certain price.\nCan be the response to a shopping request.\nA La Carte Offer is defined as a container for A La Carte Offer Items.\nThis supports a shopping basket concept for non-flight services.\nThe main purpose of this structure is to reduce the size of the messages\nby inserting Offer Items which are applicable to multiple flight-related Offers."
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s returned in subsequent requests.\nKey is Augmentation ID and value the corresponding `Struct` type data."
          }
        },
        "description": "The list of all applicable ancillary services that meet request qualifiers and flights.\nThe message supports shopping for additional a la carte services to compliment any selected offer,\nas well as shopping for specialty service items not generally included in an initial offer\nbut rather based on service search filters, e.g. sports equipment, specialty baggage and unaccompanied minor fees.",
        "required": [
          "aLaCarteOffers"
        ]
      },
      "offerServiceOrder": {
        "type": "object",
        "properties": {
          "addOfferItem": {
            "$ref": "#/components/schemas/offerAddOfferItem"
          },
          "deleteOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerAffectedOrderItemRequest"
            },
            "description": "Optional. Contains affected existing order items and related services that will be impacted by any new offers in the message.\nThe primary use case is when an existing order item is to be deleted or partial deletion either with a replacement\nin a new offer or an offer to be used for the deletion.\nIf not passed, the transaction would be considered as a full reshop where all the involved order items would be affected."
          }
        },
        "description": "Functions to allow a Seller to request additions, replacement or deletions of OrderItems in this specific Order."
      },
      "offerSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/SortParameter"
          },
          "order": {
            "$ref": "#/components/schemas/SortOrder"
          }
        },
        "title": "A sort control specifying a sorting parameter and the ordering to be applied for that parameter",
        "required": [
          "parameter"
        ]
      },
      "offerSpecificOriginDestCriteria": {
        "type": "object",
        "properties": {
          "originStationCode": {
            "type": "string",
            "description": "Required. IATA defined code identifying origin city or station."
          },
          "destStationCode": {
            "type": "string",
            "description": "Required. IATA defined code identifying destination city or station."
          },
          "paxJourneyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Reference to a pax_journey within this message."
          }
        },
        "description": "A specific origin and destinations criteria.",
        "required": [
          "originStationCode",
          "destStationCode",
          "paxJourneyRefIds"
        ]
      },
      "offerSpecificOriginDestinations": {
        "type": "object",
        "properties": {
          "specificOriginDestCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerSpecificOriginDestCriteria"
            },
            "description": "Required. The Origin and Destination airport/city pair and segments which confines a passenger journey."
          }
        },
        "title": "A container for a flight request type which allow multiple specific origin and destinations criteria to be provided.\nThis can be used to initiate targeted search, e.g. BOM-SIN on SQ421 on 25Feb on K RBD connecting to SIN-SFO on SQ322 on 26Feb on K RBD",
        "required": [
          "specificOriginDestCriteria"
        ]
      },
      "offerStationCriteria": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string",
            "title": "Required. IATA 3-letter codes specifying the city or airport code"
          },
          "perfLevel": {
            "$ref": "#/components/schemas/commonPreferenceLevel"
          }
        },
        "description": "The customer's requested Station criteria.",
        "required": [
          "stationCode"
        ]
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          }
        },
        "additionalProperties": {},
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "protobufNullValue": {
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ],
        "default": "NULL_VALUE",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
      },
      "typeMoney": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "Required. The 3-letter currency code defined in ISO 4217."
          },
          "units": {
            "type": "string",
            "format": "int64",
            "description": "Optional. The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
          },
          "nanos": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
          }
        },
        "description": "Represents an amount of money with its currency type. When the money value is \"Zero\" the response will only have currency code.",
        "required": [
          "currencyCode"
        ]
      },
      "v4commonFareWaiver": {
        "type": "object",
        "properties": {
          "fareRuleWaiverCode": {
            "type": "string",
            "description": "Required. Code assigned by the validating carrier that allows fare rule modification or override."
          },
          "fareWaiverType": {
            "type": "string",
            "description": "Optional. Waiver type. Examples: ExchangeReissued, FareComponent."
          }
        },
        "description": "Validating carrier-assigned fare rule modification or override information.",
        "required": [
          "fareRuleWaiverCode"
        ]
      },
      "v4commonPrice": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "baseAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "taxSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTaxSummary"
            },
            "description": "Optional. A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added to the cost of some goods, services, and transactions.\nIf TaxSummary is not provided in the response, tax would be 0 for the fare under scope."
          },
          "surcharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSurcharge"
            },
            "description": "Optional. Surcharge details."
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFee"
            },
            "description": "Optional. Amount added on to a charge for a specific product, purpose, or service."
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDiscount"
            },
            "description": "Optional. Deductions from the price amount, made in advance of its payment."
          },
          "markups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonMarkup"
            },
            "description": "Optional. The amount added to the cost price of goods to cover overhead and profit."
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "title": "Optional. The commission amount information"
          },
          "curConversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCurConversion"
            },
            "description": "Optional. The currency conversion information."
          }
        },
        "description": "The amount of money expected, required, or given in payment for something.",
        "required": [
          "totalAmount"
        ]
      },
      "v4offerFareWaiver": {
        "type": "object",
        "properties": {
          "waiverCode": {
            "type": "string",
            "description": "Required. Code assigned by the validating carrier that allows fare rule modification or override."
          },
          "waiverType": {
            "type": "string",
            "description": "Required. Waiver type code assigned by the validating carrier that allows fare rule modification or override."
          }
        },
        "description": "Validating carrier-assigned fare rule modification or override information."
      },
      "v4offerRepriceOrder": {
        "type": "object",
        "properties": {
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentAssociatedFunctionCriteria"
            },
            "title": "Optional. Container of all payment relevant functions in the context of an order reprice transaction which might influence reprice result. E.g. Credit card transaction fees"
          }
        },
        "description": "Function to Reprice an Order."
      },
      "v4offerRequoteOrder": {
        "type": "object",
        "properties": {
          "selectedOffers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSelectedOffer"
            },
            "description": "Offer selected by the Passenger for requesting an Order to be reshopped."
          },
          "affectedOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offerAffectedOrderItemRequest"
            },
            "description": "Contains affected existing order items and related services that will be impacted by any new offers in the message.\nThe primary use case is when an existing order item is to be deleted or partial deletion either with a replacement\nin a new offer or an offer to be used for the deletion."
          },
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPax"
            },
            "title": "Optional. Any person except members of the crew to be carried with the consent of the carrier, on board an aircraft.\nHolds the attributes specific to a one booking, from shopping to fulfillment.\nKey is `pax_id` and value the corresponding `Pax` object"
          },
          "offerCriteria": {
            "$ref": "#/components/schemas/offerOfferCriteria"
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentAssociatedFunctionCriteria"
            },
            "title": "Optional. Container of all payment relevant functions in the context of an order change transaction"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation element from OrderReshopRS. API consumers must relay all `Augmentation`s referred in the offer\nthey select from a shopping response in subsequent pricing call.\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        }
      },
      "v4offerReshopOrder": {
        "type": "object",
        "properties": {
          "reshopOrderChoice": {
            "$ref": "#/components/schemas/offerReshopOrderChoice"
          }
        },
        "description": "Functions to allow a Seller to request additions, replacement or deletions of OrderItems in this specific Order.",
        "required": [
          "reshopOrderChoice"
        ]
      }
    }
  }
}