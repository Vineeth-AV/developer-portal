{
  "openapi": "3.0.0",
  "info": {
    "title": "verteil/air/v4/order/order_service.proto",
    "version": "version not set"
  },
  "paths": {
    "/air/v4/orders/{channel}/{ownerCode}/{orderId}:acceptChange": {
      "put": {
        "summary": "The service used by seller to accept a change as advised by the airline on an event of involuntary schedule change\nThis request is preceded by the OCN notification which is sent by the airline during a involuntary change\nand the seller is expected to respond with an option provided by them.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.",
        "operationId": "OrderManagementService_AcceptChange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ]
            }
          },
          {
            "name": "ownerCode",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order for which change is accepted.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4orderAcceptChange"
              }
            }
          },
          "description": "List of disrupted OrderItems from OrderViewRS\nwhich needs to be accepted by the user inorder to confirm.",
          "required": true
        }
      }
    },
    "/air/v4/orders/{channel}/{ownerCode}/{orderId}:acceptRepricedOrder": {
      "put": {
        "summary": "The service used by seller to inform the airline that it is accepting the proposed Order,\nas it has been repriced and returned in the preceding `OrderRepriceRS`.\nThe updated view of the Order is returned.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. A unique identifier to relate all messages within the transaction ending with AcceptRepricedOrder service.",
        "operationId": "OrderManagementService_AcceptRepricedOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ]
            }
          },
          {
            "name": "ownerCode",
            "description": "Required. Supplier identifier. For air content, this is the IATA-defined 2-character code of the carrier owning the service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order being changed.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4orderAcceptRepricedOrder"
              }
            }
          },
          "description": "Order Change request information.",
          "required": true
        }
      }
    },
    "/air/v4/orders/{channel}/{ownerCode}/{orderId}:divideOrderItems": {
      "put": {
        "summary": "Request used by the seller to request the airline to split the PNR by deleting passengers from the parent PNR.\nThis is preceded by OrderRetrieveRQ and the passenger reference IDs to be deleted are sent to this request\nalong with passenger details.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.",
        "operationId": "OrderManagementService_DivideOrderItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nWhen not provided, default 'NDC' channel applies.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ]
            }
          },
          {
            "name": "ownerCode",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order being changed.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4orderDivideOrderItems"
              }
            }
          },
          "description": "Required. Divide order items request information.",
          "required": true
        }
      }
    },
    "/air/v4/orders/{channel}/{ownerCode}/{orderId}:updateOrderItems": {
      "put": {
        "summary": "The service used by the seller to request the airline to commit changes to an existing Order\nby adding, removing or replacing Order Items (with potential refund conditions, in case of cancellations).\nThe actions possible are determined by the airline and communicated to the seller via `OrderReshop` and `OrderRequote`\nAPIs (which precedes `UpdateOrderItems`). It is up to the seller to then accept the proposed actions from the\n`OrderRequoteRS` by echoing these functions in this order servicing structure.\nThe updated view of the Order is returned.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. A unique identifier to relate all messages within the transaction ending with UpdateOrderItems service.",
        "operationId": "OrderManagementService_UpdateOrderItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nWhen not provided, default 'NDC' channel applies.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ]
            }
          },
          {
            "name": "ownerCode",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order being changed.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4orderUpdateOrderItems"
              }
            }
          },
          "description": "Required. Order Change request information.",
          "required": true
        }
      }
    },
    "/air/v4/orders/{channel}/{ownerCode}/{orderId}:updatePax": {
      "put": {
        "summary": "The service used by the seller to request the airline to commit changes to an existing passenger\nThis change includes name change. The request includes the previous name (given/surname/title name) and the new name (given/surname/title name) to which name of passenger should be changed\nThe response is OrderViewRS with name changed.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.",
        "operationId": "OrderManagementService_UpdatePax",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ]
            }
          },
          {
            "name": "ownerCode",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order being changed.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4orderUpdatePax"
              }
            }
          },
          "description": "Function to Add, Remove or Update the Passenger Details.",
          "required": true
        }
      }
    },
    "/air/v4/orders:create": {
      "post": {
        "summary": "The service used by seller to request an airline to create an order\nand return a complete view of that Order (OrderViewRS)",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. A unique identifier to relate all messages within the transaction ending with CreateOrder service.",
        "operationId": "OrderManagementService_CreateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderOrderCreateRQ"
              }
            }
          },
          "required": true
        }
      }
    },
    "/air/v4/orders:list": {
      "post": {
        "summary": "Service used to list orders matching various search criteria.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.",
        "operationId": "OrderManagementService_ListOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderListRS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderOrderListRQ"
              }
            }
          },
          "description": "Request to list orders matching given criteria.",
          "required": true
        }
      }
    },
    "/air/v4/orders:retrieve": {
      "post": {
        "summary": "Order Retrieve Service used to fetch latest state of an Order.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.",
        "operationId": "OrderManagementService_RetrieveOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderOrderRetrieveRQ"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v4/orders/{channel}/{ownerCode}/{orderId}:cancelOrder": {
      "put": {
        "summary": "The service used by the seller to request the airline to cancel an entire Order.\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.\n- vdc-flowId: Required. A unique identifier to relate all messages within the transaction ending with CancelOrder service.",
        "operationId": "OrderManagementService_CancelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ]
            }
          },
          {
            "name": "ownerCode",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order being changed.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orderChangeOrderChoice"
              }
            }
          },
          "description": "Required. The change order choice.",
          "required": true
        }
      }
    },
    "/v4/orders/{channel}/{ownerCode}/{orderId}:updateOrderParameters": {
      "put": {
        "summary": "The service used by seller to update the parameters of the order like remarks/tags associated with the order.\nThe updated view of the Order is returned.",
        "description": "This service accepts and returns the following Metadata\n- vdc-transactionId: Optional. A unique identifier that allows end-to-end correlation of log messages throughout the processing of the message.\n                       If not provided, a UUID will be generated and used as the correlationId.",
        "operationId": "OrderManagementService_UpdateOrderParameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderOrderViewRS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "channel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NDC",
                "DIRECT_CONNECT",
                "GDS_1A",
                "GDS_1G",
                "GDS_1S"
              ]
            }
          },
          {
            "name": "ownerCode",
            "description": "Required. Supplier identifier. For air content, this is the IATA-defined 2-character code of the carrier owning the service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "description": "Required. Reference to existing Order being changed.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v4orderUpdateOrderParameters"
              }
            }
          },
          "description": "Required.\nOrder Parameter update request information.",
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContactEnumsPurpose": {
        "type": "string",
        "enum": [
          "CTC_OTHER",
          "CTC_ORIGIN",
          "CTC_DEST",
          "CTC_EMERGENCY",
          "CTC_NOTIF",
          "CTC_UMNR_ORIGIN",
          "CTC_UMNR_DEST",
          "CTC_PAYMENT",
          "CTC_BILLING"
        ],
        "default": "CTC_OTHER",
        "title": "Enumeration of contact purposes. Based on PADIS code list 3299"
      },
      "DistributionChainLinkRole": {
        "type": "string",
        "enum": [
          "ROLE_UNSPECIFIED",
          "CARRIER",
          "DISTRIBUTOR",
          "SELLER"
        ],
        "default": "ROLE_UNSPECIFIED",
        "description": "The distribution chain role performed by the participating organization.\nThat is, the Seller (end buyer facing), the Distributor (an intermediary), or the Carrier (the Responsible Supplier).\nFor clarity this is different to the business model used by the participating organization, and the Nature of Business typically registered during incorporation as one of the organization's business activities."
      },
      "FeatureCategory": {
        "type": "string",
        "enum": [
          "OTHERS",
          "DINING",
          "CABIN_BAGGAGE",
          "CHECKED_BAGGAGE",
          "SEAT",
          "AMENITY",
          "CHECK_IN",
          "BOARDING",
          "PREMIUM",
          "CHG_CXL",
          "LOUNGE",
          "LOYALTY",
          "UPGRADE",
          "PROMOTION",
          "TRANSPORT",
          "ACCOMMODATION",
          "PURCHASES",
          "ASSIST",
          "REASSURANCE",
          "INSURANCE",
          "VISA_SERVICES",
          "BOOK_AND_HOLD"
        ],
        "default": "OTHERS",
        "description": "Enumeration of product or service feature categories\nThis enumeration is expandable, additional values may be added in future.\n\n - OTHERS: Default category\n - DINING: Food and Beverage Category.\n - CABIN_BAGGAGE: CABIN_BAGGAGE Category.\nPlease note that `CABIN_BAGGAGE` category is intended for descriptive communication of baggage policy applicable for Cabin Baggage to end user.\n`BaggageAllowance` provides more detailed and structured information and API consumers should depend\non `BaggageAllowance` when building logic.\n - CHECKED_BAGGAGE: CHECKED_BAGGAGE Category.\nPlease note that `CHECKED_BAGGAGE` category is intended for descriptive communication of baggage policy applicable for Checked Baggage to end user.\n`BaggageAllowance` provides more detailed and structured information and API consumers should depend\non `BaggageAllowance` when building logic.\n - SEAT: Seat Category\n - AMENITY: Category for amenities like entertainment, wi-fi, power etc.\n - CHECK_IN: Check-in Category\n - BOARDING: Boarding Category\n - PREMIUM: Indicates a premium feature\n - CHG_CXL: Category for communicating policies relating to restrictions on Change, Cancellation, NoShow, Upgrade etc.\nPlease note that `CHG_CXL` category is intended for descriptive communication of ticket policies to end user.\n`Penalty` provides more detailed and structured information and API consumers should depend\non `Penalty` when building logic.\n - LOUNGE: Lounge Category\n - LOYALTY: Loyalty/Award-Miles Category\n - UPGRADE: Upgrade Category\n - PROMOTION: Promotion Category\n - TRANSPORT: Category for transport services outside the airport\n - ACCOMMODATION: Category relating to Accommodation within or outside airport\n - PURCHASES: Category providing information relating to Purchases\n - ASSIST: Category relating to providing assistance to Passenger\n - REASSURANCE: Reassurance Category intended to make passengers feel safe and informed when they fly\n - INSURANCE: Category for products or services relating to Insurance\n - VISA_SERVICES: Category for products or services relating to Visa Services\n - BOOK_AND_HOLD: Category for products or services relating to Book and Hold Services"
      },
      "FeatureSubCategory": {
        "type": "string",
        "enum": [
          "UNSPECIFIED",
          "MEAL",
          "SNACK",
          "BREAKFAST",
          "LUNCH",
          "DINNER",
          "BEVERAGE",
          "BEVERAGE_ALCOHOLIC",
          "BEVERAGE_NON_ALCOHOLIC",
          "GOURMET",
          "BAG",
          "CAR_SEAT",
          "STROLLER",
          "PET",
          "EXCESS_BAG",
          "MEDIA_EQUIPMENT",
          "MUSIC_EQUIPMENT",
          "SPORTS_EQUIPMENT",
          "ADDITIONAL_ALLOWANCE",
          "FREE_SELECTION",
          "LEG_ROOM",
          "FLAT_BED",
          "BASSINET",
          "FREE_CHANGE",
          "CHANGE_WITH_FEE",
          "FREE_CXL",
          "CXL_WITH_FEE",
          "VALUE_STORE",
          "ENTERTAINMENT",
          "WIFI",
          "INTERNET",
          "POWER",
          "SUITE",
          "SHOWER",
          "LIMO",
          "TRAIN",
          "BUS",
          "PRIORITY",
          "HEALTH",
          "CARBON_OFFSET",
          "SUSTAINABILITY",
          "DUTY_FREE",
          "OXYGEN",
          "STRETCHER",
          "WHEELCHAIR",
          "INCUBATOR",
          "MEDICAL",
          "MINOR",
          "ADULT",
          "SECURED",
          "SENIOR",
          "VIP",
          "SERVICE_ANIMAL"
        ],
        "default": "UNSPECIFIED",
        "title": "- UNSPECIFIED: Default category\nThis enumeration is expandable, additional values may be added in future.\n - MEAL: Meal Sub Category under `DINING` and `LOUNGE`.\n - SNACK: Snack Sub Category under `DINING`.\n - BREAKFAST: Sub Category under `DINING`.\n - LUNCH: Sub Category under `DINING`.\n - DINNER: Sub Category under `DINING`.\n - BEVERAGE: Beverages Sub Category under `DINING` and `LOUNGE`.\n - BEVERAGE_ALCOHOLIC: Sub Category under `DINING`.\n - BEVERAGE_NON_ALCOHOLIC: Sub Category under `DINING`.\n - GOURMET: Gourmet meal Sub Category under `DINING`\n - BAG: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - CAR_SEAT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - STROLLER: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - PET: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - EXCESS_BAG: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - MEDIA_EQUIPMENT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - MUSIC_EQUIPMENT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - SPORTS_EQUIPMENT: Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE`.\n - ADDITIONAL_ALLOWANCE: Additional Baggage Allowance Sub Category under `CABIN_BAGGAGE` and `CHECKED_BAGGAGE` indicating allowance on top of normal allowance.\n - FREE_SELECTION: Sub Category under `SEAT` indicating that complementary (free) seat selection is offered\nThere may be restrictions on the seat that can be selected for free (e.g. extra legroom seats excluded)\n - LEG_ROOM: Sub Category under `SEAT` indicating extra leg room space\n - FLAT_BED: Sub Category under `SEAT` indicating that seat may be converted to fully flat bed\n - BASSINET: Sub Category under `SEAT` indicating seat with bassinet.\n - FREE_CHANGE: Sub Category under `CHG_CXL` indicating that free order change is being offered\nThere may be restrictions like free change up to 24 hrs from departure\n - CHANGE_WITH_FEE: Sub Category under `CHG_CXL` indicating that fee may be changed for order changes\n - FREE_CXL: Sub Category under `CHG_CXL` indicating that free cancellation is being offered\nThere may be restrictions like free cancellation up to 24 hrs from departure\n - CXL_WITH_FEE: Sub Category under `CHG_CXL` indicating that fee may be changed for order cancellation\n - VALUE_STORE: A “Value Store” can be re-used within an existing order or reallocated when used in a new order.\n - ENTERTAINMENT: Sub Category under `AMENITY` indicating that entertainment (movies, games etc.) is offered\n - WIFI: Sub Category under `AMENITY` indicating that wi-fi is offered\n - INTERNET: Sub Category under `AMENITY` indicating that internet services are offered\n - POWER: Sub Category under `AMENITY` or `SEAT` indicating that power outlets are offered.\nUnder `SEAT` Category, it indicates availability of individual power outlets.\nUnder `AMENITY` Category, it indicates individual or shared power outlets.\n - SUITE: Sub Category under `AMENITY` indicating that a private suite is being offered\n - SHOWER: Sub Category under `AMENITY` indicating that a shower facility is being offered\n - LIMO: Sub Category under `TRANSPORT` indicating conveyance on chauffeured limousine\n - TRAIN: Sub Category under `TRANSPORT` for transportation via train\n - BUS: Sub Category under `TRANSPORT` for transportation via bus\n - PRIORITY: Sub Category under `CHECK_IN`, 'BOARDING`, `CABIN_BAGGAGE` or `CHECKED_BAGGAGE` indicating that dedicated priority service is offered to the customer\n - HEALTH: Sub Category under `REASSURANCE` for communicating passenger's health related policies and responses\n - CARBON_OFFSET: Sub Category under `REASSURANCE` relating to carbon footprint\n - SUSTAINABILITY: Sub Category under `REASSURANCE` providing information on eco friendly policies and responses\n - DUTY_FREE: Sub Category under `PURCHASES` indicating shopping without duty\n - OXYGEN: Sub Category under `ASSIST`.\n - STRETCHER: Sub Category under `ASSIST`.\n - WHEELCHAIR: Sub Category under `ASSIST`.\n - INCUBATOR: Sub Category under `ASSIST`.\n - MEDICAL: Sub Category under `ASSIST` that relates to an individual requiring medical assistance\n - MINOR: Sub Category under `ASSIST` that relates to a minor\n - ADULT: Sub Category under `ASSIST` that relates to an individual\n - SECURED: Sub Category under `ASSIST` that relates to a Prisoner or security restricted individual\n - SENIOR: Sub Category under `ASSIST` that relates to an senior individual\n - VIP: Sub Category under `ASSIST` that relates to a VIP\n - SERVICE_ANIMAL: Sub Category under `ASSIST` that relates to a Service Animal which will accompany a passenger"
      },
      "FollowUpActionAction": {
        "type": "string",
        "enum": [
          "CONTACT_VERTEIL",
          "ACCEPT",
          "RESHOP",
          "CANCEL",
          "CONTACT_AIRLINE"
        ],
        "default": "CONTACT_VERTEIL",
        "description": "- CONTACT_VERTEIL: Contact Verteil with the ability to include an option URL for the contact details.\n - ACCEPT: Accept\n - RESHOP: Reshop, with ability to add optional FareWaiver code\n - CANCEL: Cancel, with ability to add optional FareWaiver code\n - CONTACT_AIRLINE: Contact Airline with the ability to include an option URL for the contact details.",
        "title": "Enumeration of followup actions"
      },
      "FollowUpActionInactionConsequence": {
        "type": "string",
        "enum": [
          "AUTO_ACCEPTANCE",
          "AUTO_CANCELLATION"
        ],
        "default": "AUTO_ACCEPTANCE",
        "description": "Enumeration of codes defining the impact of seller not taking any action after a change by the airline/supplier\n(e.g. schedule change).\n\n - AUTO_ACCEPTANCE: Auto-acceptance by airline\n - AUTO_CANCELLATION: Auto-cancellation by airline"
      },
      "IdentityDocDocTypeCode": {
        "type": "string",
        "enum": [
          "DOC_TYPE_UNSPECIFIED",
          "PT"
        ],
        "default": "DOC_TYPE_UNSPECIFIED",
        "description": "Enumeration of the passenger document type codes.\n\n - DOC_TYPE_UNSPECIFIED: Default unspecified\n - PT: Passport"
      },
      "IndividualGenderCode": {
        "type": "string",
        "enum": [
          "UNSPECIFIED",
          "F",
          "M",
          "U"
        ],
        "default": "UNSPECIFIED",
        "description": "- UNSPECIFIED: Default unspecified\n - F: Female\n - M: Male\n - U: Unknown",
        "title": "Enumeration set for Gender Code.\n {codeListAgencyName}ICAO{/codeListAgencyName}\n {codeListName}Document 9303 Sex of the holder{/codeListName}"
      },
      "MediaSize": {
        "type": "string",
        "enum": [
          "SIZE_UNSPECIFIED",
          "SMALL",
          "MEDIUM",
          "LARGE",
          "X_LARGE"
        ],
        "default": "SIZE_UNSPECIFIED",
        "description": "- SMALL: Image- less than or equal to 150x150px\n - MEDIUM: Image-between 150x150px and 350x350px\n - LARGE: Image-less between 350x350px and 600x600px\n - X_LARGE: Images larger than 600x600px",
        "title": "Enumeration of media size"
      },
      "OrderedServiceStatusCode": {
        "type": "string",
        "enum": [
          "HK",
          "HI",
          "HD",
          "HN",
          "HX",
          "UN",
          "TK",
          "TL"
        ],
        "default": "HK",
        "description": "Enumeration of possible status codes of a Service instance.\n\n - HK: Default Confirmed\n - HI: Confirmed and EMD issued\n - HD: Confirmed but EMD not issued\n - HN: Pending\n - HX: Cancelled voluntarily\n - UN: Cancelled involuntarily\n - TK: Confirmed and new flight times\n - TL: Waitlisted and new flight times"
      },
      "PaymentCardTrxPaymentCardCardProductTypeCode": {
        "type": "string",
        "enum": [
          "X",
          "P",
          "C"
        ],
        "default": "X",
        "description": "- X: Default value : Unknown card type\n - P: Personal\n - C: Commercial",
        "title": "Optional. Represents card product type.\nP-personal or C-Commercial"
      },
      "PaymentCardTrxPaymentCardCreditCardVendorCode": {
        "type": "string",
        "enum": [
          "VENDOR_UNSPECIFIED",
          "AX",
          "DS",
          "DC",
          "UP",
          "JC",
          "CA",
          "TP",
          "VI"
        ],
        "default": "VENDOR_UNSPECIFIED",
        "description": "- AX: American Express\n - DS: Discover Card\n - DC: Diners Club\n - UP: China UnionPay\n - JC: Japan Credit Bureau\n - CA: Mastercard\n - TP: Universal Air Travel Plan (UATP)\n - VI: VISA International",
        "title": "A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa"
      },
      "PaymentProcessingSummaryPaymentStatus": {
        "type": "string",
        "enum": [
          "UNPAID",
          "PAID",
          "COMMITTED",
          "REFUNDED"
        ],
        "default": "UNPAID",
        "description": "- UNPAID: Default. Payment is not yet provided.\n - PAID: Default. Payment process was done.\n - COMMITTED: Payment committed but not processed yet\n - REFUNDED: Compensation was transfered back to the payer",
        "title": "Enumeration of payment statuses"
      },
      "PriceDifferentialDifferentialType": {
        "type": "string",
        "enum": [
          "DIFFERENTIAL_TYPE_UNSPECIFIED",
          "ADD_COL",
          "ADD_COL_AND_REFUND",
          "ADD_COL_AND_RESIDUAL",
          "EVEN_EXCHANGE",
          "REFUND",
          "RESIDUAL",
          "REUSABLE"
        ],
        "default": "DIFFERENTIAL_TYPE_UNSPECIFIED",
        "description": "- DIFFERENTIAL_TYPE_UNSPECIFIED: Default\n - ADD_COL: Additional collection i.e. due amount is more than 0\nthe change will result into a new payment from the customer (applies to change scenarios)\n - ADD_COL_AND_REFUND: the change will result into both a new payment from customer and a customer refund (applies to cancellation and change scenarios)\n - ADD_COL_AND_RESIDUAL: the change will result into both a new payment from customer and a determined amount kept by airline for future use\n(applies to cancellation and change scenarios)\n - EVEN_EXCHANGE: No addition collection i.e. due amount is 0\nthe change does not have any financial impact to the customer (applies to change scenarios)\n - REFUND: due amount is negative\nthe change will result into a customer refund (applies to cancellation and change scenarios)\n - RESIDUAL: the change will result into a determined amount kept by airline for future use (applies to cancellation and change scenarios)\n - REUSABLE: the financial result of the change will be determined when customer will come back to select new journey options\n(applies to change scenarios when customer does not yet know how to reuse his money)",
        "title": "Enumeration of Price Differential Types"
      },
      "RefundLevelType": {
        "type": "string",
        "enum": [
          "NONE",
          "PARTIAL",
          "FULL"
        ],
        "default": "NONE",
        "description": "Enumeration for level type that will identify \nthe type of refundability for the condition.\n\n - NONE: Non Refundable\n - PARTIAL: Partly Refundable\n - FULL: Fully Refundable"
      },
      "RemarkRemarkType": {
        "type": "string",
        "enum": [
          "PUBLIC",
          "INTERNAL"
        ],
        "default": "PUBLIC",
        "description": "- PUBLIC: Remark will be displayed and shared with airlines and other suppliers\n - INTERNAL: Remark will be displayed but will not be shared with airlines or any suppliers",
        "title": "Enumeration of types of remarks"
      },
      "SeatColumnId": {
        "type": "string",
        "enum": [
          "ID_UNSPECIFIED",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y",
          "Z"
        ],
        "default": "ID_UNSPECIFIED",
        "description": "Enumeration of alphabetic character codes identifying a seat within a row.\n\n - ID_UNSPECIFIED: Default unspecified\n - A: A\n - B: B\n - C: C\n - D: D\n - E: E\n - F: F\n - G: G\n - H: H\n - I: I\n - J: J\n - K: K\n - L: L\n - M: M\n - N: N\n - O: O\n - P: P\n - Q: Q\n - R: R\n - S: S\n - T: T\n - U: U\n - V: V\n - W: W\n - X: X\n - Y: Y\n - Z: Z"
      },
      "SecurePaymentVersion2CardNumberCollectionCode": {
        "type": "string",
        "enum": [
          "COLLECTION_CODE_UNSPECIFIED",
          "K",
          "S"
        ],
        "default": "COLLECTION_CODE_UNSPECIFIED",
        "description": "Indicates the collection method of the card number.\nThis will be newly entered or using previously saved information.\n\n - COLLECTION_CODE_UNSPECIFIED: Default value : Unknown collection method\n - K: Keyed entry\n - S: Previously stored"
      },
      "SecurePaymentVersion2PayerAuthenticationExemptionCode": {
        "type": "string",
        "enum": [
          "ND",
          "AO",
          "DA",
          "LV",
          "MA",
          "SC",
          "TB",
          "TR"
        ],
        "default": "ND",
        "description": "- ND: Default value : None Defined\n - AO: Authentication Outage\n - DA: Delegated Authentication\n - LV: Low Value Exemption\n - MA: Merchant Problem and Major Outage\n - SC: Secure Corporate Exemption\n - TB: Trusted Beneficiary Exemption\n - TR: Transaction Risk Analysis Exemption",
        "title": "Used to identify an exemption to performing payer authentication.\nDefault value : ND (None defined)"
      },
      "SecurePaymentVersion2PayerAuthenticationFailureToCompleteCode": {
        "type": "string",
        "enum": [
          "FAILURE_CODE_UNSPECIFIED",
          "NC",
          "NS"
        ],
        "default": "FAILURE_CODE_UNSPECIFIED",
        "description": "Used to identify possible pre defined reasons for failure to complete payer authentication.\n\n - FAILURE_CODE_UNSPECIFIED: Failure code not specified\n - NC: Authentication Not Complete\n - NS: Authentication Not Successful"
      },
      "SecurePaymentVersion2PaymentTrxChannelCode": {
        "type": "string",
        "enum": [
          "TRX_CHANNEL_UNSPECIFIED",
          "EC",
          "FA",
          "MO",
          "TO"
        ],
        "default": "TRX_CHANNEL_UNSPECIFIED",
        "description": "Indicates the payment transaction channel.\n\n - TRX_CHANNEL_UNSPECIFIED: Not specified\n - EC: Electronic commerce\n - FA: Face to face\n - MO: Mail order (paper mail, fax and email)\n - TO: Telephone order/ IVR"
      },
      "TicketDocType": {
        "type": "string",
        "enum": [
          "DOC_TYPE_UNSPECIFIED",
          "E_TICKET",
          "EMD_S",
          "EMD_A",
          "INF"
        ],
        "default": "DOC_TYPE_UNSPECIFIED",
        "description": "Document types as defined by PADIS 1001 (Document/ Message Name, coded).\n\n - DOC_TYPE_UNSPECIFIED: UNSPECIFIED"
      },
      "TicketReportingType": {
        "type": "string",
        "enum": [
          "REPORTING_TYPE_UNSPECIFIED",
          "AIRLINE",
          "ARC",
          "BSP",
          "NA"
        ],
        "default": "REPORTING_TYPE_UNSPECIFIED",
        "description": "- REPORTING_TYPE_UNSPECIFIED: UNSPECIFIED\n - AIRLINE: AIRLINE\n - ARC: ARC\n - BSP: BSP\n - NA: NOT_APPLICABLE",
        "title": "Enumeration of Reporting Types. {codeListAgencyName}IATA AIDM{/codeListAgencyName}"
      },
      "TravelAgencyAgencyType": {
        "type": "string",
        "enum": [
          "OTHER",
          "IATA",
          "TIDS"
        ],
        "default": "OTHER",
        "description": "- OTHER: Travel agency without IATA number or TIDS code\n - IATA: Travel agency with IATA number having full IATA accreditation and access to BSP\n - TIDS: Travel agency with IATA issued TIDS code",
        "title": "Enumeration of types of travel agencies"
      },
      "commonAirlineTaxonomy": {
        "type": "object",
        "properties": {
          "feature": {
            "$ref": "#/components/schemas/commonFeature"
          },
          "taxonomyCode": {
            "type": "string",
            "description": "Optional. Code defining a product or service within the Shared Industry Taxonomy or bilaterally."
          },
          "additionalInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Optional. Further level of definition of the product or service\nE.g. `speed: 50, altitude: 10000`"
          },
          "descText": {
            "type": "string",
            "title": "Optional. Description of the product or service"
          }
        },
        "title": "Defines a product or service\nRefer https://guides.developer.iata.org/v213/docs/airline-taxonomy-concept",
        "required": [
          "feature"
        ]
      },
      "commonApplicableParty": {
        "type": "string",
        "enum": [
          "PER_PAX",
          "PARTY"
        ],
        "default": "PER_PAX",
        "description": "- PER_PAX: Applicable individually to each passenger\n - PARTY: Application combined to all passengers in a party",
        "title": "Enumeration of application modes of an amount or restriction (e.g. baggage allowance)"
      },
      "commonBaggageAllowance": {
        "type": "object",
        "properties": {
          "appParty": {
            "$ref": "#/components/schemas/commonApplicableParty"
          },
          "type": {
            "$ref": "#/components/schemas/commonBaggageAllowanceType"
          },
          "descText": {
            "type": "string",
            "description": "Optional. Baggage Allowance description and additional information."
          },
          "maxDimensionAllowances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDimensionAllowance"
            },
            "title": "Optional. Baggage dimension allowance"
          },
          "pieceAllowance": {
            "$ref": "#/components/schemas/commonPieceAllowance"
          },
          "weightAllowances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWeightAllowance"
            },
            "description": "Optional. Baggage weight allowance with application information."
          }
        },
        "description": "The amount of checked or carry-on luggage the airline will allow.",
        "required": [
          "type"
        ]
      },
      "commonBaggageAllowanceType": {
        "type": "string",
        "enum": [
          "BAGGAGE_TYPE_UNSPECIFIED",
          "CARRY_ON",
          "CHECKED"
        ],
        "default": "BAGGAGE_TYPE_UNSPECIFIED",
        "description": "Enumeration of types of Baggage Allowances. E.g. Checked or CarryOn."
      },
      "commonCabin": {
        "type": "object",
        "properties": {
          "cabinCode": {
            "$ref": "#/components/schemas/commonCabinCode"
          },
          "cabinName": {
            "type": "string",
            "description": "Optional. Name given to a cabin compartment (e.g. Business, First, Economy)."
          }
        },
        "required": [
          "cabinCode"
        ]
      },
      "commonCabinAssociation": {
        "type": "object",
        "properties": {
          "legCabinAssociations": {
            "$ref": "#/components/schemas/commonLegCabinAssociations"
          },
          "segmentCabin": {
            "$ref": "#/components/schemas/commonCabin"
          }
        },
        "title": "A choice of Cabin Association to leg(s) or a segment",
        "required": [
          "legCabinAssociations",
          "segmentCabin"
        ]
      },
      "commonCabinCode": {
        "type": "string",
        "enum": [
          "CABIN_UNSPECIFIED",
          "F",
          "C",
          "W",
          "Y"
        ],
        "default": "CABIN_UNSPECIFIED",
        "description": "Enumeration of cabin class codes\nThis enumeration is expandable, additional values may be added in future.\n\n - CABIN_UNSPECIFIED: The value is used when any cabin type selection is not specified explicitly in the request\n - F: First (F) class\n - C: Business (C) class\n - W: Premium Economy (W) class\n - Y: Economy (Y) class"
      },
      "commonCancelRestriction": {
        "type": "object",
        "properties": {
          "allowedModificationInd": {
            "type": "boolean",
            "description": "Optional. Indicates whether cancel is allowed.\nIf this is set to FALSE then the condition further identified by the other attributes indicates that no cancellation is allowed."
          },
          "descText": {
            "type": "string",
            "title": "Optional. Describes what this restriction is. E.g.\n* Change allowed within dates specified with associated fee.\n* No change allowed"
          },
          "effectiveDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The effective date used in conjunction with the Expiration date to qualify the applicability of this condition"
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The Expiration date used in conjunction with the Effective date to qualify the applicability of this condition\nThis date is relative to the first flight segment."
          },
          "fee": {
            "$ref": "#/components/schemas/commonChangeOrCancelFee"
          },
          "journeyStageCode": {
            "$ref": "#/components/schemas/commonJourneyStageCode"
          },
          "paxRefId": {
            "type": "string",
            "description": "Optional Used to store a ref to the passenger.\nshould be mapped only if separate cancel and change restriction are returned for each passenger under a fare detail."
          },
          "refund": {
            "$ref": "#/components/schemas/commonRefund"
          }
        },
        "description": "These are a set of qualifying conditions/rules/restrictions that are related to a constrained priced grouping of services for the Cancellation action.",
        "required": [
          "fee"
        ]
      },
      "commonChangeOrCancelFee": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "title": "Optional. Stores the percentage which was used to determine the Fee to be charged in conjunction or not with\n`min_amount` and `max_amount`"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "minAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "approxInd": {
            "type": "boolean",
            "description": "Optional. When true, this fee is approximate."
          },
          "descText": {
            "type": "string",
            "title": "Optional. Fee description.  Example: Change penalty"
          }
        },
        "description": "Amount added on to a charge for changes to an already reserved product, purpose, or service."
      },
      "commonChangeRestriction": {
        "type": "object",
        "properties": {
          "allowedModificationInd": {
            "type": "boolean",
            "description": "Optional. Indicates whether cancel is allowed.\nIf this is set to FALSE then the condition further identified by the other attributes indicates that no cancellation is allowed."
          },
          "changeType": {
            "$ref": "#/components/schemas/commonChangeRestrictionChangeType"
          },
          "descText": {
            "type": "string",
            "title": "Optional. Describes what this restriction is. E.g.\n* Change allowed within dates specified with associated fee.\n* No change allowed"
          },
          "effectiveDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The effective date used in conjunction with the Expiration date to qualify the applicability of this condition\nThis date is relative to the first flight segment."
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The Expiration date used in conjunction with the Effective date to qualify the applicability of this condition"
          },
          "fee": {
            "$ref": "#/components/schemas/commonChangeOrCancelFee"
          },
          "journeyStageCode": {
            "$ref": "#/components/schemas/commonJourneyStageCode"
          },
          "paxRefId": {
            "type": "string",
            "description": "Optional Used to store a ref to the passenger.\nshould be mapped only if separate cancel and change restriction are returned for each passenger under a fare detail."
          },
          "refund": {
            "$ref": "#/components/schemas/commonRefund"
          }
        },
        "description": "These are a set of qualifying conditions/rules/restriction \nthat are related to a constrained priced grouping of services \nfor a Change/modification action."
      },
      "commonChangeRestrictionChangeType": {
        "type": "string",
        "enum": [
          "FLIGHT",
          "NAME",
          "SERVICE"
        ],
        "default": "FLIGHT",
        "description": "Enumeration of the type of change that applies to the condition.\n\n - FLIGHT: Default Flight change\n - NAME: Pax name change\n - SERVICE: Service change"
      },
      "commonChannel": {
        "type": "string",
        "enum": [
          "NDC",
          "DIRECT_CONNECT",
          "GDS_1A",
          "GDS_1G",
          "GDS_1S"
        ],
        "default": "NDC",
        "description": "Enumeration of channels through with air products are sourced\nThis enumeration is expandable, additional values may be added in future.\n\n - NDC: Default NDC channel\n - DIRECT_CONNECT: Proprietary (non NDC) direct connect channel\n - GDS_1A: Amadeus GDS channel\n - GDS_1G: Galileo GDS channel\n - GDS_1S: Sabre GDS channel"
      },
      "commonChargeOwner": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "title": "IATA-defined 2-character code identifying an airline or GDS\nor an identifier like 'LHG' for Lufthansa Group\nEither `carrier_code` or `travel_agency` is set"
          },
          "travelAgency": {
            "$ref": "#/components/schemas/commonTravelAgency"
          }
        },
        "title": "Organization applying this fee/discount"
      },
      "commonCommission": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "code": {
            "type": "string",
            "title": "Optional. Commission code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Commission name"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "title": "Optional. The node will have information on the commission percentage. The element will not be present if the comission is a fixed amount and not a percentage.\n // Example: 20"
          }
        },
        "description": "An amount of money, typically a set percentage of the value involved,\npaid to an agent in a commercial transaction.",
        "required": [
          "amount"
        ]
      },
      "commonContactEnumsType": {
        "type": "string",
        "enum": [
          "OTHER",
          "HOME",
          "BUSINESS",
          "AGY_CUSTOMER_SERVICE",
          "AGY_LOYALTY"
        ],
        "default": "OTHER",
        "title": "Enumeration of contact types. Based on PADIS code list: Contact Type"
      },
      "commonContactInfo": {
        "type": "object",
        "properties": {
          "contactPurpose": {
            "$ref": "#/components/schemas/ContactEnumsPurpose"
          },
          "individual": {
            "$ref": "#/components/schemas/commonIndividual"
          },
          "phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPhone"
            },
            "title": "Optional. Telephone number details"
          },
          "postalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPostalAddress"
            },
            "description": "Optional. Physical address used for postal service."
          },
          "emailAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonEmailAddress"
            },
            "description": "Optional. The email address which should be used for contact purposes."
          },
          "paxSegmentRefId": {
            "type": "string",
            "description": "Optional. Reference to a Pax Segment ID."
          },
          "contactRefusedInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, Contact Information was refused to be provided."
          }
        },
        "description": "The electronic or geographic address which a party has provided as the contact channel. For example, contact email,\ncontact postal address, contact phone number."
      },
      "commonCoupon": {
        "type": "object",
        "properties": {
          "couponNumber": {
            "type": "string",
            "format": "uint64",
            "description": "Required. Number assigned to the issued coupon."
          },
          "fareBasisCode": {
            "type": "string",
            "title": "Optional. Fare basis code as ticketed. Example: Y26"
          },
          "couponStatus": {
            "$ref": "#/components/schemas/commonCouponStatus"
          },
          "soldAirlineInfo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to a PaxSegmentID's - 1 or more pax segments references.\nThese references will be to a data list or pax segment list in the contained message."
          },
          "serviceRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Reference to the service item in the Order Item"
          },
          "couponRefNumber": {
            "type": "string",
            "description": "Optional. The sequential number (segment identifier) of an individual flight segment."
          },
          "excessBaggage": {
            "$ref": "#/components/schemas/commonExcessBaggage"
          },
          "connectedCouponNumber": {
            "type": "string",
            "format": "int64",
            "title": "Optional. The coupon number to which this document is connected. Applicable for EMDA Coupon to identify the Coupon number of the Flight Item"
          }
        },
        "description": "The portion of the Passenger Ticket and Baggage Check or Excess Baggage Ticket that indicates particular places\nbetween which the coupon is good for carriage.",
        "required": [
          "couponNumber"
        ]
      },
      "commonCouponStatus": {
        "type": "string",
        "enum": [
          "STATUS_UNSPECIFIED",
          "EXCHANGED",
          "REISSUED",
          "OPEN",
          "AIRPORT_CONTROL",
          "FLOWN",
          "REFUND",
          "VOID",
          "CHECKED_IN"
        ],
        "default": "STATUS_UNSPECIFIED",
        "title": "Current status of the flight/ value coupon. Example: E (Exchanged/Reissued)"
      },
      "commonCurConversion": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "sourceAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "multiplierValue": {
            "type": "number",
            "format": "double",
            "title": "The conversion rate used to convert from `source_amount` to `amount`. E.g. `80.8716018`"
          },
          "format": {
            "type": "string",
            "title": "Optional. The converted currency format. E.g. `1`"
          }
        },
        "required": [
          "amount",
          "sourceAmount",
          "multiplierValue"
        ]
      },
      "commonDataMap": {
        "type": "object",
        "properties": {
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPax"
            },
            "title": "Passenger reference data definition.\nKey is `pax_id` and value the corresponding `Pax` data"
          },
          "contactInfos": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonContactInfo"
            },
            "title": "Contact info data definition.\nThe electronic or geographic address which a party has provided as the contact channel. For example, contact email, contact postal address, contact phone number.\nKey is `contact_info_id` and value the corresponding `ContactInfo` data"
          },
          "paxSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPaxSegment"
            },
            "title": "Segment reference data definition.\nKey is `pax_segment_id` and value the corresponding `PaxSegment` data"
          },
          "paxJourneys": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPaxJourney"
            },
            "title": "Journey reference data definition.\nKey is `pax_journey_id` and value the corresponding `PaxJourney` data"
          },
          "originDestinations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonOriginDest"
            },
            "title": "OD reference data definition.\nKey is `origin_dest_id` and value the corresponding `OriginDest` data"
          },
          "baggageAllowances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonBaggageAllowance"
            },
            "title": "Optional. Baggage allowance reference data definition\nKey is `baggage_allowance_id` and value the corresponding `BaggageAllowance` data"
          },
          "serviceDefs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonServiceDefinition"
            },
            "title": "Optional. Service Definition reference data definition\nKey is `service_def_id` and value the corresponding `ServiceDefinition` data"
          },
          "seatProfiles": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonSeatProfile"
            },
            "title": "Optional. Seat Profile reference data definition.\nKey is `seat_profile_id` and value the corresponding `ServiceDefinition` data"
          },
          "penalties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPenalty"
            },
            "title": "Optional. Penalty reference data definition.\nKey is `penalty_id` and value the corresponding `Penalty` data"
          },
          "priceClasses": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonPriceClass"
            },
            "title": "Optional. PriceClass reference data definition.\nKey is `price_class_id` and value the corresponding `PriceClass` data"
          },
          "medias": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonMedia"
            },
            "title": "Optional. Media reference data definition.\nKey is `media_id` and value the corresponding `Media` data"
          },
          "datedMarketingSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonDatedMarketingSegment"
            },
            "title": "Optional. Dated marketing segments used in the contained message.\nKey is `dated_marketing_segment_id` and value the corresponding `DatedMarketingSegment` data"
          },
          "datedOperatingSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonDatedOperatingSegment"
            },
            "title": "Optional. Dated operating segments used in the contained message.\nKey is `dated_operating_segment_id` and value the corresponding `DatedOperatingSegment` data"
          },
          "datedOperatingLegs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonDatedOperatingLeg"
            },
            "title": "Optional. Dated operating legs used in the contained message.\nKey is `dated_operating_leg_id` and value the corresponding `DatedOperatingLeg` data"
          }
        },
        "description": "Reference Data Map.\nEach field is a [Map/Dictionary/Associative-Array](https://swagger.io/docs/specification/data-models/dictionaries/)\nwhere keys are string IDs of the mapped value objects of a specific type (e.g. `Pax`).\nA value object can be referred from other parts of a message using it's ID."
      },
      "commonDatedMarketingSegment": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "flightNumber": {
            "type": "string",
            "description": "Required. The numerical designation of a flight as it is marketed by a carrier."
          },
          "operationalSuffix": {
            "type": "string",
            "description": "Optional. Used to distinguish two flights having the same flight number and departing from their respective Origin Stations on the same date."
          },
          "dep": {
            "$ref": "#/components/schemas/commonStation"
          },
          "arrival": {
            "$ref": "#/components/schemas/commonStation"
          },
          "datedOperatingSegmentRefId": {
            "type": "string",
            "description": "Required. Reference to a unique identifier of a dated operating segment used in a message."
          }
        },
        "description": "The commercial designation under which a Dated Operating Segment can be booked, either under the operating carrier's designator or that of another carrier (codeshare).",
        "required": [
          "carrierCode",
          "flightNumber",
          "dep",
          "arrival",
          "datedOperatingSegmentRefId"
        ]
      },
      "commonDatedOperatingLeg": {
        "type": "object",
        "properties": {
          "dep": {
            "$ref": "#/components/schemas/commonStation"
          },
          "arrival": {
            "$ref": "#/components/schemas/commonStation"
          },
          "aircraftType": {
            "type": "string",
            "description": "Optional. Code assigned to an aircraft type in IATA SSIM."
          },
          "changeOfGaugeInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, indicates a Change of Gauge will take place between the current leg and that which immediately precedes it."
          }
        },
        "description": "The nonstop operation of a transport vehicle between the departure station and the arrival station. Can be used for aircrafts as well as other transport vehicles such as train or bus etc.",
        "required": [
          "dep",
          "arrival"
        ]
      },
      "commonDatedOperatingLegRef": {
        "type": "object",
        "properties": {
          "paxSegmentRefId": {
            "type": "string",
            "title": "Reference to the passenger segment containing the legs"
          },
          "datedLegRefId": {
            "type": "string",
            "title": "References to dated operating flight legs of a passenger segment"
          }
        },
        "title": "Holds references to dated operating flight legs of a passenger segment"
      },
      "commonDatedOperatingLegRefs": {
        "type": "object",
        "properties": {
          "datedOperatingLegRefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDatedOperatingLegRef"
            }
          }
        },
        "title": "Holds references to dated operating flight legs possibly belonging to different passenger segments"
      },
      "commonDatedOperatingSegment": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "flightNumber": {
            "type": "string",
            "title": "Optional. The numerical designation of a flight as it is operated by a carrier.\nThis will be set only if the operating flight is different from marketing flight"
          },
          "operationalSuffix": {
            "type": "string",
            "title": "Optional. Used to distinguish two flights having the same flight number and departing from their respective Origin Stations on the same date.\nThis will be set only if the operating flight is different from the marketing flight"
          },
          "datedOperatingLegRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Uniquely identifies a leg within the context of one message."
          },
          "secureFlightInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, this segment is subject to US TSA 'Secure Flight' passenger prescreening program. Passport details are requires while booking creation when true."
          },
          "duration": {
            "type": "string",
            "description": "Optional. Total segment time in ISO 8601 format, including the combined air time and connection times of any legs."
          }
        },
        "description": "An operation between board point and any subsequent off point within the same flight designator. Could be one or more legs. Could also be used for other transport vehicles such as train or bus etc.",
        "required": [
          "carrierCode"
        ]
      },
      "commonDiffPriceAndFareDetails": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/commonDifferentialPrice"
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the carrier for the carriage of one passenger and his/her allowable free baggage.\nThe price in the FareDetail will change based on whether the carrier provides New or Differential price\nin case of a Re-shop similar to the price of the offeritem."
          }
        },
        "description": "A specialization of a container for Price and Fare detail information.",
        "required": [
          "price"
        ]
      },
      "commonDifferentialPrice": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "baseAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "taxSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTaxSummary"
            },
            "description": "Optional. A compulsory contribution to state revenue, levied by the government on workers' income\nand business profits or added to the cost of some goods, services, and transactions.\nIf TaxSummary is not provided in the response, tax would be 0 for the fare under scope."
          },
          "dueByAirlineAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "dueToAirlineAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "surcharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSurcharge"
            },
            "description": "Optional. Surcharge details."
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFee"
            },
            "description": "Optional. Amount added on to a charge for a specific product, purpose, or service."
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDiscount"
            },
            "description": "Optional. Deductions from the price amount, made in advance of its payment."
          },
          "markups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonMarkup"
            },
            "description": "Optional. The amount added to the cost price of goods to cover overhead and profit."
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "title": "Optional. The commission amount information"
          }
        },
        "description": "A specialization of price used for price differentials.\nPrice is the amount of money expected, required, or given in payment for something.",
        "required": [
          "totalAmount"
        ]
      },
      "commonDimensionAllowance": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/commonDimensionUnit"
          },
          "length": {
            "type": "number",
            "format": "float",
            "title": "Optional. The length of the bag in `unit` measurement"
          },
          "width": {
            "type": "number",
            "format": "float",
            "title": "Optional. The width of the bag in `unit` measurement"
          },
          "height": {
            "type": "number",
            "format": "float",
            "title": "Optional. The height of the bag in `unit` measurement"
          },
          "totalLinear": {
            "type": "number",
            "format": "float",
            "title": "Optional. The total linear dimension of the bag in `unit` measurement"
          }
        },
        "title": "Baggage dimension allowance",
        "required": [
          "unit"
        ]
      },
      "commonDimensionUnit": {
        "type": "string",
        "enum": [
          "DIMENSION_UNIT_UNSPECIFIED",
          "CM",
          "IN"
        ],
        "default": "DIMENSION_UNIT_UNSPECIFIED",
        "description": "- DIMENSION_UNIT_UNSPECIFIED: Default unspecified\n - CM: Centimeter\n - IN: Inch",
        "title": "Enumeration of units of measurement for dimension"
      },
      "commonDiscount": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "code": {
            "type": "string",
            "title": "Optional. Discount code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Discount name"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "preDiscountedAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "description": "Optional. The percentage that was used to determine the Discount."
          }
        },
        "description": "Deduction from the price amount, made in advance of its payment.",
        "required": [
          "amount"
        ]
      },
      "commonEmailAddress": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/components/schemas/commonContactEnumsType"
          },
          "emailAddressText": {
            "type": "string",
            "description": "The email address which should be used for contact purposes."
          }
        },
        "description": "The email address which should be used for contact purposes."
      },
      "commonEmployer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Optional. Name of the organization"
          },
          "corporateId": {
            "type": "string",
            "description": "Optional. Corporate profile ID for the employer stored in Verteil."
          },
          "salesTaxRegistration": {
            "$ref": "#/components/schemas/commonSalesTaxRegistration"
          }
        },
        "title": "An employer such as a business, government body, department, charity, or financial institution.\nPrimarily intended for providing tax information"
      },
      "commonExcessBaggage": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "totalQty": {
            "type": "integer",
            "format": "int32",
            "description": "Required. Excess baggage quantity."
          },
          "excessBaggageMeasure": {
            "$ref": "#/components/schemas/commonExcessBaggageMeasure"
          }
        },
        "description": "Excess baggage information displayed on a coupon.",
        "required": [
          "amount",
          "totalQty",
          "excessBaggageMeasure"
        ]
      },
      "commonExcessBaggageMeasure": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/commonWeightUnit"
          },
          "maxWeight": {
            "type": "number",
            "format": "float",
            "title": "Required. Maximum weight value - e.g. 30.0"
          }
        },
        "required": [
          "unit",
          "maxWeight"
        ]
      },
      "commonFareCalculationInfo": {
        "type": "object",
        "properties": {
          "pricingCodeText": {
            "type": "string",
            "description": "Optional. Primary identifier reflecting the method of pricing for a transaction."
          },
          "addlInfoText": {
            "type": "string",
            "description": "Optional. The fare calculation text required in the fare calculation area of an electronic ticket."
          },
          "reportingCodeText": {
            "type": "string",
            "description": "Optional. Secondary identifier reflecting the method of pricing for a transaction used in the reporting process."
          }
        },
        "description": "Information related to the calculation of the Fare amount by applying various rules to determine a final fare for an airline ticket."
      },
      "commonFareComponent": {
        "type": "object",
        "properties": {
          "priceClassRefId": {
            "type": "string",
            "title": "Optional. Identifies price class (fare family or fare brand) within the cabin"
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. Reference to passenger segments that are covered by this fare component"
          },
          "fbc": {
            "type": "string",
            "title": "Optional. Fare basis code. Example: Y26"
          },
          "fareType": {
            "$ref": "#/components/schemas/commonFareTypeCode"
          },
          "seatsLeft": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The number of seats remaining in this RBD. This will be available only of the supplier provides remaining\nseats counts."
          },
          "ticketDesigCode": {
            "type": "string",
            "description": "Optional. The Fare Basis Code Designator shall be placed within this element and removed from the Fare Basis Code element.\nFor example, if the Airline has a fare basis code with a designator like `JFBC/WO`, The `fbc` field will\ncontain `JFBC` and this field will contain `WO`."
          },
          "cancelRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCancelRestriction"
            },
            "description": "Optional. These are a set of qualifying conditions/rules/restrictions that are related to a constrained priced grouping of services for the Cancellation action."
          },
          "changeRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonChangeRestriction"
            },
            "description": "Optional These are a set of qualifying conditions/rules/restriction that are related to a constrained priced grouping of services for a Change/modification action."
          }
        },
        "title": "A portion of an itinerary between two consecutive fare construction points. If the journey has only one fare component,\nthe points of origin and destination are the only fare construction points",
        "required": [
          "paxSegmentRefIds"
        ]
      },
      "commonFareDetail": {
        "type": "object",
        "properties": {
          "passengerRefs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Passengers associated with the specific Fare Detail instance. Allows the Price breakdown of the fare for the offeritem per passenger."
          },
          "price": {
            "$ref": "#/components/schemas/commonPrice"
          },
          "fareWaivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareWaiver"
            },
            "description": "Optional. Validating carrier-assigned fare rule modification or override information."
          },
          "fareComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareComponent"
            },
            "title": "Optional. A portion of an itinerary between two consecutive fare construction points. If the journey has only one fare component,\nthe points of origin and destination are the only fare construction points.\nThis is mandatory in cases where segment level details are present"
          },
          "dealCode": {
            "type": "string",
            "title": "Optional. A tag on the fare used for accounting and backend processing"
          },
          "accountCode": {
            "type": "string",
            "title": "Optional. Corporate account ID E.g. CLID"
          },
          "fareCalculationInfo": {
            "$ref": "#/components/schemas/commonFareCalculationInfo"
          },
          "penaltyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional.\nReference to Penalty IDs. In Reshop scenario the Fee charged by the carrier to make a change for one passenger will be provided in the Penalty referred here."
          }
        },
        "title": "Fare Code Indicator to represent pricing method (IATA PADIS Code List for data element 5387 - Price Type Qualifier) •",
        "required": [
          "passengerRefs",
          "price"
        ]
      },
      "commonFareTypeCode": {
        "type": "string",
        "enum": [
          "FARE_TYPE_UNSPECIFIED",
          "PUBL",
          "MR",
          "PVT",
          "IT",
          "ITD",
          "ITSD",
          "CF",
          "CB",
          "HR",
          "PA",
          "LBR",
          "STU",
          "VFR",
          "CRU"
        ],
        "default": "FARE_TYPE_UNSPECIFIED",
        "description": "Fare type codes\nThis enumeration is expandable, additional values may be added in future.\n\n - FARE_TYPE_UNSPECIFIED: Default unspecified\n - PUBL: Published Fare\n - MR: Marine Fare\n - PVT: Agency Private Fare\n - IT: Inclusive Tours Fare\n - ITD: Inclusive Tours Fare Deferred (BA specific)\n - ITSD: Inclusive Tours Fare Semi Deferred (BA specific)\n - CF: Corporate Fare\n - CB: Contract bulk\n - HR: Humanitarian\n - PA: Private adult\n - LBR: Labour fare\n - STU: Student fare\n - VFR: Visit Friends & Relatives\n - CRU: Cruise fare"
      },
      "commonFareWaiver": {
        "type": "object",
        "properties": {
          "fareRuleWaiverCode": {
            "type": "string",
            "description": "Required. Code assigned by the validating carrier that allows fare rule modification or override."
          },
          "fareWaiverType": {
            "type": "string",
            "description": "Optional. Waiver type. Examples: ExchangeReissued, FareComponent."
          }
        },
        "description": "Validating carrier-assigned fare rule modification or override information.",
        "required": [
          "fareRuleWaiverCode"
        ]
      },
      "commonFeature": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/commonFeatureLocation"
          },
          "category": {
            "$ref": "#/components/schemas/FeatureCategory"
          },
          "subCategory": {
            "$ref": "#/components/schemas/FeatureSubCategory"
          }
        },
        "title": "Identifies a product or service feature. E.g. _FLIGHT.AMENITY.WI_FI_"
      },
      "commonFeatureLocation": {
        "type": "string",
        "enum": [
          "LOCATION_UNSPECIFIED",
          "FLIGHT",
          "AIRPORT",
          "GROUND"
        ],
        "default": "LOCATION_UNSPECIFIED",
        "description": "Enumeration of the locations where the feature is delivered or applies to\nThis enumeration is expandable, additional values may be added in future.\n\n - LOCATION_UNSPECIFIED: Default category\n - FLIGHT: Product or service is delivered on flight\n - AIRPORT: Product or service is delivered in airport\n - GROUND: Product or service is delivered on ground outside airport"
      },
      "commonFeaturesDesc": {
        "type": "object",
        "properties": {
          "descTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. Account or representation of the features"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeature"
            },
            "title": "Optional. Applicable features - e.g. __FLIGHT.AMENITY.WI_FI__"
          },
          "mediaRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. References to media depicting the features"
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. References to pax segments for which these features are applicable"
          }
        },
        "title": "Describes a product or service features",
        "required": [
          "descTexts"
        ]
      },
      "commonFee": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "code": {
            "type": "string",
            "title": "Optional. Fee code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Fee name"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "title": "Optional. Stores the percentage which was used to determine the Fee to be charged in conjunction or not with\n`min_amount` and `max_amount`"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "minAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "approxInd": {
            "type": "boolean",
            "description": "Optional. When true, this fee is approximate."
          },
          "refundInd": {
            "type": "boolean",
            "description": "Optional. When true, fee amount is refundable."
          },
          "descText": {
            "type": "string",
            "title": "Optional. Fee/surcharge Description.  Example: U.S Customs User Fee"
          },
          "includedInBaseFare": {
            "type": "boolean",
            "description": "Optional. Indicates if fee/surcharge is included in base fare."
          }
        },
        "description": "Amount added on to a charge for a specific product, purpose, or service.",
        "required": [
          "amount"
        ]
      },
      "commonIdentityDoc": {
        "type": "object",
        "properties": {
          "identityDocId": {
            "type": "string",
            "description": "Required. Uniquely identifies the document from all other identity documents issued by the state or organization.\ne.g. passport number, drivers license number."
          },
          "identityDocTypeCode": {
            "$ref": "#/components/schemas/IdentityDocDocTypeCode"
          },
          "individual": {
            "$ref": "#/components/schemas/commonIndividual"
          },
          "issuingCountryCode": {
            "type": "string",
            "description": "Optional. 2 letter ISO Country Code. Examples: US, FR."
          },
          "residenceCountryCode": {
            "type": "string",
            "description": "Optional. 2 letter ISO Country Code. Examples: US, FR."
          },
          "issueDate": {
            "type": "string",
            "title": "Optional. The date the identity document was issued.\nISO-8601 format - `yyyy-MM-dd'. E.g. `2021-12-03`"
          },
          "expiryDate": {
            "type": "string",
            "title": "Optional. The date the identity document expires.\nISO-8601 format - `yyyy-MM-dd'. E.g. `2031-12-02`"
          }
        },
        "description": "Any document which may be used to identify a person or verify aspects of a person's personal identity.\nIf issued in a small, standard credit card size form, it is usually called an identity card.\nSome countries issue formal identity documents, while others may require identity verification using informal documents.\nWhen the identity document incorporates a person's photograph, it may be called photo ID.\nIn the absence of a formal identity document, a driver's license may be accepted in many countries for identity verification.\nMost countries accept passports as a form of identification.",
        "required": [
          "identityDocId",
          "identityDocTypeCode"
        ]
      },
      "commonIndividual": {
        "type": "object",
        "properties": {
          "titleName": {
            "type": "string",
            "description": "Optional. A word such as Mr., Mrs., Miss or Dr that is used before an individual's name to indicate the gender, profession or marital status."
          },
          "givenNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. A personal name given to the individual at birth and used before a family name. Also called first name. E.g. JOHN.\nUp to 5 given names can be provided.\nMax length of each given name is 64 characters"
          },
          "surname": {
            "type": "string",
            "title": "Required. Individual's hereditary name(s) common to all members of a family. Also known as family name or last name. E.g. SMITH. Excludes any potential suffix.\nMax length of surname is 64 characters"
          },
          "genderCode": {
            "$ref": "#/components/schemas/IndividualGenderCode"
          },
          "age": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. The age of the individual."
          },
          "birthdate": {
            "type": "string",
            "title": "Optional. The date on which an individual was born. E.g. 2012-02-01"
          }
        },
        "description": "A single human being as distinct from a group, class, or family.",
        "required": [
          "surname"
        ]
      },
      "commonIssueInfo": {
        "type": "object",
        "properties": {
          "locationCode": {
            "type": "string",
            "title": "Optional.\nLocation code of the place where the ticket is issued\nIATA 3-letter code defining the ticket issuing city"
          },
          "issueDate": {
            "type": "string",
            "title": "Optional.\nThe date that the document was originally issued. Timezone would be the local date/time of the location_code when returned, if not timezone should be considered as the local timezone of the agency's POS.\nWill be in ISO-8601 format - `yyyy-MM-dd`. E.g. `2021-12-03`"
          },
          "issueTime": {
            "type": "string",
            "title": "Optional.\nThe time that the document was originally issued. Timezone would be the local date/time of the location_code when returned, if not timezone should be considered as the local timezone of the agency's POS\nWill be in ISO-8601 format - `HH:mm`. E.g. `10:15`"
          },
          "issueCarrier": {
            "$ref": "#/components/schemas/commonIssuingCarrier"
          }
        },
        "description": "The issuing Carrier and issuing location of a ticket.",
        "required": [
          "issueCarrier"
        ]
      },
      "commonIssuingCarrier": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "title": "Required. carrier code"
          }
        },
        "title": "Carrier issuing the ticket",
        "required": [
          "carrierCode"
        ]
      },
      "commonJourneyStageCode": {
        "type": "string",
        "enum": [
          "JOURNEY_STAGE_UNSPECIFIED",
          "PRIOR_TO_DEP",
          "AFTER_DEP",
          "NO_SHOW"
        ],
        "default": "JOURNEY_STAGE_UNSPECIFIED",
        "description": "- PRIOR_TO_DEP: Prior to departure (PDE)\n - AFTER_DEP: After departure (ADE)\n - NO_SHOW: No Show",
        "title": "Enumeration of stages of a passenger journey"
      },
      "commonLegCabinAssociations": {
        "type": "object",
        "properties": {
          "legsAssociatedCabins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonLegsAssociatedCabins"
            },
            "description": "Required. An association of cabin types to 1 or more legs."
          }
        },
        "description": "A container to enable cabins to be associated with legs."
      },
      "commonLegsAssociatedCabins": {
        "type": "object",
        "properties": {
          "datedOperatingLegRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Uniquely identifies a leg within the context of one message."
          },
          "legCabin": {
            "$ref": "#/components/schemas/commonCabin"
          }
        },
        "description": "An association of cabin types to 1 or more legs.",
        "required": [
          "datedOperatingLegRefIds",
          "legCabin"
        ]
      },
      "commonLoyaltyProgram": {
        "type": "object",
        "properties": {
          "allianceCode": {
            "type": "string",
            "description": "Optional. Two or more airlines participating in a commercial relationship or joint venture, where a joint and commonly identifiable product is marketed under a single commercial name or brand."
          },
          "carrierCode": {
            "type": "string",
            "description": "Optional. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "programCode": {
            "type": "string",
            "title": "Optional. Loyalty Program ID: Example: OnBusiness"
          }
        },
        "description": "A rewards program offered by a company to customers who frequently make purchases, which may give a customer advanced access to new products, special sales coupons or free merchandise.\nAt least one of alliance_code or carrier_code or program_code must be set."
      },
      "commonLoyaltyProgramAccount": {
        "type": "object",
        "properties": {
          "loyaltyProgram": {
            "$ref": "#/components/schemas/commonLoyaltyProgram"
          },
          "accountNumber": {
            "type": "string",
            "title": "Required. Loyalty Program account number. Example: ABC123456"
          }
        },
        "description": "An account set up for a customer within a rewards program which holds funds on behalf of that customer.",
        "required": [
          "loyaltyProgram",
          "accountNumber"
        ]
      },
      "commonMarkup": {
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/commonChargeOwner"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "code": {
            "type": "string",
            "title": "Optional. Markup code"
          },
          "name": {
            "type": "string",
            "title": "Optional. Markup name"
          }
        },
        "description": "Defines the reason for the markup added by an airline as part of the offer reported as calculation detail. The amount added to the cost price of goods to cover overhead and profit.",
        "required": [
          "amount"
        ]
      },
      "commonMedia": {
        "type": "object",
        "properties": {
          "descText": {
            "type": "string",
            "description": "Optional. Description of the referenced media.\nAny formatting will be in [CommonMark](https://commonmark.org/)."
          },
          "mediaLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonMediaLink"
            },
            "title": "Required. Links to media of different types and sizes"
          }
        },
        "description": "Electronic documents, images, and other files which accompany and support a product's description.",
        "required": [
          "mediaLinks"
        ]
      },
      "commonMediaLink": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "Required. The Uniform Resource Locator that identifies the media and where the it is located.\nAPI consumers are expected to access the media content by following this URL"
          },
          "type": {
            "$ref": "#/components/schemas/commonMediaType"
          },
          "size": {
            "$ref": "#/components/schemas/MediaSize"
          }
        },
        "required": [
          "url"
        ]
      },
      "commonMediaType": {
        "type": "string",
        "enum": [
          "IMAGE",
          "DOC",
          "VIDEO"
        ],
        "default": "IMAGE",
        "description": "- IMAGE: Image\n - DOC: Document\n - VIDEO: Video",
        "title": "Enumeration of media types"
      },
      "commonOfferAssociation": {
        "type": "object",
        "properties": {
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to an Offer for which this payment method applies."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. Identifier for the owner of this Offer and responsible for the delivery of the items.\nFor air content, this is the IATA-defined 2-character code of the carrier owning the offer."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "offerItemRefId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to OfferItems within the Offer for which this payment method applies.\nIf empty, the payment method is applicable to all OfferItems in the Offer."
          }
        },
        "description": "Reference to Offer and optionally OfferItems for which this payment method applies.",
        "required": [
          "offerRefId",
          "ownerCode"
        ]
      },
      "commonOfferFlightAssociations": {
        "type": "object",
        "properties": {
          "paxJourneyRefs": {
            "$ref": "#/components/schemas/commonPaxJourneyRefs"
          },
          "paxSegmentRefs": {
            "$ref": "#/components/schemas/commonPaxSegmentRefs"
          },
          "legRefs": {
            "$ref": "#/components/schemas/commonDatedOperatingLegRefs"
          }
        },
        "title": "The flight level (journey/OD vs segment vs leg) at which a service is associated",
        "required": [
          "paxJourneyRefs",
          "paxSegmentRefs",
          "legRefs"
        ]
      },
      "commonOrderAssociation": {
        "type": "object",
        "properties": {
          "orderRefId": {
            "type": "string",
            "description": "Required. Reference to an Order for which this payment method applies."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. Identifier for the owner of this Order responsible for the delivery of the items .\nFor air content, this is the IATA-defined 2-character code of the carrier owning the order."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "orderItemRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to Order Item IDs within the Order for which this payment method applies.\nIf empty, the payment method is applicable to all OrderItems in the Order."
          }
        },
        "description": "Reference to Order and optionally OrderItems for which this payment method applies.",
        "required": [
          "orderRefId",
          "ownerCode"
        ]
      },
      "commonOrderServiceDefinitionRef": {
        "type": "object",
        "properties": {
          "paxSegmentRef": {
            "type": "string",
            "description": "Required. A passenger segment to which the service is associated."
          },
          "legRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. References to dated operating flight legs of the passenger segment identified by `pax_segment_ref`\nIf not provided, the service applies to entire passenger segment"
          },
          "serviceDefRefId": {
            "type": "string",
            "description": "Optional. References a Service Definition within this message."
          }
        },
        "title": "Airline specific definition of a product or service (excluding flights) that can be separately sold and delivered.\ne.g. bag, seat, meal on a flight. A service can be at passenger segment level or dated operating flight leg level",
        "required": [
          "paxSegmentRef"
        ]
      },
      "commonOriginDest": {
        "type": "object",
        "properties": {
          "origin": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the origin city or airport code."
          },
          "dest": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the destination city or airport code."
          },
          "paxJourneyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Uniquely identifies a Passenger Journey within the context of one message."
          }
        },
        "title": "The Origin and Destination airport/city pair which confines a passenger journey or an aircraft flight. Business Identifier Fields: - [Station] (Origin Station) IATA Location Code - [Station] (Destination Station) IATA Location Code",
        "required": [
          "origin",
          "dest"
        ]
      },
      "commonPassengerTypeCode": {
        "type": "string",
        "enum": [
          "PTC_UNSPECIFIED",
          "ADT",
          "YADT",
          "CHD",
          "INF"
        ],
        "default": "PTC_UNSPECIFIED",
        "description": "Type of passengers.\n\n - PTC_UNSPECIFIED: Default unspecified\n - ADT: Adult\n - YADT: Young Adult\n - CHD: Child\n - INF: Infant"
      },
      "commonPax": {
        "type": "object",
        "properties": {
          "ptc": {
            "$ref": "#/components/schemas/commonPassengerTypeCode"
          },
          "paxRefId": {
            "type": "string",
            "description": "Optional. Reference to a Passenger ID within this message, associating an infant on lap to this adult Passenger."
          },
          "primaryPaxInd": {
            "type": "boolean",
            "description": "Optional. Indicates if this is the primary passenger."
          },
          "individual": {
            "$ref": "#/components/schemas/commonIndividual"
          },
          "loyaltyProgramAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonLoyaltyProgramAccount"
            },
            "description": "Optional. An account set up for a customer within a rewards program which holds funds on behalf of that customer."
          },
          "citizenshipCountryCode": {
            "type": "string",
            "description": "Optional. 2 letter ISO Country Code. Examples: US, FR."
          },
          "contactInfoRefId": {
            "type": "string",
            "title": "Optional. Reference to contact info"
          },
          "identityDocs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonIdentityDoc"
            },
            "description": "Optional. Documents which may be used to identify a person or verify aspects of a person's personal identity."
          },
          "employer": {
            "$ref": "#/components/schemas/commonEmployer"
          },
          "profileId": {
            "type": "string",
            "description": "Optional. Profile ID of the passenger.\nThis could be Verteil customer profile Id, or an external profile Id."
          },
          "remarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonRemark"
            },
            "title": "Optional. Pax level remarks"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Tags are key-value pairs that can be used to associate additional information with the passenger."
          }
        },
        "description": "Any person except members of the crew to be carried with the consent of the carrier, on board an aircraft.\nHolds the attributes specific to a one booking, from shopping to fulfillment."
      },
      "commonPaxJourney": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "Optional. Total journey time in ISO 8601 format, including the combined air time and connection times."
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. References to passenger segments involved in this journey."
          }
        },
        "description": "A collection of segments which satisfies transportation of passenger for a given origin and destination.",
        "required": [
          "paxSegmentRefIds"
        ]
      },
      "commonPaxJourneyRefs": {
        "type": "object",
        "properties": {
          "paxJourneyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "References to passenger journeys"
          }
        },
        "title": "Holds references to passenger journeys"
      },
      "commonPaxSegment": {
        "type": "object",
        "properties": {
          "cabinAssociationChoice": {
            "$ref": "#/components/schemas/commonCabinAssociation"
          },
          "datedMarketingSegmentRefId": {
            "type": "string",
            "description": "Required.A reference to a unique identifier of a dated marketing segment used in a message."
          },
          "marketingCarrierRbd": {
            "type": "string",
            "description": "Optional. Code used to identify a particular RBD (e.g. P, J, W, M, etc.)."
          },
          "operatingCarrierRbd": {
            "type": "string",
            "description": "Optional. Code used to identify a particular RBD (e.g. P, J, W, M, etc.)."
          }
        },
        "description": "Transportation of a passenger on a Dated Operating Segment.",
        "required": [
          "datedMarketingSegmentRefId"
        ]
      },
      "commonPaxSegmentRefs": {
        "type": "object",
        "properties": {
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "References to passenger segments"
          }
        },
        "description": "Holds references to passenger segments."
      },
      "commonPayer": {
        "type": "object",
        "properties": {
          "paxRefId": {
            "type": "string",
            "title": "Reference ID of a pax in the same message.\nTo be used if payment is done using a personal card of a passenger\nOnly one of `pax_ref_id` or `individual_name` or `organisation_name` should be provided"
          },
          "individualName": {
            "$ref": "#/components/schemas/commonPayerIndividual"
          },
          "organisationName": {
            "$ref": "#/components/schemas/commonPayerOrganisation"
          },
          "payerEmailAddress": {
            "$ref": "#/components/schemas/commonEmailAddress"
          },
          "payerPhoneNumber": {
            "$ref": "#/components/schemas/commonPhone"
          }
        },
        "description": "Information on the party committing to pay.\nApplicable to card payments."
      },
      "commonPayerIndividual": {
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "title": "Optional"
          },
          "surname": {
            "type": "string",
            "description": "Required."
          },
          "titleName": {
            "type": "string",
            "title": "Optional"
          }
        },
        "title": "To be used if the payment is done using a personal card"
      },
      "commonPayerOrganisation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "title": "To be used if the payment is done using a corporate card"
      },
      "commonPaymentCardTrxPaymentCard": {
        "type": "object",
        "properties": {
          "cardBrandCode": {
            "$ref": "#/components/schemas/PaymentCardTrxPaymentCardCreditCardVendorCode"
          },
          "tokenizedCardId": {
            "type": "string",
            "description": "Identifies a tokenized card number in PCI Proxy.\nUsed when calls are routed through PCI Proxy."
          },
          "cardNumber": {
            "type": "string",
            "description": "The actual card number as indicated on the payment card.\nPassing actual card data in this field is strongly discouraged.\nTo be used in scenarios where PCI Proxy cannot be used."
          },
          "cardSecurityCode": {
            "type": "string",
            "description": "Optional. 3-digit number printed on the signature panel on the back of the card\nand following the last four digits of the Primary Account Number (PAN).\nFor American Express, 4 digits located on the front of the card,\nabove the card number on the right hand side.\nVisa - CVV2, MasterCard - CVC2, American Express - CID,\nDiscover - CMID, Union Pay - CVN2, JCB - CAV2."
          },
          "cardHolderName": {
            "type": "string",
            "title": "Optional. Name of credit card holder. Example: JOHN SMITH"
          },
          "cardholderAddress": {
            "$ref": "#/components/schemas/commonPostalAddress"
          },
          "effectiveDate": {
            "type": "string",
            "title": "Optional. Payment Card Effective Date in mmyy format. Example: 0116"
          },
          "expirationDate": {
            "type": "string",
            "title": "Optional. The last month of validity in mmyy format. Example: 0123"
          },
          "verificationInd": {
            "type": "boolean",
            "description": "Optional. When 'true', this payment requires additional authentication.\nShould not set (i.e. should be `false`) for MOTO transactions\nPlease refer https://guides.developer.iata.org/docs/secure-customer-authentication scenario C.\nSpecifically\n> Booking Agents should not request exemptions at the authentication stage of transactions for which they\n> are not collecting the funds unless they have a specific agreement with the travel supplier (the merchant)\n> and its acquirer to do so. This is essential as the use of exemptions is the prerogative of the merchant’s acquirer,\n> not that of an Agent. The secure corporate payment exemption can generally be used when the booking is initiated\n> from a dedicated corporate processes which is not available to consumers and which is considered secure.\n> Typically only Travel Management Companies (TMC’s) will be permitted to use this exemption."
          },
          "cardProductTypeCode": {
            "$ref": "#/components/schemas/PaymentCardTrxPaymentCardCardProductTypeCode"
          },
          "securePaymentVersion2": {
            "$ref": "#/components/schemas/commonSecurePaymentVersion2"
          }
        },
        "title": "Payment card transaction details.\nPlease refer https://guides.developer.iata.org/docs/secure-customer-authentication\nNote that calls must be routed through a PCI Proxy when payment card details are involved.\nPlease ask your Verteil contact for details of PCI Proxy endpoint"
      },
      "commonPaymentFunctionChange": {
        "type": "object",
        "properties": {
          "offerAssociation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonOfferAssociation"
            },
            "title": "Optional. Reference to an Offer and optionally OfferItems for which this payment method applies.\nIf empty, the payment method is applicable to all Offers in the Super Order"
          },
          "paymentProcessingDetails": {
            "$ref": "#/components/schemas/commonPaymentProcessingDetails"
          }
        },
        "title": "Container of all payment relevant functions in the context of an order change transaction",
        "required": [
          "paymentProcessingDetails"
        ]
      },
      "commonPaymentFunctionCreate": {
        "type": "object",
        "properties": {
          "offerAssociation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonOfferAssociation"
            },
            "title": "Optional. Reference to an Offer and optionally OfferItems for which this payment method applies.\nIf empty, the payment method is applicable to all Offers in the Super Order"
          },
          "paymentProcessingDetails": {
            "$ref": "#/components/schemas/commonPaymentProcessingDetails"
          }
        },
        "title": "Container of all payment relevant functions in the context of an order create transaction",
        "required": [
          "paymentProcessingDetails"
        ]
      },
      "commonPaymentFunctionOrder": {
        "type": "object",
        "properties": {
          "orderAssociation": {
            "$ref": "#/components/schemas/commonOrderAssociation"
          },
          "paymentProcessingSummary": {
            "$ref": "#/components/schemas/commonPaymentProcessingSummary"
          }
        },
        "description": "Container of all payment relevant functions of an Order."
      },
      "commonPaymentMethod": {
        "type": "object",
        "properties": {
          "paymentCard": {
            "$ref": "#/components/schemas/commonPaymentCardTrxPaymentCard"
          }
        },
        "title": "Form of payment details.\nChoice of:\n- payment_card\n\\\nOther options (e.g. LoyaltyRedemption) will be added in future"
      },
      "commonPaymentProcessingDetails": {
        "type": "object",
        "properties": {
          "typeCode": {
            "$ref": "#/components/schemas/commonPaymentTypeCode"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "payer": {
            "$ref": "#/components/schemas/commonPayer"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/commonPaymentMethod"
          },
          "paymentSurchargeAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "paymentRefId": {
            "type": "string",
            "description": "Optional.\nThe id reference of the already authorized form of payment.\nIf creating the order after payment authorization it is a way of linking an order to an existing payment reference.\nfor eg:- If the payment is done via IFG, this holds the value of the ifg track id."
          }
        },
        "description": "Form of payment details including the amount."
      },
      "commonPaymentProcessingSummary": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "description": "Uniquely identifies payment information within a message."
          },
          "typeCode": {
            "$ref": "#/components/schemas/commonPaymentTypeCode"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "payer": {
            "$ref": "#/components/schemas/commonPayer"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentProcessingSummaryPaymentStatus"
          },
          "paymentMethodDetails": {
            "$ref": "#/components/schemas/commonPaymentMethod"
          },
          "paymentRefId": {
            "type": "string",
            "description": "Optional.\nThe id reference of the already authorized form of payment.\nIf creating the order after payment authorization it is a way of linking an order to an existing payment reference.\nfor eg:- If the payment is done via IFG, this holds the value of the ifg track id."
          },
          "surchargeAmount": {
            "$ref": "#/components/schemas/typeMoney"
          }
        },
        "description": "Information related to the settlement of a transaction through monetary or other compensations."
      },
      "commonPaymentTypeCode": {
        "type": "string",
        "enum": [
          "PAYMENT_TYPE_UNSPECIFIED",
          "CA",
          "CC",
          "WL",
          "EX",
          "LK",
          "AI",
          "AG",
          "MS",
          "EP"
        ],
        "default": "PAYMENT_TYPE_UNSPECIFIED",
        "description": "Enumeration of form of payment codes.\n\n - CA: Cash\n - CC: Credit Card\n - WL: Verteil Wallet\n - EX: External Payment Service Provider\n - LK: Inbound form of payment when payment is done through a link to customer.\n - AI: Airline Invoice\n - AG: Airline Agency Credit\n - MS: Miscellaneous\n - EP: IATA EasyPay"
      },
      "commonPenalty": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/commonPenaltyType"
          },
          "descTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Description of the applicable penalty."
          },
          "feeInd": {
            "type": "boolean",
            "title": "Optional. When TRUE, fee(s) may apply based on PenaltyType"
          },
          "netInd": {
            "type": "boolean",
            "title": "Optional. For each penalty involved in a voluntary servicing action, the airline should inform the seller if the penalty is\nnetted (i.e. taken from any amount that the Airline will owe to the customer consequently to the servicing) or\nto be paid (i.e. charged to the customer upfront any servicing action, and even if customer benefits from a subsequent refund/ residual value).\nRead more on netting concept- https://guides.developer.iata.org/v213/docs/netting-concepts"
          },
          "price": {
            "$ref": "#/components/schemas/commonPenaltyPrice"
          }
        },
        "title": "Information relating to penalty changed on making changes to an order",
        "required": [
          "type",
          "price"
        ]
      },
      "commonPenaltyPrice": {
        "type": "object",
        "properties": {
          "baseAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "taxSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTaxSummary"
            },
            "description": "Optional. A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added to the cost of some goods, services, and transactions.\nIf TaxSummary is not provided in the response, tax would be 0 for the fare under scope."
          },
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          }
        },
        "description": "A specialization of price when associated with a Penalty.\nThe amount of money expected, required, or given in payment for something.",
        "required": [
          "totalAmount"
        ]
      },
      "commonPenaltyType": {
        "type": "string",
        "enum": [
          "OTHERS",
          "CHANGE",
          "CANCEL",
          "UPGRADE"
        ],
        "default": "OTHERS",
        "description": "- OTHERS: Any other type of penalties apart from the specified ones\n - CHANGE: Change penalty\n - CANCEL: Cancellation penalty\n - UPGRADE: Upgrade penalty",
        "title": "Enumeration of penalty types"
      },
      "commonPhone": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/components/schemas/commonContactEnumsType"
          },
          "countryDialingCode": {
            "type": "string",
            "description": "Required. Numeric telephone dialing prefixes for the member countries of the International Telecommunication Union (ITU)."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Required. Phone number text. 999-999-9999."
          },
          "extensionNumber": {
            "type": "string",
            "title": "Optional. Phone extension number.  Example: 1234"
          }
        },
        "title": "Telephone number details"
      },
      "commonPieceAllowance": {
        "type": "object",
        "properties": {
          "totalQty": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum pieces of baggage allowed.\n`0` indicates no baggage allowance."
          }
        },
        "title": "Defines the maximum number of each allowable baggage type"
      },
      "commonPostalAddress": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/components/schemas/commonContactEnumsType"
          },
          "streetTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Street name and number. Examples: Main Street, 100 Main Street"
          },
          "cityName": {
            "type": "string",
            "description": "Required. The name, expressed as text, of the city, town or village."
          },
          "postalCode": {
            "type": "string",
            "title": "Required. Postal code. Examples: 11001, 11001-2345"
          },
          "countryName": {
            "type": "string",
            "description": "Optional. The name, expressed as text, of the country."
          },
          "countryCode": {
            "type": "string",
            "description": "Required. 2 letter ISO Country Code. Examples: US, FR."
          },
          "countrySubDivisionName": {
            "type": "string",
            "description": "Optional. The name, expressed as text, of the sub-division of a country. E.g. California."
          }
        },
        "description": "Natural or physical address used for postal service. May be a building address, airport address, etc.",
        "required": [
          "postalCode",
          "countryCode"
        ]
      },
      "commonPrice": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "baseAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "taxSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTaxSummary"
            },
            "description": "Optional. A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added to the cost of some goods, services, and transactions.\nIf TaxSummary is not provided in the response, tax would be 0 for the fare under scope."
          },
          "surcharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSurcharge"
            },
            "description": "Optional. Surcharge details."
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFee"
            },
            "description": "Optional. Amount added on to a charge for a specific product, purpose, or service."
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDiscount"
            },
            "description": "Optional. Deductions from the price amount, made in advance of its payment."
          },
          "markups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonMarkup"
            },
            "description": "Optional. The amount added to the cost price of goods to cover overhead and profit."
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "title": "Optional. The commission amount information"
          },
          "curConversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCurConversion"
            },
            "description": "Optional. The currency conversion information."
          }
        },
        "description": "The amount of money expected, required, or given in payment for something.",
        "required": [
          "totalAmount"
        ]
      },
      "commonPriceAndFareDetails": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/commonPrice"
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the carrier for the carriage of one passenger and his/her allowable free baggage.\nThe price in the FareDetail will change based on whether the carrier provides New or Differential price\nin case of a Re-shop similar to the price of the offeritem."
          },
          "penaltyRefId": {
            "type": "string",
            "description": "Optional. Reference to Change Fee at OfferItem level.\n\\\nSome carriers do not provide change fee applicable for one passenger in `fare_details`.\nIn such cases only the fee amount at offer item will be available, which can be known using this reference.\n\\\nThe node will be used only in the context of `ReshopPrice.differential.new` since\nprice of new itinerary during re-shop will be inclusive of change fee.\nThe node will not be present if change fee is nil."
          }
        },
        "description": "A container for Price and Fare detail information.",
        "required": [
          "price"
        ]
      },
      "commonPriceClass": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Required. Price class name. Example: _SUPERSAVER_"
          },
          "featuresDescs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeaturesDesc"
            },
            "description": "Optional. Features of this price class - e.g. _Lounge Access_."
          }
        },
        "description": "A price point within a particular Cabin Type (sometimes referred to as 'Fare Families' or 'Fare Brands').",
        "required": [
          "name"
        ]
      },
      "commonPriceDifferential": {
        "type": "object",
        "properties": {
          "differentialType": {
            "$ref": "#/components/schemas/PriceDifferentialDifferentialType"
          },
          "diff": {
            "$ref": "#/components/schemas/commonDiffPriceAndFareDetails"
          },
          "new": {
            "$ref": "#/components/schemas/commonPriceAndFareDetails"
          },
          "old": {
            "$ref": "#/components/schemas/commonPriceAndFareDetails"
          }
        },
        "description": "For each offer item, this function allows the airline to inform the seller about amount to be paid based on the\ndifference between current and newly re-shopped itinerary.",
        "required": [
          "diff",
          "new"
        ]
      },
      "commonPromotion": {
        "type": "object",
        "properties": {
          "promotionId": {
            "type": "string",
            "description": "Required. Promotion code ID or number. Example: PROMO123."
          },
          "promotionIssuer": {
            "$ref": "#/components/schemas/commonPromotionIssuer"
          }
        },
        "description": "A Promotion and discount code criteria to be passed to the retailer airline that could influence returned offers."
      },
      "commonPromotionIssuer": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc.\nEither `carrier_code` or `travel_agency` is set."
          },
          "travelAgency": {
            "$ref": "#/components/schemas/commonTravelAgency"
          }
        },
        "title": "Promotion Issuer or Sponsor"
      },
      "commonRefund": {
        "type": "object",
        "properties": {
          "descText": {
            "type": "string",
            "description": "Optional. Description. Example: 'Full refund within 30 days of departure'."
          },
          "fixedAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "levelType": {
            "$ref": "#/components/schemas/RefundLevelType"
          },
          "maxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "minAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "paymentTypeCode": {
            "$ref": "#/components/schemas/commonPaymentTypeCode"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "description": "Optional. Stores a percentage which will be used to determine the refund to be applied in conjunction or not with minimum and maximum amounts."
          }
        },
        "description": "Contains refund type, payment type, and amount attributes \nfor a specific product, purpose, or service."
      },
      "commonRemark": {
        "type": "object",
        "properties": {
          "remarkType": {
            "$ref": "#/components/schemas/RemarkRemarkType"
          },
          "remarkText": {
            "type": "string",
            "title": "Required. Supplementary information text"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Output Only. Remark creation timestamp.",
            "readOnly": true
          },
          "agentId": {
            "type": "string",
            "description": "Optional.\nThe agent who has updated/added the remark."
          }
        },
        "description": "Supplementary information which will not be processed by the system.",
        "required": [
          "remarkText"
        ]
      },
      "commonSalesTaxRegistration": {
        "type": "object",
        "properties": {
          "salesTaxRegistrationId": {
            "type": "string",
            "description": "Optional. Registered identifier of the business purchasing the goods and services.\nFor example, a GST number in India."
          },
          "emailAddressText": {
            "type": "string",
            "description": "Required. The email address which should be used for contact purposes."
          },
          "countryDialingCode": {
            "type": "string",
            "description": "Optional. Numeric telephone dialing prefixes for the member countries of the International Telecommunication Union (ITU)."
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Phone number text. 999-999-9999."
          },
          "streetTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Street name and number. Examples: Main Street, 100 Main Street"
          },
          "cityName": {
            "type": "string",
            "description": "Optional. The name, expressed as text, of the city, town or village."
          },
          "postalCode": {
            "type": "string",
            "title": "Required. Postal code. Examples: 11001, 11001-2345"
          },
          "countryCode": {
            "type": "string",
            "description": "Optional. ISO Country Code (can be extended by bilateral agreement in case of exceptions, e.g. Kosovo). Examples: US, FR."
          }
        },
        "description": "The Identification and contact information of a party purchasing goods or services as registered with Tax authority.",
        "required": [
          "emailAddressText",
          "postalCode"
        ]
      },
      "commonSeat": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "integer",
            "format": "int64",
            "title": "Ordinal number identifying a seat row on a transport vehicle"
          },
          "columnId": {
            "$ref": "#/components/schemas/SeatColumnId"
          },
          "seatCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatCharacteristicCode"
            },
            "description": "Optional. Characteristic of an aircraft seat e.g. A (Aisle seat), E (Exit and emergency exit) etc."
          },
          "seatProfileRefId": {
            "type": "string",
            "description": "Optional. Reference to a Seat Profile ID within this message."
          }
        },
        "description": "A sitting place for a passenger or crew in a cabin compartment on a transport vehicle."
      },
      "commonSeatAssignmentAssociations": {
        "type": "object",
        "properties": {
          "paxSegmentRefId": {
            "type": "string",
            "description": "Reference to a PaxSegmentID . This will be a reference to a single passenger segment that will be defined in a data list or pax segment list in the contained message."
          },
          "legsRefs": {
            "$ref": "#/components/schemas/commonDatedOperatingLegRefs"
          }
        },
        "title": "Seat Assignment Associations"
      },
      "commonSeatCharacteristicCode": {
        "type": "string",
        "enum": [
          "CHARACTERISTIC_UNSPECIFIED",
          "NUM_1",
          "NUM_2",
          "NUM_3",
          "NUM_4",
          "NUM_6",
          "NUM_7",
          "NUM_8",
          "NUM_9",
          "NUM_28",
          "NUM_29",
          "NUM_30",
          "A",
          "AA",
          "AB",
          "AC",
          "AG",
          "AJ",
          "AL",
          "AM",
          "AR",
          "AS",
          "AT",
          "AU",
          "AV",
          "AW",
          "B",
          "BA",
          "BK",
          "BC",
          "BE",
          "BR",
          "BS",
          "C",
          "CC",
          "CH",
          "CL",
          "CS",
          "D",
          "DE",
          "E",
          "EA",
          "EC",
          "EK",
          "ES",
          "EX",
          "F",
          "FC",
          "FS",
          "G",
          "GF",
          "GN",
          "GR",
          "H",
          "I",
          "IE",
          "IF",
          "IK",
          "IR",
          "JS",
          "KA",
          "L",
          "LA",
          "LB",
          "LE",
          "LF",
          "LG",
          "LH",
          "LL",
          "LR",
          "LS",
          "LT",
          "M",
          "MA",
          "ML",
          "MS",
          "MX",
          "N",
          "O",
          "OW",
          "P",
          "PE",
          "Q",
          "RS",
          "S",
          "SC",
          "SO",
          "ST",
          "T",
          "TA",
          "U",
          "UP",
          "US",
          "V",
          "W",
          "WA",
          "X",
          "A1",
          "B1",
          "C1",
          "D1",
          "E1",
          "M1",
          "W1",
          "A3",
          "B3",
          "A6",
          "B6",
          "A7",
          "B7",
          "NUM_33",
          "NUM_34",
          "NUM_35",
          "NUM_36",
          "NUM_37",
          "NUM_38",
          "NUM_39",
          "NUM_40",
          "NUM_61",
          "NUM_62",
          "NUM_63",
          "NUM_64",
          "NUM_65",
          "NUM_66",
          "NUM_70",
          "NUM_71",
          "NUM_72",
          "NUM_73"
        ],
        "default": "CHARACTERISTIC_UNSPECIFIED",
        "description": "Enumeration of seat characteristic codes according to PADIS code list 9825.\nThis enumeration is expandable, additional values may be added in future.\n\n - CHARACTERISTIC_UNSPECIFIED: Default unspecified\n - NUM_1: Restricted seat - General\n - NUM_2: Leg rest available\n - NUM_3: Individual video screen - Choice of movies\n - NUM_4: Not a window seat\n - NUM_6: Near galley seat\n - NUM_7: Near toilet seat\n - NUM_8: No seat at this location\n - NUM_9: Center seat (not window, not aisle)\n - NUM_28: Not fitted\n - NUM_29: No recline seat\n - NUM_30: Limited recline seat\n - A: Aisle seat\n - AA: All available aisle seats\n - AB: Seat adjacent to bar\n - AC: Seat adjacent to closet\n - AG: Seat adjacent to galley\n - AJ: Adjacent aisle seats\n - AL: Seat adjacent to lavatory\n - AM: Individual movie screen - No choice of movie selection\n - AR: No seat - airphone\n - AS: Individual airphone\n - AT: Seat adjacent to table\n - AU: Seat adjacent to stairs to upper deck\n - AV: Only available seats\n - AW: All available window seats\n - B: Seat with bassinet facility\n - BA: No seat - bar\n - BK: Blocked Seat for preferred passenger in adjacent seat\n - BC: Seat blocked for Codeshare Partner\n - BE: Seat block designated for Basic Economy\n - BR: Seat is broken – not available for use\n - BS: Business Class Suite\n - C: Crew seat\n - CC: Center section seat(s)\n - CH: Chargeable seat\n - CL: No seat - closet\n - CS: Conditional seat-contact airline\n - D: No seat - exit door\n - DE: Deportee\n - E: Exit and emergency exit seat\n - EA: Not on exit seat\n - EC: AC Power Outlet\n - EK: Economy comfort seat\n - ES: Suite\n - EX: No seat - emergency Exit\n - F: Added seat\n - FC: Front of cabin class/compartment\n - FS: First Class Suite\n - G: Seat at forward end of cabin\n - GF: General facility\n - GN: No seat - galley\n - GR: Group seat - offered to travellers belonging to a group\n - H: Seat with facilities for handicapped/incapacitated passenger\n - I: Seat suitable for adult with an infant IA Inside aisle seats\n - IE: Seat not suitable for child\n - IF: Seat suitable for Child Restraint Fwd-facing\n - IK: Adjacent Seat Blocked for Infant\n - IR: Seat suitable for Child Restraint Aft-facing J Rear facing seat\n - JS: Seat designated for additional Jumpseat K Bulkhead seat\n - KA: Bulkhead seat with movie screen KN Bulkhead, no seat\n - L: Leg space seat\n - LA: No seat – lavatory\n - LB: Rear facing lie flat seat\n - LE: Left facing lie flat seat more left angle\n - LF: Lie flat seat\n - LG: No seat - luggage storage\n - LH: Restricted seat - offered on long-haul segments\n - LL: Left facing lie flat seat\n - LR: Right facing lie flat seat\n - LS: Left side of aircraft\n - LT: Right facing lie flat seat more right angle\n - M: Seat without a movie view\n - MA: Medically OK to travel\n - ML: Seat suitable for Musical Instrument – Large\n - MS: Middle seat\n - MX: Seat suitable for Musical Instrument – Extra Large\n - N: No smoking seat\n - O: Preferential seat\n - OW: Overwing seat(s)\n - P: Extra seat for comfort - arm rest can be raised PC Pet cabin\n - PE: Premium Economy Suite\n - Q: Seat in a quiet zone\n - RS: Right side of aircraft\n - S: Smoking seat\n - SC: Skycouch\n - SO: No seat - storage space\n - ST: No seat - stairs to upper deck\n - T: Rear/Tail section of aircraft\n - TA: No seat - table\n - U: Seat suitable for unaccompanied minors\n - UP: Upper deck\n - US: USB Power Port\n - V: Seat to be left vacant or offered last\n - W: Window seat\n - WA: Window and aisle together\n - X: No facility seat (indifferent seat) Z Buffer zone seat\n - A1: Seat not allowed for infant\n - B1: Seat not allowed for medical\n - C1: Seat not allowed for unaccompanied minor\n - D1: Restricted recline seat\n - E1: Seat with Airbag in Seatbelt\n - M1: Seat with movie view\n - W1: Window seat without window\n - A3: Individual video screen - No choice of movie\n - B3: Individual video screen-Choice of movies, games, information, etc\n - A6: In front of galley seat\n - B6: Behind galley seat\n - A7: In front of toilet seat\n - B7: Behind toilet seat\n - NUM_33: Seat designated for Tier 1\n - NUM_34: Seat designated for Tier 2\n - NUM_35: Seat designated for Tier 3\n - NUM_36: Seat designated for Tier 4\n - NUM_37: Seat designated for Neighbor-Free Seat\n - NUM_38: Seat block designated for Reservation Agents\n - NUM_39: Seat block designated for Reservations or Airport\n - NUM_40: Seat block designated for Airport Agents\n - NUM_61: Seat designated for Fare 1\n - NUM_62: Seat designated for Fare 2\n - NUM_63: Seat designated for Fare 3\n - NUM_64: Seat designated for Fare 4\n - NUM_65: Seat designated for Fare 5\n - NUM_66: Seat designated for Fare 6\n - NUM_70: Individual video screen - services unspecified\n - NUM_71: No seat - access to handicapped lavatory\n - NUM_72: Undesirable seat\n - NUM_73: Conditional chargeable seat"
      },
      "commonSeatOnLeg": {
        "type": "object",
        "properties": {
          "seat": {
            "$ref": "#/components/schemas/commonSeat"
          },
          "seatAssignmentAssociations": {
            "$ref": "#/components/schemas/commonSeatAssignmentAssociations"
          }
        },
        "description": "A sitting place for a passenger or crew in a cabin compartment on a PassengerSegment or DatedOperatingLeg."
      },
      "commonSeatProfile": {
        "type": "object",
        "properties": {
          "seatProfileId": {
            "type": "string",
            "description": "Required. Unique identifier associated to this Seat Profile."
          },
          "seatCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSeatCharacteristicCode"
            },
            "description": "Characteristic of an aircraft seat e.g. A (Aisle seat), E (Exit and emergency exit) etc."
          },
          "marketingInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeaturesDesc"
            },
            "title": "Optional. Describes the seat characteristics"
          }
        },
        "description": "Airline defined group of seats sharing common characteristics.",
        "required": [
          "seatCharCodes"
        ]
      },
      "commonSecurePaymentVersion2": {
        "type": "object",
        "properties": {
          "authenticationMerchantName": {
            "type": "string",
            "title": "Optional. Name of the merchant"
          },
          "authenticationTokenValue": {
            "type": "string",
            "title": "Optional. Authentication value of a Token"
          },
          "authenticationValue": {
            "type": "string",
            "title": "Optional. Authentication value"
          },
          "cardNumberCollectionCode": {
            "$ref": "#/components/schemas/SecurePaymentVersion2CardNumberCollectionCode"
          },
          "directoryServerTrxId": {
            "type": "string",
            "title": "Optional. DS (Directory Server) transaction ID"
          },
          "electronicCommerceInd": {
            "type": "string",
            "title": "Optional. ECI (electronic commerce indicator)"
          },
          "payerAuthenticationExemptionCode": {
            "$ref": "#/components/schemas/SecurePaymentVersion2PayerAuthenticationExemptionCode"
          },
          "payerAuthenticationFailureToCompleteCode": {
            "$ref": "#/components/schemas/SecurePaymentVersion2PayerAuthenticationFailureToCompleteCode"
          },
          "paymentTrxChannelCode": {
            "$ref": "#/components/schemas/SecurePaymentVersion2PaymentTrxChannelCode"
          },
          "programProtocolText": {
            "type": "string",
            "title": "Optional. Program Protocol"
          },
          "trxStatusText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Outcome of authentication"
          },
          "trxStatusReasonText": {
            "type": "string",
            "title": "Optional. Reason for transaction status"
          }
        },
        "description": "Contains all information for the result of 3D-Secure authentication process.\nApplicable to 3DS v2.0 and higher."
      },
      "commonSelectedALaCarteOfferItem": {
        "type": "object",
        "properties": {
          "offerFlightAssociations": {
            "$ref": "#/components/schemas/commonOfferFlightAssociations"
          },
          "qty": {
            "type": "integer",
            "format": "int64",
            "description": "Required. Quantity to allow the ordering of more than one instances of the related a la carte OfferItem."
          }
        },
        "description": "Use to specify the quantity of Offer Items from the A La Carte Offer Items.",
        "required": [
          "qty"
        ]
      },
      "commonSelectedBundleServices": {
        "type": "object",
        "properties": {
          "selectedServiceRefId": {
            "type": "string",
            "description": "Required. Reference to the Service (within the Offer Item) form which the Service Bundle is contained."
          },
          "selectedServiceDefinitionRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to the Service Definition selected by the Passenger as part of a service bundle.\nIf not provided, it implies that all constituent service definitions in the bundle are selected."
          }
        },
        "title": "For service bundle selection - only to be used for bundles with optional choices (e.g. pick 2 out of 4)",
        "required": [
          "selectedServiceRefId"
        ]
      },
      "commonSelectedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemRefId": {
            "type": "string",
            "description": "Required. Reference to the OfferItem ID of the selected OfferItem (contained in either a standard Offer or an a-la-carte Offer)\nreturned in a previous shopping response."
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Reference to passenger(s) for which this OfferItem and selected Services (in case of Service Bundles) applies."
          },
          "selectedBundleServices": {
            "$ref": "#/components/schemas/commonSelectedBundleServices"
          },
          "selectedALaCarteOfferItem": {
            "$ref": "#/components/schemas/commonSelectedALaCarteOfferItem"
          },
          "selectedSeat": {
            "$ref": "#/components/schemas/commonSelectedSeat"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Augmentation references"
          }
        },
        "description": "OfferItem selected by the Passenger for inclusion in the requested Order.\nRepeat occurrence of OfferItem if different passengers want to select different service options,\ndifferent quantities of a-la-carte items or different seat locations.\nAs a minimum, all mandatory OfferItems from a desired Offer should be explicitly defined within these selections\nand should repeat the same Passenger associations defined in the originating OfferItems.\nOptional OfferItems may then be appended as further items selected by the Passenger.\nOfferItems from the originating Offers may take on two different forms,\nwhich in turn drives how the ALaCarteSelection element is to be used\n- If the OfferItem referenced comes originally from an a-la-carte Offer,\nthen the ALaCarteSelection element should be used to defined the Quantity of said OfferItem.\nOn the other hand, if the OfferItem comes from a standard type of Offer in the previous shopping response,\nthe ALaCarteSelection element should not be used, as the quantity is explicitly driven by\nwhat is defined in that OfferItem's associations (to passengers and/or flight segments).",
        "required": [
          "offerItemRefId",
          "paxRefIds"
        ]
      },
      "commonSelectedPricedOffer": {
        "type": "object",
        "properties": {
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to the OfferID of the selected Offer returned in a previous shopping response."
          },
          "ownerCode": {
            "type": "string",
            "title": "Required. IATA-defined 2-character code identifying airline owning the selected offer"
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "selectedOfferItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSelectedOfferItem"
            },
            "description": "Required. OfferItem selected by the Passenger for inclusion in the requested Order."
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optional. Augmentation references"
          }
        },
        "description": "Offer selected by the Passenger for requesting an Order to be created.\nMultiple Offers can be requested at the same time, each of which could originate from different shopping\nresponses (each with their own ResponseIDs).",
        "required": [
          "offerRefId",
          "ownerCode",
          "selectedOfferItems"
        ]
      },
      "commonSelectedSeat": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "integer",
            "format": "int64",
            "title": "Seat Row number. Example: 2"
          },
          "columnId": {
            "type": "string",
            "description": "Seat column to identify a particular seat position on an aircraft."
          }
        },
        "title": "Identifies a seat selected"
      },
      "commonServiceBundle": {
        "type": "object",
        "properties": {
          "minServiceQty": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. The minimum number of service definitions that may be selected from those in the bundle."
          },
          "maxServiceQty": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. The maximum number of service definitions that may be selected from those in the bundle.\nThe default is no limit."
          },
          "serviceDefRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required. References to services included in the bundle"
          }
        },
        "description": "A set of services offered for sale as a single service.",
        "required": [
          "serviceDefRefIds"
        ]
      },
      "commonServiceDefinition": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "title": "Optional. IATA-defined 2-character code of the carrier owning the service"
          },
          "name": {
            "type": "string",
            "title": "Required. Service name. Example: _Lounge Pass_"
          },
          "airlineTaxonomy": {
            "$ref": "#/components/schemas/commonAirlineTaxonomy"
          },
          "serviceCode": {
            "type": "string",
            "title": "Optional. Airline specific service code which can be associated with the Reason for Issuance Sub Code.\nSample implementer encoding: XLEG for Extra Leg Room Seat XBAG for Extra Bag"
          },
          "serviceDefAssociation": {
            "$ref": "#/components/schemas/commonServiceDefinitionAssociation"
          },
          "featuresDescs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFeaturesDesc"
            },
            "description": "Optional. A representation of major characteristics or features of the service."
          }
        },
        "description": "Description and characteristics of a non-flight product or service that can be separately sold and delivered. E.g. bag, seat, meal on a flight.",
        "required": [
          "name",
          "airlineTaxonomy"
        ]
      },
      "commonServiceDefinitionAssociation": {
        "type": "object",
        "properties": {
          "baggageAllowanceRefId": {
            "type": "string",
            "title": "Required. Reference to a Baggage Allowance\nEither `baggage_allowance_ref_id` or `service_bundle` is set"
          },
          "serviceBundle": {
            "$ref": "#/components/schemas/commonServiceBundle"
          }
        },
        "description": "Service Definition Association Choice to determine if the information of this ServiceDefinition needs to be extended\nwith specific Bag or Seat characteristics or whether the ServiceDefinition is used as a bundle of further\nServiceDefinitions.",
        "required": [
          "baggageAllowanceRefId",
          "serviceBundle"
        ]
      },
      "commonStation": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string",
            "title": "Required. IATA 3-letter code specifying the city or airport code"
          },
          "terminalName": {
            "type": "string",
            "description": "Optional. The name of the terminal."
          },
          "schedDateTime": {
            "type": "string",
            "title": "Required. The Scheduled Date and Time of arrival of the aircraft at the terminal or the departure from gate.\nWill be in ISO-8601 format - `yyyy-MM-dd'T'HH:mm`. E.g. `2021-12-03T10:15`"
          }
        },
        "description": "Defines a transport point or station.",
        "required": [
          "stationCode",
          "schedDateTime"
        ]
      },
      "commonSurcharge": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "breakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFee"
            },
            "description": "Optional. Individual surcharges applied."
          }
        },
        "description": "Amount added on to a usual charge for a specific product, purpose, or service.",
        "required": [
          "totalAmount"
        ]
      },
      "commonTax": {
        "type": "object",
        "properties": {
          "taxCode": {
            "type": "string",
            "title": "Optional. Tax Code. Example: AY, GB"
          },
          "amount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "descText": {
            "type": "string",
            "title": "Optional. Tax short description. Example: $4 per flight segment, per passenger (U.S. domestic segment tax)"
          },
          "refundInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax amount is refundable."
          },
          "qualifierCode": {
            "type": "string",
            "title": "Optional. Used to specify if current, paid, additional taxes Refer to IATA PADIS Code list data element 5305"
          },
          "collectionInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax amount must be collected."
          }
        },
        "description": "A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added\nto the cost of some goods, services, and transactions.",
        "required": [
          "amount"
        ]
      },
      "commonTaxSummary": {
        "type": "object",
        "properties": {
          "totalTaxAmount": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "allRefundableInd": {
            "type": "boolean",
            "description": "Optional. When true, all tax breakdown amounts are refundable."
          },
          "approximateInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax is approximate."
          },
          "collectionInd": {
            "type": "boolean",
            "description": "Optional. When true, all specified tax breakdowns must be collected."
          },
          "breakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTax"
            },
            "description": "Optional. Individual tax breakdown.\nThis will not be provided during shopping but will be available from subsequent pricing response onwards."
          }
        },
        "title": "Tax summary information, including total tax amount and optional tax breakdown",
        "required": [
          "totalTaxAmount"
        ]
      },
      "commonTicket": {
        "type": "object",
        "properties": {
          "ticketNumber": {
            "type": "string",
            "description": "Optional. The document number comprised of the airline code, form code, and serial number."
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCoupon"
            },
            "description": "Required. The portion of the Passenger Ticket and Baggage Check or Excess Baggage Ticket that indicates particular\nplaces between which the coupon is good for carriage."
          },
          "reportingType": {
            "$ref": "#/components/schemas/TicketReportingType"
          },
          "ticketDocType": {
            "$ref": "#/components/schemas/TicketDocType"
          },
          "remarkText": {
            "type": "string",
            "description": "Optional. Free text to provide further information related to the document."
          },
          "connectedDocNumber": {
            "type": "string",
            "title": "Optional.\nThe ticket/ document number to which this document is connected.\nFor Example, Applicable for EMDA Coupon to identify the Coupon number of the Flight Item"
          },
          "primaryDocInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, this ticket/document is the primary ticket/document."
          },
          "bookletQty": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The number of booklets issued."
          }
        },
        "required": [
          "coupons",
          "reportingType"
        ]
      },
      "commonTicketDocInfo": {
        "type": "object",
        "properties": {
          "paxRefId": {
            "type": "string",
            "title": "Required. Reference to a Passenger ID"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTicket"
            },
            "description": "Required. The accountable document issued by or on behalf of a carrier which includes notices and the flight and\npassenger coupons contained therein."
          },
          "paymentInfoRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to a Payment Information ID."
          },
          "bookingAgency": {
            "$ref": "#/components/schemas/commonTravelAgency"
          },
          "servicingAgency": {
            "$ref": "#/components/schemas/commonTravelAgency"
          },
          "issueInfo": {
            "$ref": "#/components/schemas/commonIssueInfo"
          }
        },
        "description": "Information corresponding to a group of 1 to 4 Tickets for a single Origin Destination and a single Passenger.",
        "required": [
          "paxRefId",
          "tickets"
        ]
      },
      "commonTravelAgency": {
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Required. Unique identifier of this travel agency."
          },
          "officeId": {
            "type": "string",
            "description": "Optional. Unique identifier of the office involved in the transaction."
          },
          "industryCode": {
            "type": "string",
            "title": "Optional. IATA number or TIDS numeric code of the user's office if `agencyType` is IATA or TIDS"
          },
          "agencyType": {
            "$ref": "#/components/schemas/TravelAgencyAgencyType"
          },
          "travelAgentId": {
            "type": "string",
            "description": "Optional. Travel agent information.\nUnique identifier of the travel agent involved in the transaction."
          }
        },
        "description": "Travel Agency party information."
      },
      "commonWarning": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "A code corresponding to the processing warning that can be handled by API consumer.\nPossible warnings codes that can be returned will be documented against each service"
          },
          "message": {
            "type": "string",
            "description": "Free text description of the provided warning."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            },
            "description": "Optional. Any type object providing further details about the warning."
          }
        },
        "description": "Contains information related to potential business errors/warnings detected during\nprocessing of the preceding request."
      },
      "commonWeightAllowance": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/commonWeightUnit"
          },
          "maxWeight": {
            "type": "number",
            "format": "float",
            "title": "Required. Maximum weight value - e.g. 30.0"
          },
          "totalMaxWeight": {
            "type": "number",
            "format": "float",
            "description": "Optional. maximum weight for all the combined pieces within this baggage allowance."
          }
        },
        "description": "Baggage weight allowance with application information.",
        "required": [
          "unit",
          "maxWeight"
        ]
      },
      "commonWeightUnit": {
        "type": "string",
        "enum": [
          "WEIGHT_UNIT_UNSPECIFIED",
          "KG",
          "LB"
        ],
        "default": "WEIGHT_UNIT_UNSPECIFIED",
        "description": "- WEIGHT_UNIT_UNSPECIFIED: Default unspecified\n - KG: Kilogram\n - LB: Pound",
        "title": "Enumeration of units of measurement for weight"
      },
      "orderAcceptCancelOffer": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Required. An Offer ID."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier providing the offer."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional.\nAPI consumers must relay all `Augmentation`s referred in the RefundQuote Response\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "The order cancellation offer from `RefundQuote` service.",
        "required": [
          "offerId",
          "ownerCode"
        ]
      },
      "orderAcceptOffer": {
        "type": "object",
        "properties": {
          "selectedPricedOffers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSelectedPricedOffer"
            },
            "description": "Required. Offer selected by the Passenger for requesting an Order to be created.\nMultiple Offers can be requested at the same time, each of which could originate from different\nshopping responses (each with their own ResponseIDs)."
          }
        },
        "description": "Function to accept a new OfferItem and adding it to the existing Order."
      },
      "orderAcceptSelectedQuotedOfferList": {
        "type": "object",
        "properties": {
          "selectedPricedOffer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonSelectedPricedOffer"
            },
            "description": "Offers selected by the Passenger for requesting an Order to be created\nMultiple Offers can be requested at the same time,\neach of which could originate from different shopping responses (each with their own ResponseIDs).\nEach Offer selected could reference (via the OfferID) either standard Offers from an AirShoppingRS message\n(potentially with Flight-related services) or A-La-Carte Offers (containing optional ancillary services).\nThese standard Offers and 'a-la-carte' Offers would need to be consistent with\nthe applicability rules defined by their relations (passengers or segments eligible for the enclosed OfferItems)\nand would be combined to produce a single Order, returned by the OrderViewRS message."
          }
        },
        "description": "An ability to accept selected offer items from a Quoted Offer."
      },
      "orderBookingEntity": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "title": "IATA-defined 2-character code assigned to a carrier"
          },
          "org": {
            "$ref": "#/components/schemas/orderParticipatingOrg"
          }
        },
        "description": "Entity holding the booking or reservation.\nCurrently supports only air content providers. Other choices will be added in future."
      },
      "orderBookingRef": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "string",
            "description": "Existing booking reference Identifier."
          },
          "bookingEntity": {
            "$ref": "#/components/schemas/orderBookingEntity"
          },
          "bookingRefType": {
            "$ref": "#/components/schemas/orderBookingRefType"
          }
        },
        "description": "Information related to a booking or reservation."
      },
      "orderBookingRefFilterCriteria": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "string",
            "description": "Required. Existing booking reference Identifier."
          },
          "bookingEntity": {
            "$ref": "#/components/schemas/orderBookingEntity"
          },
          "bookingRefType": {
            "$ref": "#/components/schemas/orderBookingRefType"
          }
        },
        "description": "Filter orders using a booking reference.",
        "required": [
          "bookingId"
        ]
      },
      "orderBookingRefType": {
        "type": "string",
        "enum": [
          "ORDER_ID",
          "PNR_NUMBER",
          "ASSOCIATED_PARENT_ORDER_ID",
          "ASSOCIATED_PARENT_PNR_NUMBER",
          "ASSOCIATED_CHILD_ORDER_ID",
          "ASSOCIATED_CHILD_PNR_NUMBER"
        ],
        "default": "ORDER_ID",
        "description": "- ORDER_ID: Booking reference is an order id\nDefault\n - PNR_NUMBER: Booking reference is a PNR\n - ASSOCIATED_PARENT_ORDER_ID: Booking reference is an Order id of immediate parent of the PNR being viewed.\n - ASSOCIATED_PARENT_PNR_NUMBER: Booking reference is PNR number of immediate parent of the PNR being viewed.\n - ASSOCIATED_CHILD_ORDER_ID: Booking reference is an Order id of immediate child of the PNR being viewed.\n - ASSOCIATED_CHILD_PNR_NUMBER: Booking reference is PNR number of immediate parent of the PNR being viewed.",
        "title": "Enumeration of booking reference types"
      },
      "orderCancelUnpaidOrder": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "title": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service"
          },
          "orderRefId": {
            "type": "string",
            "title": "Reference to a specific Order ID"
          }
        },
        "description": "An ability to cancel entire un-paid order.",
        "required": [
          "ownerCode",
          "orderRefId"
        ]
      },
      "orderChangeOrderChoice": {
        "type": "object",
        "properties": {
          "cancelUnpaidOrder": {
            "$ref": "#/components/schemas/orderCancelUnpaidOrder"
          },
          "acceptCancelledOffer": {
            "$ref": "#/components/schemas/orderAcceptCancelOffer"
          }
        },
        "title": "Change Order Choice",
        "required": [
          "cancelUnpaidOrder",
          "acceptCancelledOffer"
        ]
      },
      "orderDateTimeFilterCriteria": {
        "type": "object",
        "properties": {
          "fromDateTime": {
            "type": "string",
            "title": "Required. Indicate the start date to filter the orders.\nIf given with officeId, the time is considered in Local Time Zone.\nIf given without officeIs, the timezone is considered as GMT.\nTime Format : yyyy-mm-dd hh:mm"
          },
          "toDateTime": {
            "type": "string",
            "title": "Required. Indicate the end date to filter the orders.\nIf given with officeId, the time is considered in Local Time Zone.\nIf given without officeIs, the timezone is considered as GMT.\nTime Format : yyyy-mm-dd hh:mm"
          }
        },
        "title": "Filter orders based on date-time range",
        "required": [
          "fromDateTime",
          "toDateTime"
        ]
      },
      "orderDistributionChainLink": {
        "type": "object",
        "properties": {
          "ordinal": {
            "type": "integer",
            "format": "int64",
            "description": "The number defining the position of the distribution chain link in the distribution chain indicating the order in which the organization participated."
          },
          "orgRole": {
            "$ref": "#/components/schemas/DistributionChainLinkRole"
          },
          "participatingOrg": {
            "$ref": "#/components/schemas/orderParticipatingOrg"
          },
          "salesAgentId": {
            "type": "string",
            "description": "The unique identifier of an individual conducting sales activities on behalf of a sales branch or organization."
          },
          "salesBranchId": {
            "type": "string",
            "description": "The unique identifier of an organizational unit with responsibility over sales in a market, for a product or service and under any other specified criteria."
          }
        },
        "description": "An organization playing a participating role in an instance of a distribution channel."
      },
      "orderDocFilterCriteria": {
        "type": "object",
        "properties": {
          "docNumber": {
            "type": "string",
            "description": "Required. Travel document number."
          },
          "docType": {
            "$ref": "#/components/schemas/TicketDocType"
          }
        },
        "description": "Filter orders using a travel document.",
        "required": [
          "docNumber"
        ]
      },
      "orderFollowUpAction": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FollowUpActionAction"
            },
            "title": "List of seller followup action following involuntary change at OrderItem level"
          },
          "actionInd": {
            "type": "boolean",
            "description": "Optional. Action indicator at OrderItem level with the following possible value.\nA 'true' value is returned when the follow-up action has not been completed.\nAbsence of the indicator or false means that there is no pending action."
          },
          "actionTimeLimit": {
            "type": "string",
            "format": "date-time",
            "description": "The time limit until when the seller is allowed to take any FollowUpAction regarding an OrderItem after a schedule change."
          },
          "inactionConsequence": {
            "$ref": "#/components/schemas/FollowUpActionInactionConsequence"
          },
          "waiverCode": {
            "type": "string",
            "title": "Optional. A waiver code that can be used to waive fees or penalties that will normally be applicable during voluntary changes\nOne of `waiver_code` or `contact_uri`"
          },
          "contactUri": {
            "type": "string",
            "title": "Optional. A URL providing contact details"
          }
        },
        "description": "A followup action following involuntary change indicates actions to be taken by the seller on an OrderItem\nafter a schedule change."
      },
      "orderOrderCreateRQ": {
        "type": "object",
        "properties": {
          "acceptSelectedQuotedOfferList": {
            "$ref": "#/components/schemas/orderAcceptSelectedQuotedOfferList"
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. An amount of money, typically a set percentage of the value involved, paid to an agent in a commercial transaction."
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPromotion"
            },
            "description": "Optional. Any promotion and discount codes to be passed to the retailer airline."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentFunctionCreate"
            },
            "title": "Optional. Container of all payment relevant functions in the context of an order create transaction"
          },
          "remarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonRemark"
            },
            "title": "Optional. Order level remarks"
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation elements from previous OfferPriceRS.\nAPI consumers must relay all `Augmentation`s referred in the priced offers\nin subsequent order create call.\nKey is `aug_id` and value the corresponding `Struct` type data."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags which are key-value pairs and can be used to associate additional information with the order.\nThese tags can be meaningful descriptors that help users categorize and identify orders in any manner.\nOrder search also supports tags."
          }
        },
        "title": "Request to create an order and return a complete view of that Order (OrderViewRS)"
      },
      "orderOrderListRQ": {
        "type": "object",
        "properties": {
          "bookingRefFilterCriteria": {
            "$ref": "#/components/schemas/orderBookingRefFilterCriteria"
          },
          "docFilterCriteria": {
            "$ref": "#/components/schemas/orderDocFilterCriteria"
          },
          "paxFilterCriteria": {
            "$ref": "#/components/schemas/orderPaxFilterCriteria"
          },
          "userFilterCriteria": {
            "$ref": "#/components/schemas/orderUserFilerCriteria"
          },
          "creationDateTimeFilterCriteria": {
            "$ref": "#/components/schemas/orderDateTimeFilterCriteria"
          },
          "paymentDueDateTimeFilterCriteria": {
            "$ref": "#/components/schemas/orderDateTimeFilterCriteria"
          },
          "depDateTimeFilterCriteria": {
            "$ref": "#/components/schemas/orderDateTimeFilterCriteria"
          },
          "paymentFilterCriteria": {
            "$ref": "#/components/schemas/orderPaymentFilterCriteria"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. Indicate the maximum number of matching Order records to be returned.\nIf not specified, all matching Orders will be returned subject to a maximum system limit\n- system will return error if the number matching Orders is more that this system limit."
          },
          "pageSize": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. The number of Order records to be returned per invocation.\nTogether with `page_token` this can be used for order list pagination.\nNote that the service may return records less than this value.\nIf not given, pagination will not be supported and the entire result is returned\nsubject to `limit` setting.\nIf given, the maximum value is 1000; values above 1000 will be coerced to 1000."
          },
          "pageToken": {
            "type": "string",
            "description": "Optional. The `next_page_token` from the previous list response, if any.\nAllows the user to advance through result pages when the order list is paginated."
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. If given, the field allows the user to skip results.\nThe skip value must refer to the number of individual resources to skip, not the number of pages.\nFor eg, assume page 1 is loaded with page size 10 and on the second hit, if the user wants to load the 5th page,\nthe user has to provide the skip value as '40'. The response will be having records from 41 to 50."
          }
        },
        "description": "Request to list orders matching given criteria."
      },
      "orderOrderListRS": {
        "type": "object",
        "properties": {
          "contactInfos": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonContactInfo"
            },
            "description": "Required. The contact information of the passengers present in the listed orders."
          },
          "orderSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderOrderSummary"
            },
            "description": "Required. Summary information of orders."
          },
          "nextPageToken": {
            "type": "string",
            "description": "Optional. Provide only if the results are paginated\nToken to retrieve the next page of results, or empty if there are no\nmore results in the list."
          },
          "totalSize": {
            "type": "integer",
            "format": "int64",
            "description": "Optional. Provide only if the results are paginated\nIndicate the total number of orders listed based on the requested criteria."
          }
        },
        "description": "Response to order list request providing summary information of matching orders.",
        "required": [
          "contactInfos",
          "orderSummaries"
        ]
      },
      "orderOrderRetrieveRQ": {
        "type": "object",
        "properties": {
          "supplierOrderIdentifier": {
            "$ref": "#/components/schemas/orderSupplierOrderIdentifier"
          },
          "vdcOrderId": {
            "type": "string",
            "title": "Required. VDC Order Id\nEither `supplier_order_identifier` or `vdc_order_id` must be provided"
          }
        },
        "title": "Request to retrieve a specific order",
        "required": [
          "supplierOrderIdentifier",
          "vdcOrderId"
        ]
      },
      "orderOrderSummary": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "title": "Required. IATA-defined 2-character code of the carrier owning the service"
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "orderId": {
            "type": "string",
            "title": "Required. Reference to existing Order in the supplier system"
          },
          "vdcOrderId": {
            "type": "string",
            "title": "Required. Verteil order id"
          },
          "pnrNumber": {
            "type": "string",
            "title": "Optional. Airline pnr number if available"
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The UTC timestamp when the order was created. Examples: 2018-09-05T15:52:01Z"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentProcessingSummaryPaymentStatus"
          },
          "creatorAgentId": {
            "type": "string",
            "description": "Required, Indicates the agent id who created the order."
          },
          "orderStatus": {
            "$ref": "#/components/schemas/orderOrderedOrderStatus"
          },
          "passengers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPax"
            },
            "description": "Optional. The details of the passengers in the Order.\nWhen not provided, it indicates that there are no passengers in the order."
          },
          "datedMarketingSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonDatedMarketingSegment"
            },
            "description": "Optional. The segments in the order.\nWhen not provided, it indicates that there are no segments in the order."
          },
          "paymentDueDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. Indicates the payment due date by when the Order need to be paid.\nThis is provided if the order is not paid and a payment timelimit is applied by the supplier."
          },
          "amountDue": {
            "$ref": "#/components/schemas/typeMoney"
          },
          "subAgencyId": {
            "type": "string",
            "description": "Optional. If the order was created by a sub agency, provides the agency ID of the sub agency."
          },
          "subAgencyName": {
            "type": "string",
            "description": "Optional. If the order was created by a sub agency, provides the name of the sub agency."
          }
        },
        "description": "Summary information of an order.",
        "required": [
          "ownerCode",
          "orderId",
          "vdcOrderId",
          "paymentStatus",
          "creatorAgentId",
          "orderStatus"
        ]
      },
      "orderOrderViewRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonWarning"
            },
            "description": "Optional. Contains information related to potential business errors detected during processing of the preceding request."
          },
          "vdcOrderId": {
            "type": "string",
            "description": "VDC assigned ID which uniquely identifies a specific VDC Super Order across several messages."
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The UTC timestamp when the Super Order was created.\nExamples: 2018-09-05T15:52:01Z"
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The UTC timestamp when a constituent order in this Super Order was last modified.\nExamples: 2018-09-05T15:52:01Z"
          },
          "airOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderOrderedOrder"
            },
            "description": "Constituent airline orders of this Super Order.\nEach order is a uniquely identified record of the agreement of with a supplier to receive products and services\nunder specified terms and conditions. Order supports the sale of a flexible range of travel products and services\nthat are not necessarily Journey based (e.g. subscription services).\nComment: A 'PNR', 'super PNR' and 'ticket' are all today's versions of airline implementations of aspects of an Order.\nAn Order may support non-homogeneity, i.e. each passenger in an Order may hold different sets of order items at different prices."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentFunctionOrder"
            },
            "title": "Optional. Information related to the settlement of a transaction through monetary or other compensations.\nFor example, a payment may be applied to an entire Order or individual Order Items.\nThe information will not appear in case of an unpaid booking"
          },
          "ticketDocInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonTicketDocInfo"
            },
            "description": "Optional. Information corresponding to a group of 1 to 4 Tickets for a single Origin Destination and a single Passenger."
          },
          "distributionChain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderDistributionChainLink"
            },
            "description": "The set of organizations involved in the generation of this order state."
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          }
        },
        "description": "OrderViewRS will contain consolidated information of all Orders and their OrderItems created under a Super Order in VDC.\nAn order may contain OrderItems of flight, flight ancillaries, rail (future), hotel (future), car (future), activities (future) etc."
      },
      "orderOrderedOrder": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "title": "ID assigned by the owner which uniquely identifies a specific Order with the owner's system"
          },
          "ownerCode": {
            "type": "string",
            "description": "Identifier for the owner of this Order responsible for the delivery of the items .\nFor air content, this is the IATA-defined 2-character code of the carrier owning the order."
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "versionNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Version of the Order used to track the evolution of an Order and the changes made to it."
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The UTC timestamp when the order was created. Examples: 2018-09-05T15:52:01Z"
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The UTC timestamp when the order was last modified. Examples: 2018-09-05T15:52:01Z"
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderOrderedOrderItem"
            },
            "title": "List of OrderItems for this message"
          },
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. Commission is an amount of money, typically a set percentage of the value involved, paid to an agent in a commercial transaction.\nTotal commission applicable for the order. Sum of all commissions applied at orderitem level, excluding ancillary and seat item."
          },
          "totalPrice": {
            "$ref": "#/components/schemas/commonPrice"
          },
          "bookingRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderBookingRef"
            },
            "description": "Optional. Other booking references applicable to this Order. E.g. Airline PNR Number, GDS RLOC etc."
          },
          "status": {
            "$ref": "#/components/schemas/orderOrderedOrderStatus"
          },
          "remarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonRemark"
            },
            "title": "Optional. Order level remarks"
          },
          "namingTimeLimit": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format by which an Order must be completed with individual passenger names.\nExample: 2015-01-13T13:59:38Z\nThis will be returned only if there are any passenger names pending to be advised."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional.\nThe tags (key-value pairs) associated with the order for identification of unique use cases."
          },
          "originalOrderId": {
            "type": "string",
            "title": "Optional.\nOriginally assigned ID by the owner which uniquely identifies a specific Order across several messages"
          }
        },
        "description": "A uniquely identified record of the agreement of one party with another to receive products and services under specified terms and conditions.\nOrder supports the sale of a flexible range of airline products and services that are not necessarily Journey based (e.g. subscription services)."
      },
      "orderOrderedOrderItem": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "description": "Owner assigned ID which is unique within an Order."
          },
          "ownerCode": {
            "type": "string",
            "description": "Identifier for the owner of this OrderItem.\nFor air content, this is the IATA-defined 2-character code of the carrier owning the order."
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The UTC timestamp when the OrderItem was created. Examples: 2018-09-05T15:52:01Z"
          },
          "paymentTimeLimit": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time limit specified as a UTC timestamp by which a commitment to pay must be made for the given OrderItem.\nUpon expiry it is expected that the OrderItem is removed from the Order.\nIf no value is returned, then no advice has been given.\nFor example: PaymentTimeLimitDateTime: 2015-01-01T12:53:12Z - indicates the date time by which payment commitment is required."
          },
          "price": {
            "$ref": "#/components/schemas/commonPrice"
          },
          "priceDifferential": {
            "$ref": "#/components/schemas/commonPriceDifferential"
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the travel service provider for the OrderItem.\nFor air content, this provide details of the charges for carriage of passenger(s) and her allowable free baggage."
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderOrderedService"
            },
            "description": "List of services present in this OrderItem\nAt the time of shopping, a service can be sold to multiple passengers on a given journey.\nAt time of order, the services should be applied to a single passenger on a single segment.\nThe services associated with a flight orderItem will be sorted based on the order of journey."
          },
          "status": {
            "$ref": "#/components/schemas/orderOrderedOrderItemStatus"
          },
          "sellerFollowUpAction": {
            "$ref": "#/components/schemas/orderFollowUpAction"
          },
          "priceGuaranteeTimeLimit": {
            "type": "string",
            "format": "date-time",
            "title": "Optional. The time for which the price of an Order Item is guaranteed. In the absence of the price guarantee time limit,\nthe price is not guaranteed. Upon expiry, the price may no longer be guaranteed and either the Order should be repriced,\nwhich may result in a new RepricedOffer, or a new shopping process may begin.\nFor example: PriceGuaranteeTimeLimitDateTime: 2015-01-01T12:53:12Z - indicates the date time by which the price is guaranteed"
          }
        },
        "description": "An individually priced item within an Ordered Order, made up of one or more Services.\nMay or may not be a selected Offer Item (e.g. non-chargeable Services available on request such as a wheelchair)."
      },
      "orderOrderedOrderItemStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "CANCELLED"
        ],
        "default": "ACTIVE",
        "description": "Enumeration of possible statuses of an OrderItem.\n\n - ACTIVE: Default. The Order Item is in an active state\n - CANCELLED: The Order Item is cancelled."
      },
      "orderOrderedOrderStatus": {
        "type": "string",
        "enum": [
          "OPENED",
          "CLOSED"
        ],
        "default": "OPENED",
        "description": "Enumeration of possible statuses of an Order.\n\n - OPENED: Default. Order was built based on offer information\n - CLOSED: Status of an order once all Order Items are FULLY PAID and Services are either DELIVERED or REFUNDED or EXPIRED."
      },
      "orderOrderedService": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "Uniquely Identifies a Service within the context of one message."
          },
          "paxRefId": {
            "type": "string",
            "title": "Reference to a Passenger ID within this message"
          },
          "serviceAssociation": {
            "$ref": "#/components/schemas/orderServiceAssociation"
          },
          "validatingCarrierCode": {
            "type": "string",
            "title": "Optional IATA-defined 2-character code of carrier providing the service"
          },
          "statusCode": {
            "$ref": "#/components/schemas/OrderedServiceStatusCode"
          },
          "bookingRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderBookingRef"
            },
            "description": "Optional. References to bookings or reservations."
          }
        },
        "description": "The instance of a specific flight or Service Definition as it has been ordered.\nThe services should be applied to a single passenger on a single segment."
      },
      "orderParticipatingOrg": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Optional.\nName of the organization."
          },
          "orgId": {
            "type": "string",
            "description": "Organization code or identifier."
          }
        },
        "title": "An organized structure set up for a particular purpose, such as a business, government body, department, charity, or financial institution"
      },
      "orderPassengerServicing": {
        "type": "object",
        "properties": {
          "passengerId": {
            "type": "string",
            "description": "Uniquely identifies a Passenger within the context of one message."
          },
          "new": {
            "$ref": "#/components/schemas/commonIndividual"
          },
          "previous": {
            "$ref": "#/components/schemas/commonIndividual"
          }
        },
        "description": "Function to Add, Remove or Update the Passenger Details. Providing the New and Previous values together implies an Update."
      },
      "orderPaxFilterCriteria": {
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "description": "Optional. The personal name given to the individual at birth and used before a family name.\nAlso called first name. E.g. JOHN.\nCan be the entire given name or the first three or more characters of the same.\nIf there are more than one part in the given name, they may be separated with space. E.g. JOHN PAUL."
          },
          "surname": {
            "type": "string",
            "description": "Optional. Individual's hereditary name(s) common to all members of a family.\nAlso known as family name or last name. E.g. SMITH.\nCan be the entire surname or the first three or more characters of the same."
          }
        },
        "description": "Filter orders using passenger details."
      },
      "orderPaymentFilterCriteria": {
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentProcessingSummaryPaymentStatus"
            },
            "title": "Required. Given as a filter on listing the orders. eg: PAID, UNPAID, etc"
          }
        },
        "description": "List orders using payment criteria.",
        "required": [
          "paymentStatus"
        ]
      },
      "orderServiceAssociation": {
        "type": "object",
        "properties": {
          "paxSegmentRef": {
            "type": "string",
            "description": "Reference to a single passenger segment that which satisfies transportation of a passenger between a given\ndeparture and arrival stations."
          },
          "seat": {
            "$ref": "#/components/schemas/commonSeatOnLeg"
          },
          "serviceDefRef": {
            "$ref": "#/components/schemas/commonOrderServiceDefinitionRef"
          }
        }
      },
      "orderSupplierOrderIdentifier": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "title": "Required. IATA-defined 2-character code of the carrier owning the service"
          },
          "channel": {
            "$ref": "#/components/schemas/commonChannel"
          },
          "orderId": {
            "type": "string",
            "title": "Required. ID assigned by the owner which uniquely identifies a specific Order\nwithin the owner's order management system (OMS).\nOne of `order_id` or `pnr_number` must be provided"
          },
          "pnrNumber": {
            "type": "string",
            "title": "Required. Passenger Name Record (PNR) number assigned by the owner which uniquely identifies\na booking in owner's reservation system.\nOne of `order_id` or `pnr_number` must be provided"
          }
        },
        "title": "Supplier Order identification details",
        "required": [
          "ownerCode",
          "orderId",
          "pnrNumber"
        ]
      },
      "orderUpdateOrderRemarks": {
        "type": "object",
        "properties": {
          "addRemarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonRemark"
            },
            "description": "The list of remarks which are to be added against the order."
          }
        },
        "description": "The remarks to be updated for the given order."
      },
      "orderUpdateOrderTags": {
        "type": "object",
        "properties": {
          "deleteTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of keys of the tags which are to be removed from the system for a particular order."
          },
          "addTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags which are to be added to the system for a particular order.\nThe maximum length of a tag key is 125 characters.\nThe maximum length of a tag value is 255 characters."
          },
          "editTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags which are to be edited for a particular order.\nThe maximum length of a tag key is 125 characters.\nThe maximum length of a tag value is 255 characters."
          }
        },
        "description": "Request tags which can be used provides users with the ability to associate additional information with their orders by using searchable tags, which are essentially key-value pairs.\nThese tags can be meaningful descriptors that help users categorize and identify orders more efficiently."
      },
      "orderUserFilerCriteria": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Optional. If provided, orders will get filtered at agent level."
          },
          "officeId": {
            "type": "string",
            "description": "Optional. If provided, orders will get filtered at office level."
          },
          "agencyId": {
            "type": "string",
            "description": "Required. id of the agency in which the user has logged in.\nIn case of fetching sub agent booking orders, this can be the consolidator agencyId."
          },
          "parentAgencyId": {
            "type": "string",
            "description": "Optional. Should be given in case of listing sub agent bookings.\nIt indicates the id of the Own Agency in which the sub agent has registered."
          }
        },
        "description": "Filter orders based on creating/owning user/agency details.",
        "required": [
          "agencyId"
        ]
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          }
        },
        "additionalProperties": {},
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "protobufNullValue": {
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ],
        "default": "NULL_VALUE",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
      },
      "typeMoney": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "Required. The 3-letter currency code defined in ISO 4217."
          },
          "units": {
            "type": "string",
            "format": "int64",
            "description": "Optional. The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
          },
          "nanos": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
          }
        },
        "description": "Represents an amount of money with its currency type. When the money value is \"Zero\" the response will only have currency code.",
        "required": [
          "currencyCode"
        ]
      },
      "v4orderAcceptChange": {
        "type": "object",
        "properties": {
          "orderItemRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Unique identification for the order item for which the change is accepted"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process."
          }
        }
      },
      "v4orderAcceptRepricedOrder": {
        "type": "object",
        "properties": {
          "commissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonCommission"
            },
            "description": "Optional. Additional order level price component which needs to be included or excluded during payment- E.g. a service fee, upfront commission etc."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentFunctionChange"
            },
            "title": "Optional. Container of all payment relevant functions in the context of an order change transaction"
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for converting the offer into order."
          },
          "updateOrderTags": {
            "$ref": "#/components/schemas/orderUpdateOrderTags"
          },
          "updateOrderRemarks": {
            "$ref": "#/components/schemas/orderUpdateOrderRemarks"
          }
        },
        "description": "Contains a choice of functions to update and Order including Update Order Item, Update Passenger,\nand Accept Repriced Order."
      },
      "v4orderDivideOrderItems": {
        "type": "object",
        "properties": {
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Reference IDs of passengers to be deleted from the order."
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process."
          }
        }
      },
      "v4orderUpdateOrderItems": {
        "type": "object",
        "properties": {
          "acceptOffers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderAcceptOffer"
            },
            "description": "Required. Function to accept a new OfferItem and adding it to the existing Order."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonPaymentFunctionChange"
            },
            "title": "Optional. Container of all payment relevant functions in the context of an order change transaction"
          },
          "dataMap": {
            "$ref": "#/components/schemas/commonDataMap"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation element from OrderRequoteRS.\nAPI consumers must relay all `Augmentation`s returned in OrderRequoteRS in subsequent UpdateOrderItemsRQ.\nKey is `aug_id` and value the corresponding `Struct` type data."
          },
          "updateOrderTags": {
            "$ref": "#/components/schemas/orderUpdateOrderTags"
          },
          "updateOrderRemarks": {
            "$ref": "#/components/schemas/orderUpdateOrderRemarks"
          }
        },
        "title": "Contains a choice of functions to update and Order by adding, removing or replacing Order Items\n(with potential refund conditions, in case of cancellations)"
      },
      "v4orderUpdateOrderParameters": {
        "type": "object",
        "properties": {
          "updateOrderTags": {
            "$ref": "#/components/schemas/orderUpdateOrderTags"
          },
          "updateOrderRemarks": {
            "$ref": "#/components/schemas/orderUpdateOrderRemarks"
          }
        }
      },
      "v4orderUpdatePax": {
        "type": "object",
        "properties": {
          "passengerServicing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderPassengerServicing"
            },
            "description": "Function to Add, Remove or Update the Passenger Details. Providing the New and Previous values together implies an Update."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process."
          }
        },
        "description": "Function to Add, Remove or Update the Passenger Details."
      }
    }
  }
}