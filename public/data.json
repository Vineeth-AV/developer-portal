{
    "swagger": "2.0",
    "host": "api.stage.verteil.com",
    "schemes": ["https"],
    "info": {
      "title": "Verteil Direct Connect (VDC) Air APIs",
      "version": "v3",
      "description": "VDC Post booking API version 3 based on NDC 21.x"
    },
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/entrygate/rest/request:repriceOrder": {
        "post": {
          "description": "The service used to reprice the existing Order before making payment in deferred payment flow",
          "operationId": "OrderReshop.Reprice.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "$ref": "#/definitions/airOrderRepriceRSType"
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an OrderChangeRQ or OrderCancelRQ transaction, to commit the re-shop offer.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/offerOrderRepriceRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderReshop"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "Reprice.V3"
              ]
            }
          ],
          "tags": [
            "OrderReshop"
          ]
        }
      },
      "/entrygate/rest/request:reshopOrder": {
        "post": {
          "description": "The service used to request additions, replacement or deletions of OrderItems of a specific Order.",
          "in": "header",
          "operationId": "OrderReshop.Reshop.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "$ref": "#/definitions/airOrderReshopRSType"
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an OrderChangeRQ or OrderCancelRQ transaction, to commit the re-shop offer.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/offerOrderReshopRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderReshop"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "Reshop.V3"
              ]
            }
          ],
          "tags": [
            "OrderReshop"
          ]
        }
      },
      "/entrygate/rest/request:requoteOrder": {
        "post": {
          "description": "The service used to price an offer after ReshopOrder",
          "operationId": "OrderReshop.Requote.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "$ref": "#/definitions/airOrderRequoteRSType"
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "description": "The OrderRequote transaction return the priced Offer reflecting the Offer/OfferItems requested for pricing after the OrderReshop transaction is done.",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/offerOrderRequoteRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderReshop"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "Requote.V3"
              ]
            }
          ],
          "tags": [
            "OrderReshop"
          ]
        }
      },
      "/entrygate/rest/request:acceptRepricedOrder": {
        "post": {
          "description": "The service used by seller to inform the airline that it is accepting the proposed Order,\nas it has been repriced and returned in the preceding `OrderRepriceRS`.\nThe updated view of the Order is returned.",
          "operationId": "OrderChange.AcceptRepricedOrder.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "description": "Function used by seller to inform the airline that it is accepting the proposed Order,\nas it has been repriced and returned in the preceding `OrderRepriceRS`.",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/orderAcceptRepricedOrderRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderChange"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "AcceptRepricedOrder.V3"
              ]
            }
          ],
          "tags": [
            "OrderChange"
          ]
        }
      },
      "/entrygate/rest/request:updateOrderItems": {
        "post": {
          "description": "The service used by the seller to request the airline to commit changes to an existing Order\nby adding, removing or replacing Order Items (with potential refund conditions, in case of cancellations).\nThe actions possible are determined by the airline and communicated to the seller via `OrderReshop` and `OrderRequote`\nAPIs (which precedes `UpdateOrderItems`). It is up to the seller to then accept the proposed actions from the\n`OrderRequoteRS` by echoing these functions in this order servicing structure.\nThe updated view of the Order is returned.",
          "operationId": "OrderChange.UpdateOrderItems.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/orderUpdateOrderItemsRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderChange"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "UpdateOrderItems.V3"
              ]
            }
          ],
          "tags": [
            "OrderChange"
          ]
        }
      },
      "/entrygate/rest/request:divideOrderItems": {
        "post": {
          "description": "Request used by the seller to request the airline to split the PNR by deleting passengers from the parent PNR.\nThis is preceded by OrderRetrieveRQ and the passenger reference IDs to be deleted are sent to this request\nalong with passenger details.\nThe updated view of the Order is returned.",
          "operationId": "OrderChange.DivideOrderItems.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "description": "Request used by the seller to request the airline to split the PNR by deleting passengers from the parent PNR.\nThis is preceded by OrderRetrieveRQ and the passenger reference IDs to be deleted are sent to this request along with passenger details.",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/orderDivideOrderItemsRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderChange"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "DivideOrderItems.V3"
              ]
            }
          ],
          "tags": [
            "OrderChange"
          ]
        }
      },
      "/entrygate/rest/request:acceptChange": {
        "post": {
          "description": "The service used by seller to accept a change as advised by the airline on an event of involuntary schedule change\nThis request is preceded by the OCN notification which is sent by the airline during a involuntary change\nand the seller is expected to respond with an option provided by them.\nThe updated view of the Order is returned.",
          "operationId": "OrderChange.AcceptChange.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/orderAcceptChangeRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderChange"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "AcceptChange.V3"
              ]
            }
          ],
          "tags": [
            "OrderChange"
          ]
        }
      },
      "/entrygate/rest/request:updatePassengers": {
        "post": {
          "description": "The service used by the seller to request the airline to commit changes to an existing passenger\nThis change includes name change. The request includes the previous name (given/surname/title name) and the new name (given/surname/title name) to which name of passenger should be changed\nThe response is OrderViewRS with name changed.",
          "operationId": "OrderChange.UpdatePassengers.V3",
          "responses": {
            "200": {
              "description": "A successful response.",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/orderUpdatePaxRQ"
              }
            },
            {
              "name": "ThirdpartyId",
              "in": "header",
              "description": "IATA-defined 2-character code of the carrier owning the offer/order",
              "required": true,
              "type": "string"
            },
            {
              "name": "Service",
              "in": "header",
              "description": "NDC service name",
              "required": true,
              "type": "string",
              "enum": [
                "OrderChange"
              ]
            },
            {
              "name": "Resource",
              "in": "header",
              "description": "NDC service sub function and version",
              "required": true,
              "type": "string",
              "enum": [
                "UpdatePassengers.V3"
              ]
            }
          ],
          "tags": [
            "OrderChange"
          ]
        }
      }
    },
    "definitions": {
      "IndividualGenderCode": {
        "type": "string",
        "enum": [
          "UNSPECIFIED",
          "F",
          "M",
          "U"
        ],
        "default": "UNSPECIFIED",
        "description": "Enumeration set for Gender Code.\n {codeListAgencyName}ICAO{/codeListAgencyName}\n {codeListName}Document 9303 Sex of the holder{/codeListName}\n - UNSPECIFIED: Default unspecified\n - F: Female\n - M: Male\n - U: Unknown"
      },
      "PaymentCardTrxPaymentCardCardProductTypeCode": {
        "type": "string",
        "enum": [
          "X",
          "P",
          "C"
        ],
        "default": "X",
        "description": "Optional. Represents card product type.\nP-personal or C-Commercial\n - X: Default value : Unknown card type\n - P: Personal\n - C: Commercial"
      },
      "PaymentCardTrxPaymentCardCreditCardVendorCode": {
        "type": "string",
        "enum": [
          "UNDEFINED",
          "AX",
          "DS",
          "DC",
          "UP",
          "JC",
          "CA",
          "TP",
          "VI"
        ],
        "default": "UNDEFINED",
        "description": "A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa\n - AX: American Express\n - DS: Discover Card\n - DC: Diners Club\n - UP: China UnionPay\n - JC: Japan Credit Bureau\n - CA: Mastercard\n - TP: Universal Air Travel Plan (UATP)\n - VI: VISA International"
      },
      "RemarkRemarkType": {
        "type": "string",
        "enum": [
          "PUBLIC",
          "INTERNAL"
        ],
        "default": "PUBLIC",
        "description": "Enumeration of types of remarks\n - PUBLIC: Remark will be displayed and shared with airlines and other suppliers\n - INTERNAL: Remark will be displayed but will not be shared with airlines or any suppliers"
      },
      "RestrictionsChangeTypeCode": {
        "type": "string",
        "enum": [
          "CHANGE_TYPE_UNSPECIFIED",
          "NAME",
          "FLIGHT",
          "SERVICE"
        ],
        "default": "CHANGE_TYPE_UNSPECIFIED",
        "description": "Enumeration of change type codes\n--TODO: Validate values\n - CHANGE_TYPE_UNSPECIFIED: Default unspecified\n - NAME: Pax name change\n - FLIGHT: Flight change\n - SERVICE: Service change"
      },
      "SeatProfileSeatCharacteristicCode": {
        "type": "string",
        "enum": [
          "SEAT_CHARACTERISTIC_UNSPECIFIED",
          "A",
          "B",
          "C",
          "D",
          "E"
        ],
        "default": "SEAT_CHARACTERISTIC_UNSPECIFIED",
        "description": "Enumeration of seat characteristic codes according to PADIS code list 9825.\n\n - SEAT_CHARACTERISTIC_UNSPECIFIED: Default unspecified\n - A: Aisle seat\n - B: Seat with bassinet facility\n - C: Crew seat\n - D: No seat - exit door\n - E: Exit and emergency exit seat\n\n-- Todo: Add others"
      },
      "SecurePaymentVersion2CardNumberCollectionCode": {
        "type": "string",
        "enum": [
          "COLLECTION_CODE_UNSPECIFIED",
          "K",
          "S"
        ],
        "default": "COLLECTION_CODE_UNSPECIFIED",
        "description": "Indicates the collection method of the card number.\nThis will be newly entered or using previously saved information.\n\n - COLLECTION_CODE_UNSPECIFIED: Default value : Unknown collection method\n - K: Keyed entry\n - S: Previously stored"
      },
      "SecurePaymentVersion2PayerAuthenticationExemptionCode": {
        "type": "string",
        "enum": [
          "ND",
          "AO",
          "DA",
          "LV",
          "MA",
          "SC",
          "TB",
          "TR"
        ],
        "default": "ND",
        "description": "Used to identify an exemption to performing payer authentication.\nDefault value : ND (None defined)\n - ND: Default value : None Defined\n - AO: Authentication Outage\n - DA: Delegated Authentication\n - LV: Low Value Exemption\n - MA: Merchant Problem and Major Outage\n - SC: Secure Corporate Exemption\n - TB: Trusted Beneficiary Exemption\n - TR: Transaction Risk Analysis Exemption"
      },
      "SecurePaymentVersion2PayerAuthenticationFailureToCompleteCode": {
        "type": "string",
        "enum": [
          "FAILURE_CODE_UNSPECIFIED",
          "NC",
          "NS"
        ],
        "default": "FAILURE_CODE_UNSPECIFIED",
        "description": "Used to identify possible pre defined reasons for failure to complete payer authentication.\n\n - FAILURE_CODE_UNSPECIFIED: Failure code not specified\n - NC: Authentication Not Complete\n - NS: Authentication Not Successful"
      },
      "SecurePaymentVersion2PaymentTrxChannelCode": {
        "type": "string",
        "enum": [
          "TXN_CHANNEL_UNSPECIFIED",
          "EC",
          "FA",
          "MO",
          "TO"
        ],
        "default": "TXN_CHANNEL_UNSPECIFIED",
        "description": "Indicates the payment transaction channel.\n\n - TXN_CHANNEL_UNSPECIFIED: Not specified\n - EC: Electronic commerce\n - FA: Face to face\n - MO: Mail order (paper mail, fax and email)\n - TO: Telephone order/ IVR"
      },
      "ServiceEnumsRFIC": {
        "type": "string",
        "enum": [
          "SERVICE_CATEGORY_UNSPECIFIED",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I"
        ],
        "default": "SERVICE_CATEGORY_UNSPECIFIED",
        "description": "Enumeration of service categories. Most of these correspond to IATA Reason For Issuance Codes (RFIC) - refer to PADIS Codeset for data element 4183 - Special Condition.\n\n - A: Air transportation\n - B: Surface Transportation /Non Air Services\n - C: Baggage\n - D: Financial Impact\n - E: Airport services\n - F: Merchandise\n - G: Inflight services\n - H: Reserved for future ATPCO use\n - I: Individual Airline Use"
      },
      "SortSortOrder": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "default": "ASCENDING",
        "description": "Sort order enumeration"
      },
      "SortSortParameter": {
        "type": "string",
        "enum": [
          "SORT_PARAMETER_UNSPECIFIED",
          "PRICE",
          "STOPS",
          "DEPARTURE_TIME"
        ],
        "default": "SORT_PARAMETER_UNSPECIFIED",
        "description": "Enumeration of parameters that influence sort order of shopping results\n - SORT_PARAMETER_UNSPECIFIED: Default. Results will be sorted based on Price\n - PRICE: Default. Sort based on total Offer price\n - STOPS: Sort based on the number of stops\n - DEPARTURE_TIME: Sort based on departure time of first flight segment"
      },
      "airOrderRepriceRSType": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/definitions/offerOrderRepriceRS",
            "description": "OrderRepriceRS results.\nOnly one of `response` or `error` fields will be set"
          },
          "error": {
            "$ref": "#/definitions/commonError",
            "description": "Contains information related to errors detected during processing of the preceding request.\nOnly one of `response` or `error` fields will be set"
          }
        },
        "description": "The OrderReprice Response model"
      },
      "airOrderRequoteRSType": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/definitions/offerOrderRequoteRS",
            "description": "OrderRequoteRS results.\nOnly one of `response` or `error` fields will be set"
          },
          "error": {
            "$ref": "#/definitions/commonError",
            "description": "Contains information related to errors detected during processing of the preceding request.\nOnly one of `response` or `error` fields will be set"
          }
        },
        "description": "The OrderRequote Response model"
      },
      "airOrderReshopRSType": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/definitions/offerOrderReshopRS",
            "description": "OrderReshop results.\nOnly one of `response` or `error` fields will be set"
          },
          "error": {
            "$ref": "#/definitions/commonError",
            "description": "Contains information related to errors detected during processing of the preceding request.\nOnly one of `response` or `error` fields will be set"
          }
        },
        "description": "The OrderReshop Response model"
      },
      "commonApplicableParty": {
        "type": "string",
        "enum": [
          "PER_PAX",
          "PARTY"
        ],
        "default": "PER_PAX",
        "description": "Enumeration of application modes of an amount or restriction (e.g. baggage allowance)\n - PER_PAX: Applicable individually to each passenger\n - PARTY: Application combined to all passengers in a party"
      },
      "commonBaggageAllowance": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/commonBaggageAllowanceType",
            "description": "Required. Type of Baggage Allowance. E.g. Checked or CarryOn."
          },
          "descText": {
            "type": "string",
            "description": "Optional. Baggage Allowance description and additional information."
          },
          "weightAllowances": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonWeightAllowance"
            },
            "description": "Optional. Baggage weight allowance with application information."
          },
          "pieceAllowances": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPieceAllowance"
            },
            "description": "Optional. Defines the maximum number of each allowable baggage type."
          },
          "dimensionAllowances": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonDimensionAllowance"
            },
            "description": "Optional. Baggage dimension allowance with application information."
          }
        },
        "description": "The amount of checked or carry-on luggage the airline will allow.\n--TODO: Will we always provide at least one of WeightAllowance, PieceAllowance or DimensionAllowance",
        "required": [
          "type"
        ]
      },
      "commonBaggageAllowanceType": {
        "type": "string",
        "enum": [
          "BAGGAGE_TYPE_UNSPECIFIED",
          "CARRY_ON",
          "CHECKED"
        ],
        "default": "BAGGAGE_TYPE_UNSPECIFIED",
        "description": "Enumeration of types of Baggage Allowances. E.g. Checked or CarryOn."
      },
      "commonBaggageDimensionCategory": {
        "type": "string",
        "enum": [
          "BAG_DIMENSION_UNSPECIFIED",
          "LENGTH",
          "WIDTH",
          "HEIGHT",
          "TOTAL_LINEAR"
        ],
        "default": "BAG_DIMENSION_UNSPECIFIED",
        "description": "Enumeration of baggage dimension categories\n - TOTAL_LINEAR: Total of length + width + height"
      },
      "commonCabinCode": {
        "type": "string",
        "enum": [
          "CABIN_UNSPECIFIED",
          "Y",
          "W",
          "C",
          "F"
        ],
        "default": "CABIN_UNSPECIFIED",
        "description": "Enumeration of cabin class codes\n - CABIN_UNSPECIFIED: Default unspecified\n - Y: Economy (Y) class\n - W: Premium Economy (W) class\n - C: Business (C) class\n - F: First (F) class"
      },
      "commonChangeOrCancelFee": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Optional. Owner offering the discount. This can be\n - IATA-defined 2-character code identifying an airline or GDS\n - an identifier like 'LHG' for Lufthansa Group\n - IATA number of travel agency\n - If not provided it is assumed that the owner is the offer/order responsible airline."
          },
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. Fee amount"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "description": "Optional. Stores the percentage which was used to determine the Fee to be charged in conjunction or not with\n`min_amount` and `max_amount`"
          },
          "maxAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. Stores an Maximum fee amount which will be charged when a variable fee amount is effective."
          },
          "minAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. Stores an Minimum fee amount which will be charged when a variable fee amount is effective."
          },
          "approxInd": {
            "type": "boolean",
            "description": "Optional. When true, this fee is approximate."
          },
          "descText": {
            "type": "string",
            "description": "Optional. Fee description.  Example: Change penalty"
          }
        },
        "description": "Amount added on to a charge for changes to an already reserved product, purpose, or service."
      },
      "commonChannel": {
        "type": "string",
        "enum": [
          "NDC",
          "DIRECT_CONNECT",
          "GDS_1A",
          "GDS_1G",
          "GDS_1S"
        ],
        "default": "NDC",
        "description": "Enumeration of channels through with air products are sourced\n - NDC: Default NDC channel\n - DIRECT_CONNECT: Proprietary direct connect channel\n - GDS_1A: Amadeus GDS channel\n - GDS_1G: Galileo GDS channel\n - GDS_1S: Sabre GDS channel"
      },
      "commonCombination": {
        "type": "string",
        "enum": [
          "AND",
          "OR"
        ],
        "default": "AND",
        "description": "Combination modes enumeration"
      },
      "commonCommission": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Commission amount and currency code. Example: 20 USD"
          },
          "commissionCode": {
            "type": "string",
            "description": "Required.The node will have a code to identify between  commission configured in Verteil by airline admin (VDC-AirAd), Open connect admin or commission provided by airline through their APIs.\nExample: 1000, BFST"
          },
          "percentage": {
            "type": "number",
            "format": "double",
            "description": "Optional.The node will have information on the commission percentage. The element will not be present if the comission is a fixed amount and not a percentage.\nExample: 20"
          }
        },
        "description": "Optional. An amount of money, typically a set percentage of the value involved, paid to an agent in a commercial transaction.\nTotal commission applicable for the order. Sum of all commissions applied at orderitem level. Currently, commission is only applied on flight item.",
        "required": [
          "amount",
          "commissionCode"
        ]
      },
      "commonContactInfo": {
        "type": "object",
        "properties": {
          "contactPurpose": {
            "$ref": "#/definitions/commonContactPurpose",
            "description": "Optional. Identifies the purpose of this contact. E.g. contact at origin or emergency contact"
          },
          "individual": {
            "$ref": "#/definitions/commonIndividual",
            "description": "Optional. Identifies a single human individual as distinct from a group, class, or family."
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPhone"
            },
            "description": "Optional. Telephone number details"
          },
          "postalAddresses": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPostalAddress"
            },
            "description": "Optional. Physical address used for postal service."
          },
          "emailAddresses": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonEmailAddress"
            },
            "description": "Optional. The email address which should be used for contact purposes."
          },
          "paxSegmentRefId": {
            "type": "string",
            "description": "Optional. Reference to a Pax Segment ID."
          },
          "contactRefusedInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, Contact Information was refused to be provided."
          }
        },
        "description": "The electronic or geographic address which a party has provided as the contact channel. For example, contact email,\ncontact postal address, contact phone number."
      },
      "commonContactPurpose": {
        "type": "string",
        "enum": [
          "CTC_OTHER",
          "CTC_ORIGIN",
          "CTC_DEST",
          "CTC_EMERGENCY",
          "CTC_NOTIF",
          "CTC_UMNR_ORIGIN",
          "CTC_UMNR_DEST",
          "CTC_PAYMENT",
          "CTC_BILLING"
        ],
        "default": "CTC_OTHER",
        "description": "Enumeration of contact purposes. Based on PADIS code list 3299"
      },
      "commonContactType": {
        "type": "string",
        "enum": [
          "TYPE_OTHER",
          "HOME",
          "BUSINESS",
          "AGY_CUSTOMER_SERVICE",
          "AGY_LOYALTY"
        ],
        "default": "TYPE_OTHER",
        "description": "Enumeration of contact types. Based on PADIS code list: Contact Type"
      },
      "commonCorporation": {
        "type": "object",
        "properties": {
          "corporateId": {
            "type": "string",
            "description": "Unique identifier of this corporation."
          }
        },
        "description": "Corporate party information."
      },
      "commonCurConversion": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Amount and currency specified in the converted currency. Example: `INR 124100`"
          },
          "sourceAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Source amount and currency used for conversion. E.g. `USD 1500`"
          },
          "multiplierValue": {
            "type": "number",
            "format": "double",
            "description": "The conversion rate used to convert from `source_amount` to `amount`. E.g. `80.8716018`"
          },
          "format": {
            "type": "string",
            "description": "Optional. The converted currency format. E.g. `1`"
          }
        },
        "required": [
          "amount",
          "sourceAmount",
          "multiplierValue"
        ]
      },
      "commonDatedLeg": {
        "type": "object",
        "properties": {
          "operatingLegId": {
            "type": "string",
            "description": "Required. Uniquely identifies a leg within the context of one message."
          },
          "dep": {
            "$ref": "#/definitions/commonStation",
            "description": "Required. IATA 3-letter code defining the departure city or airport code."
          },
          "arrival": {
            "$ref": "#/definitions/commonStation",
            "description": "Required. IATA 3-letter code defining the arrival city or airport code."
          },
          "aircraftType": {
            "type": "string",
            "description": "Optional. Code assigned to an aircraft type in IATA SSIM."
          }
        },
        "description": "The nonstop operation of an aircraft between the departure station and the arrival station.",
        "required": [
          "operatingLegId",
          "dep",
          "arrival"
        ]
      },
      "commonDatedOperatingLegsRef": {
        "type": "object",
        "properties": {
          "paxSegmentRefId": {
            "type": "string",
            "description": "Reference to a passenger segment"
          },
          "legRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "References to dated operating flight legs of a passenger segment"
          }
        },
        "description": "Holds references to dated operating flight legs of a passenger segment"
      },
      "commonDatedOperatingLegsRefs": {
        "type": "object",
        "properties": {
          "segmentLegs": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonDatedOperatingLegsRef"
            }
          }
        },
        "description": "Holds references to dated operating flight legs possibly belonging to different passenger segments"
      },
      "commonDimension": {
        "type": "object",
        "properties": {
          "dimensionCategory": {
            "$ref": "#/definitions/commonBaggageDimensionCategory",
            "description": "Required. Dimension category - Length, Width, Height or Total Linear (Length + Width + Height)"
          },
          "unit": {
            "$ref": "#/definitions/commonDimensionUnit",
            "description": "Required. Dimension unit of measurement - e.g. CM"
          },
          "maxValue": {
            "type": "number",
            "format": "float",
            "description": "Required. Maximum allowed dimension value"
          },
          "minValue": {
            "type": "number",
            "format": "float",
            "description": "Optional. Minimum allowed dimension value"
          }
        },
        "description": "Dimension category, min/max values and unit",
        "required": [
          "dimensionCategory",
          "unit",
          "maxValue"
        ]
      },
      "commonDimensionAllowance": {
        "type": "object",
        "properties": {
          "appParty": {
            "$ref": "#/definitions/commonApplicableParty",
            "description": "Optional. Baggage weight restriction application. E.g. `PER_PAX` or `PARTY`. Party applies to all passengers.\nDefault `PER_PAX` application applies if not explicitly specified"
          },
          "combination": {
            "$ref": "#/definitions/commonCombination",
            "description": "Optional. Specifies how this allowance combines with others allowances in the container list\n - `AND` indicates that multiple allowances are applicable\n - `OR` indicates that any one allowance is applicable\nDefault `AND` applies if not explicitly specified."
          },
          "appBagTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Applicable baggage types - e.g. Laptop bag, briefcase etc."
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonDimension"
            },
            "description": "Required. Dimensions"
          }
        },
        "description": "Baggage dimension allowance with application information.",
        "required": [
          "dimensions"
        ]
      },
      "commonDimensionUnit": {
        "type": "string",
        "enum": [
          "DIMENSION_UNIT_UNSPECIFIED",
          "CM",
          "IN"
        ],
        "default": "DIMENSION_UNIT_UNSPECIFIED",
        "description": "Enumeration of units of measurement for dimension\n - DIMENSION_UNIT_UNSPECIFIED: Default unspecified\n - CM: Centimeter\n - IN: Inch"
      },
      "commonDiscount": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Optional. Owner providing this discount. This can be\n - IATA-defined 2-character code identifying an airline or GDS\n - an identifier like 'LHG' for Lufthansa Group\n - IATA number of travel agency\n - If not provided it is assumed that the owner is the offer/order responsible airline."
          },
          "code": {
            "type": "string",
            "description": "Optional. Discount code"
          },
          "name": {
            "type": "string",
            "description": "Optional. Discount name"
          },
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Discount amount"
          },
          "preDiscountedAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. The original price on which the discount was applied to."
          },
          "percent": {
            "type": "number",
            "format": "double",
            "description": "Optional. The percentage that was used to determine the Discount."
          }
        },
        "description": "Deduction from the price amount, made in advance of its payment.",
        "required": [
          "amount"
        ]
      },
      "commonEmailAddress": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/definitions/commonContactType",
            "description": "Optional. Type of contact. E.g. Home or Business or Agency Customer Support. Defaults to `TYPE_OTHER`"
          },
          "emailAddressText": {
            "type": "string",
            "description": "The email address which should be used for contact purposes."
          }
        },
        "description": "The email address which should be used for contact purposes."
      },
      "commonError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code corresponding to the processing error as defined by PADIS 9321."
          },
          "descTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Free text description of the provided error."
          },
          "tagText": {
            "type": "string",
            "description": "Identifies the tag/XPath which relates to the provided Error."
          }
        },
        "description": "Contains information related to errors detected during processing of the preceding request."
      },
      "commonFareCalculationInfo": {
        "type": "object",
        "properties": {
          "pricingCodeText": {
            "type": "string",
            "description": "Optional. Primary identifier reflecting the method of pricing for a transaction."
          },
          "addlInfoText": {
            "type": "string",
            "description": "Optional. The fare calculation text required in the fare calculation area of an electronic ticket."
          },
          "reportingCodeText": {
            "type": "string",
            "description": "Optional. Secondary identifier reflecting the method of pricing for a transaction used in the reporting process."
          }
        },
        "description": "Information related to the calculation of the Fare amount by applying various rules to determine a final fare for an airline ticket."
      },
      "commonFareComponent": {
        "type": "object",
        "properties": {
          "cabinCode": {
            "$ref": "#/definitions/commonCabinCode",
            "description": "Required. Type of cabin/compartment. E.g. Y (Economy),C (Business) etc.\nIf no value is received, then default `CABIN_UNSPECIFIED` applies"
          },
          "cabinName": {
            "type": "string",
            "description": "Optional. Name given to a cabin compartment (e.g. Business, First, Economy)."
          },
          "priceClassRefId": {
            "type": "string",
            "description": "Optional. Identifies price class (fare family) within the cabin"
          },
          "paxSegmentRefId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Reference to passenger segments that are covered by this fare component"
          },
          "fbc": {
            "type": "string",
            "description": "Optional. Fare basis code. Example: Y26"
          },
          "fareType": {
            "$ref": "#/definitions/commonFareTypeCode",
            "description": "Optional. Fare type codes. E.g. PUBL (Published), MR (Marine), PVT (Private) etc."
          },
          "rbd": {
            "type": "string",
            "description": "Optional. Reservation Booking Designator. A categorization used to facilitate access to inventory, application of filed fares,\nand to identify cabin entitlement."
          },
          "seatsLeft": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The number of seats remaining in this RBD. This will be available only of the supplier provides remaining\nseats counts."
          },
          "ticketDesigCode": {
            "type": "string",
            "description": "Optional. The Fare Basis Code Designator shall be placed within this element and removed from the Fare Basis Code element.\nFor example, if the Airline has a fare basis code with a designator like `JFBC/WO`, The `fbc` field will\ncontain `JFBC` and this field will contain `WO`."
          },
          "fareRule": {
            "$ref": "#/definitions/commonFareRule",
            "description": "Optional. Reference to a Penalty ID"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to augmentations. API consumers must relay all `Augmentation`s referred in the offer they select in\nsubsequent pricing call."
          }
        },
        "description": "A portion of an itinerary between two consecutive fare construction points. If the journey has only one fare component,\nthe points of origin and destination are the only fare construction points",
        "required": [
          "cabinCode",
          "paxSegmentRefId"
        ]
      },
      "commonFareDetail": {
        "type": "object",
        "properties": {
          "passengerRefs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Passengers associated with the specific Fare Detail instance. Allows the Price breakdown of the fare for the offeritem per passenger."
          },
          "farePriceTypeCode": {
            "$ref": "#/definitions/commonApplicableParty",
            "description": "Optional. Price application mode - e.g. PER_PAX\nDefault `PER_PAX` fare_price_type_code applies if not explicitly specified"
          },
          "price": {
            "$ref": "#/definitions/commonPrice",
            "description": "Required. Total price of all FareComponent prices. Price reflects a per-passenger price referenced within this FareDetail."
          },
          "fareWaivers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/v3commonFareWaiver"
            },
            "description": "Optional. Validating carrier-assigned fare rule modification or override information."
          },
          "fareComponents": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFareComponent"
            },
            "description": "Required. A portion of an itinerary between two consecutive fare construction points. If the journey has only one fare component,\nthe points of origin and destination are the only fare construction points"
          },
          "tourCode": {
            "type": "string",
            "description": "Optional. A tag on the fare used for accounting and backend processing E.g. Deal code"
          },
          "accountCode": {
            "type": "string",
            "description": "Optional. Corporate account ID E.g. CLID"
          },
          "fareCalculationInfo": {
            "$ref": "#/definitions/commonFareCalculationInfo",
            "description": "Optional.\nInformation related to the calculation of the Fare amount by applying various rules to determine a final fare for an airline ticket."
          },
          "penaltyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional.\nReference to Penalty IDs. In Reshop scenario the Fee charged by the carrier to make a change for one passenger will be provided in the Penalty referred here."
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to augmentations. API consumers must relay all `Augmentation`s referred in the offer they select in\nsubsequent pricing call."
          }
        },
        "description": "Fare Code Indicator to represent pricing method (IATA PADIS Code List for data element 5387 - Price Type Qualifier) •",
        "required": [
          "passengerRefs",
          "price",
          "fareComponents"
        ]
      },
      "commonFareRule": {
        "type": "object",
        "properties": {
          "penaltyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "commonFareTypeCode": {
        "type": "string",
        "enum": [
          "FARE_TYPE_UNSPECIFIED",
          "PUBL",
          "MR",
          "PVT",
          "IT",
          "ITD",
          "ITSD",
          "CF",
          "CB",
          "HR",
          "PA",
          "LBR",
          "STU",
          "VFR",
          "CRU"
        ],
        "default": "FARE_TYPE_UNSPECIFIED",
        "description": "Fare type codes\n - FARE_TYPE_UNSPECIFIED: Default unspecified\n - PUBL: Published Fare\n - MR: Marine Fare\n - PVT: Agency Private Fare\n - IT: Inclusive Tours Fare\n - ITD: Inclusive Tours Fare Deferred (BA specific)\n - ITSD: Inclusive Tours Fare Semi Deferred (BA specific)\n - CF: Corporate Fare\n - CB: Contract bulk\n - HR: Humanitarian\n - PA: Private adult\n - LBR: Labour fare\n - STU: Student fare\n - VFR: Visit Friends \u0026 Relatives\n - CRU: Cruise fare"
      },
      "commonFeatureCategory": {
        "type": "string",
        "enum": [
          "FEATURE_UNSPECIFIED",
          "AIRCRAFT",
          "BAGGAGE",
          "BAGGAGE_CARRYONALLOWANCE",
          "BAGGAGE_CHECKEDALLOWANCE",
          "BAGGAGE_PRIORITY",
          "CHAUFFEURSERVICE",
          "CHECKIN",
          "CHECKIN_PRIORITY",
          "CHGCXL_CHANGEWITHFEE",
          "CHGCXL_CHG",
          "CHGCXL_CXL",
          "CHGCXL_CXLWITHFEE",
          "CHGCXL_FREECHANGE",
          "DINING",
          "DINING_BEVERAGES",
          "DINING_GOURMET",
          "DINING_SNACKS",
          "LOUNGE",
          "LOUNGE_FREEACCESS",
          "LOYALTY",
          "LOYALTY_UPGRADE",
          "ONBOARDAMENITY",
          "ONBOARDAMENITY_IFE",
          "ONBOARDAMENITY_POWER",
          "ONBOARDAMENITY_WIFI",
          "PROMOTION",
          "PROMOTION_UPGRADE",
          "REASSURANCE_COVID19",
          "SEAT",
          "SEAT_FLATBED",
          "SEAT_FREESELECTION",
          "SEAT_LEGROOM",
          "SEAT_SKYCOUCH",
          "PENALTY",
          "RESIDUAL",
          "SPORTS_EQUIPMENT",
          "WHEELCHAIR",
          "CARBON_OFFSET",
          "OXYGEN",
          "BOOK_AND_HOLD",
          "VALUE_STORE"
        ],
        "default": "FEATURE_UNSPECIFIED",
        "description": "Enumeration of product or service feature categories\b - FEATURE_UNSPECIFIED: Default unknown category"
      },
      "commonFeatureDesc": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/definitions/commonFeatureCategory",
            "description": "Optional. Category of the feature - e.g. _LOUNGE_"
          },
          "descTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. An account or representation of the feature"
          },
          "mediaRefId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to media depicting the feature"
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. References to pax segments for which these features are applicable"
          }
        },
        "description": "Describes a product or service feature"
      },
      "commonFee": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Optional. Owner applying this fee. This can be\n - IATA-defined 2-character code identifying an airline or GDS\n - an identifier like 'LHG' for Lufthansa Group\n - IATA number of travel agency\n - If not provided it is assumed that the owner is the offer/order responsible airline."
          },
          "code": {
            "type": "string",
            "description": "Optional. Fee code"
          },
          "name": {
            "type": "string",
            "description": "Optional. Fee name"
          },
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Fee amount"
          },
          "percent": {
            "type": "number",
            "format": "double",
            "description": "Optional. Stores the percentage which was used to determine the Fee to be charged in conjunction or not with\n`min_amount` and `max_amount`"
          },
          "maxAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. Stores an Maximum fee amount which will be charged when a variable fee amount is effective."
          },
          "minAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. Stores an Minimum fee amount which will be charged when a variable fee amount is effective."
          },
          "approxInd": {
            "type": "boolean",
            "description": "Optional. When true, this fee is approximate."
          },
          "refundInd": {
            "type": "boolean",
            "description": "Optional. When true, fee amount is refundable."
          },
          "descText": {
            "type": "string",
            "description": "Optional. Fee/surcharge Description.  Example: U.S Customs User Fee"
          },
          "includedInBaseFare": {
            "type": "boolean",
            "description": "Optional. Indicates if fee/surcharge is included in base fare."
          }
        },
        "description": "Amount added on to a charge for a specific product, purpose, or service.",
        "required": [
          "amount"
        ]
      },
      "commonIndividual": {
        "type": "object",
        "properties": {
          "birthdate": {
            "type": "string",
            "description": "Optional. The date on which an individual was born.\nWill be in ISO-8601 format - `yyyy-MM-dd'. E.g. 2012-02-01"
          },
          "genderCode": {
            "$ref": "#/definitions/IndividualGenderCode",
            "description": "Optional. Gender of the individual (M, F, or X for unspecified)."
          },
          "titleName": {
            "type": "string",
            "description": "Optional. A word such as Mr., Mrs., Miss or Dr that is used before an individual's name to indicate the gender, profession or marital status."
          },
          "givenNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. A personal name given to the individual at birth and used before a family name. Also called first name. E.g. JOHN."
          },
          "middleNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Individual's middle name or initial.  E.g. G, GEORGE. Upto"
          },
          "surname": {
            "type": "string",
            "description": "Required. Individual's hereditary name(s) common to all members of a family. Also known as family name or last name. E.g. SMITH. Excludes any potential suffix."
          }
        },
        "description": "A single human being as distinct from a group, class, or family.",
        "required": [
          "surname"
        ]
      },
      "commonJourneyStageCode": {
        "type": "string",
        "enum": [
          "JOURNEY_STAGE_UNDEFINED",
          "AFTER_DEP_NO_SHOW",
          "PRIOR_TO_DEP",
          "AFTER_DEP",
          "SUBSEQUENT_NO_SHOW"
        ],
        "default": "JOURNEY_STAGE_UNDEFINED",
        "description": "Enumeration of stages of a passenger journey\n - AFTER_DEP_NO_SHOW: After departure No Show\n - PRIOR_TO_DEP: Prior to departure (PDE)\n - AFTER_DEP: After departure (ADE)\n - SUBSEQUENT_NO_SHOW: Subsequent No Show"
      },
      "commonLoyaltyProgram": {
        "type": "object",
        "properties": {
          "allianceCode": {
            "type": "string",
            "description": "Optional. Two or more airlines participating in a commercial relationship or joint venture, where a joint and commonly identifiable product is marketed under a single commercial name or brand."
          },
          "carrierCode": {
            "type": "string",
            "description": "Optional. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "programCode": {
            "type": "string",
            "description": "Optional. Loyalty Program ID: Example: OnBusiness"
          }
        },
        "description": "A rewards program offered by a company to customers who frequently make purchases, which may give a customer advanced access to new products, special sales coupons or free merchandise.\nAt least one of alliance_code or carrier_code or program_code must be set."
      },
      "commonLoyaltyProgramAccount": {
        "type": "object",
        "properties": {
          "loyaltyProgram": {
            "$ref": "#/definitions/commonLoyaltyProgram",
            "description": "Required. A rewards program offered by a company to customers who frequently make purchases, which may give a customer advanced access to new products, special sales coupons or free merchandise."
          },
          "accountNumber": {
            "type": "string",
            "description": "Required. Loyalty Program account number. Example: ABC123456"
          }
        },
        "description": "An account set up for a customer within a rewards program which holds funds on behalf of that customer.",
        "required": [
          "loyaltyProgram",
          "accountNumber"
        ]
      },
      "commonMarketingInfo": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "flightNumber": {
            "type": "string",
            "description": "Required. The numerical designation of a flight as it is marketed by a carrier."
          },
          "operationalSuffix": {
            "type": "string",
            "description": "Optional. Used to distinguish two flights having the same flight number and departing from their respective Origin Stations on the same date."
          },
          "rbdCode": {
            "type": "string",
            "description": "Optional. Code used to identify a particular RBD (e.g. P, J, W, M, etc.)."
          }
        },
        "description": "The commercial designation under which a Dated Operating Segment can be booked, either under the operating carrier's designator or that of another carrier (codeshare).",
        "required": [
          "carrierCode",
          "flightNumber"
        ]
      },
      "commonMarkup": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Value and sold-in currency added as part of the offer reported as calculation detail."
          },
          "typeCode": {
            "type": "string",
            "description": "Optional. Defines the reason for the markup added by an airline as part of the offer reported as calculation detail. (Examples: currency markup, service markup, etc)."
          }
        },
        "description": "Defines the reason for the markup added by an airline as part of the offer reported as calculation detail. The amount added to the cost price of goods to cover overhead and profit.",
        "required": [
          "amount"
        ]
      },
      "commonMedia": {
        "type": "object",
        "properties": {
          "descText": {
            "type": "string",
            "description": "Optional. Description of the referenced media."
          },
          "mediaLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonMediaLink"
            },
            "description": "Required. Links to media of different types and sizes"
          }
        },
        "description": "Electronic documents, images, and other files which accompany and support a product's description.",
        "required": [
          "mediaLinks"
        ]
      },
      "commonMediaLink": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Required. The Uniform Resource Locator that identifies the media and where the it is located.\nAPI consumers are expected to access the media content by following this URL"
          },
          "type": {
            "$ref": "#/definitions/commonMediaType",
            "description": "Optional. Media type\nIf not provided, default type is `IMAGE`"
          },
          "size": {
            "$ref": "#/definitions/commonMediaSize",
            "description": "Optional. Media size hint"
          }
        },
        "required": [
          "url"
        ]
      },
      "commonMediaSize": {
        "type": "string",
        "enum": [
          "MEDIA_SIZE_UNSPECIFIED",
          "SMALL",
          "MEDIUM",
          "LARGE",
          "X_LARGE"
        ],
        "default": "MEDIA_SIZE_UNSPECIFIED",
        "description": "Enumeration of media size\n - SMALL: Image- less than or equal to 150x150px\n - MEDIUM: Image-less than or equal to 350x350px\n - LARGE: Image-less than or equal to 600x600px\n - X_LARGE: Images larger than 600x600px"
      },
      "commonMediaType": {
        "type": "string",
        "enum": [
          "IMAGE",
          "DOC",
          "VIDEO"
        ],
        "default": "IMAGE",
        "description": "Enumeration of media types\n - IMAGE: Image\n - DOC: Document\n - VIDEO: Video"
      },
      "commonOfferAssociation": {
        "type": "object",
        "properties": {
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to an Offer for which this payment method applies."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. Identifier for the owner of this Offer and responsible for the delivery of the items.\nFor air content, this is the IATA-defined 2-character code of the carrier owning the offer."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which the offer was sourced.\nWhen not provided, default 'NDC' channel applies."
          },
          "offerItemRefId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to OfferItems within the Offer for which this payment method applies.\nIf empty, the payment method is applicable to all OfferItems in the Offer."
          }
        },
        "description": "Reference to Offer and optionally OfferItems for which this payment method applies.",
        "required": [
          "offerRefId",
          "ownerCode"
        ]
      },
      "commonOfferServiceDefinitionRef": {
        "type": "object",
        "properties": {
          "paxJourneyRefs": {
            "$ref": "#/definitions/commonPaxJourneyRefs",
            "description": "Required. Passenger journeys to which the services is associated\nOne of `pax_journey_refs` or `pax_segment_refs` or `leg_refs`"
          },
          "paxSegmentRefs": {
            "$ref": "#/definitions/commonPaxSegmentRefs",
            "description": "Required. Passenger segments to which the service is associated\nOne of `pax_journey_refs` or `pax_segment_refs` or `leg_refs`"
          },
          "legsRefs": {
            "$ref": "#/definitions/commonDatedOperatingLegsRefs",
            "description": "Required. Dated operating flight legs to which the service is associated\nOne of `pax_journey_refs` or `pax_segment_refs` or `legs_refs`"
          },
          "serviceDefRefId": {
            "type": "string",
            "description": "References a Service Definition within this message."
          }
        },
        "description": "Association of `ServiceDefinition` with a journey/OD, segment or leg in an offer or an order",
        "required": [
          "paxJourneyRefs",
          "paxSegmentRefs",
          "legsRefs"
        ]
      },
      "commonOperatingInfo": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "flightNumber": {
            "type": "string",
            "description": "Optional. The numerical designation of a flight as it is marketed by a carrier."
          },
          "operationalSuffix": {
            "type": "string",
            "description": "Optional. The numerical designation of a flight as it is marketed by a carrier."
          },
          "rbdCode": {
            "type": "string",
            "description": "Optional. Code used to identify a particular RBD (e.g. P, J, W, M, etc.)."
          }
        },
        "description": "Operating segment information.",
        "required": [
          "carrierCode"
        ]
      },
      "commonOrderAssociation": {
        "type": "object",
        "properties": {
          "orderRefId": {
            "type": "string",
            "description": "Reference to an Order for which this payment method applies."
          },
          "ownerCode": {
            "type": "string",
            "description": "Identifier for the owner of this Order responsible for the delivery of the items .\nFor air content, this is the IATA-defined 2-character code of the carrier owning the order."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nWhen not provided, default 'NDC' channel applies."
          },
          "orderItemRefId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to Order Item IDs within the Order for which this payment method applies.\nIf empty, the payment method is applicable to all OrderItems in the Order."
          }
        },
        "description": "Reference to Order and optionally OrderItems for which this payment method applies."
      },
      "commonParty": {
        "type": "object",
        "properties": {
          "corporation": {
            "$ref": "#/definitions/commonCorporation",
            "description": "Optional. Corporate party information."
          }
        },
        "description": "A party is an individual, a group, or a body having a role in the transaction. E.g. a corporation identified by a `corporate_id` is a party"
      },
      "commonPassengerTypeCode": {
        "type": "string",
        "enum": [
          "PTC_UNSPECIFIED",
          "ADT",
          "YADT",
          "CHD",
          "INF"
        ],
        "default": "PTC_UNSPECIFIED",
        "description": "Type of passengers.\n\n - ADT: Default Adult\n - YADT: Young Adult\n - CHD: Child\n - INF: Infant"
      },
      "commonPax": {
        "type": "object",
        "properties": {
          "ptc": {
            "$ref": "#/definitions/commonPassengerTypeCode",
            "description": "Optional. Type code applying to the Passenger which typically drives pricing (e.g. ADT, CHD, etc)."
          },
          "paxRefId": {
            "type": "string",
            "description": "Optional. Reference to a Passenger ID within this message, associating an infant on lap to this adult Passenger."
          },
          "individual": {
            "$ref": "#/definitions/commonIndividual",
            "description": "Optional. A single human being as distinct from a group, class, or family."
          },
          "loyaltyProgramAccounts": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonLoyaltyProgramAccount"
            },
            "description": "Optional. An account set up for a customer within a rewards program which holds funds on behalf of that customer."
          },
          "citizenshipCountryCode": {
            "type": "string",
            "description": "Optional. ISO Country Code (can be extended by bilateral agreement in case of exceptions, e.g. Kosovo). Examples: US, FR."
          },
          "contactInfoRefId": {
            "type": "string",
            "description": "Optional. Reference to contact info"
          }
        },
        "description": "Any person except members of the crew to be carried with the consent of the carrier, on board an aircraft.\nHolds the attributes specific to a one booking, from shopping to fulfillment."
      },
      "commonPaxJourney": {
        "type": "object",
        "properties": {
          "origin": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the origin city or airport code."
          },
          "dest": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the destination city or airport code."
          },
          "duration": {
            "type": "string",
            "description": "Optional. Total journey time in ISO 8601 format, including the combined air time and connection times."
          },
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. References to passenger segments involved in this journey."
          }
        },
        "description": "A collection of segments which satisfies transportation of passenger for a given origin and destination.",
        "required": [
          "origin",
          "dest",
          "paxSegmentRefIds"
        ]
      },
      "commonPaxJourneyRefs": {
        "type": "object",
        "properties": {
          "paxJourneyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "References to passenger journeys"
          }
        },
        "description": "Holds references to passenger journeys"
      },
      "commonPaxSegment": {
        "type": "object",
        "properties": {
          "secureFlightIndicator": {
            "type": "boolean",
            "description": "Optional. When TRUE, this segment is subject to US TSA 'Secure Flight' passenger prescreening program."
          },
          "dep": {
            "$ref": "#/definitions/commonStation",
            "description": "Required. Departure details of the segment."
          },
          "arrival": {
            "$ref": "#/definitions/commonStation",
            "description": "Required. Arrival details of the segment."
          },
          "aircraftType": {
            "type": "string",
            "description": "Optional. Code assigned to an aircraft type in IATA SSIM."
          },
          "duration": {
            "type": "string",
            "description": "Optional. Total segment time in ISO 8601 format, including the combined air time and connection times of any legs."
          },
          "legs": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonDatedLeg"
            },
            "description": "Optional. The operating legs that form this segment.\nThis will be set only for multi leg flights."
          },
          "marketingInfo": {
            "$ref": "#/definitions/commonMarketingInfo",
            "description": "Required. The commercial designation under which a Dated Operating Segment can be booked, either under the operating carrier's designator or that of another carrier (codeshare)."
          },
          "operatingInfo": {
            "$ref": "#/definitions/commonOperatingInfo",
            "description": "Optional. Operating segment information.\nThis will be set only if operating flight is different from marketing flight"
          }
        },
        "description": "Transportation of a passenger on a Dated Operating Segment.",
        "required": [
          "dep",
          "arrival",
          "marketingInfo"
        ]
      },
      "commonPaxSegmentRefs": {
        "type": "object",
        "properties": {
          "paxSegmentRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "References to passenger segments"
          }
        },
        "description": "Holds references to passenger segments."
      },
      "commonPayer": {
        "type": "object",
        "properties": {
          "paxRefId": {
            "type": "string",
            "description": "Reference ID of a pax in the same message.\nTo be used if payment is done using a personal card of a passenger\nOnly one of `pax_ref_id` or `individual_name` or `organisation_name` should be provided"
          },
          "individualName": {
            "$ref": "#/definitions/commonPayerIndividual",
            "description": "To be used if the payment is done using a personal card belonging to someone who is not a passenger\nOnly one of `pax_ref_id` or `individual_name` or `organisation_name` should be provided"
          },
          "organisationName": {
            "$ref": "#/definitions/commonPayerOrganisation",
            "description": "To be used if the payment is done using a corporate card\nOnly one of `pax_ref_id` or `individual_name` or `organisation_name` should be provided"
          },
          "payerEmailAddress": {
            "$ref": "#/definitions/commonEmailAddress",
            "description": "Optional. Email address of the payer"
          },
          "payerPhoneNumber": {
            "$ref": "#/definitions/commonPhone",
            "description": "Optional. Contact phone number of the payer"
          }
        },
        "description": "Information on the party committing to pay.\nApplicable to card payments."
      },
      "commonPayerIndividual": {
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "description": "Optional"
          },
          "middleName": {
            "type": "string",
            "description": "Optional"
          },
          "surname": {
            "type": "string",
            "description": "Required."
          },
          "titleName": {
            "type": "string",
            "description": "Optional"
          }
        },
        "description": "To be used if the payment is done using a personal card"
      },
      "commonPayerOrganisation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "description": "To be used if the payment is done using a corporate card"
      },
      "commonPaymentAssociatedFunctionCriteria": {
        "type": "object",
        "properties": {
          "offerAssociations": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonOfferAssociation"
            },
            "description": "Optional. Reference to an Offer and optionally OfferItems for which this payment method applies.\nIf empty, the payment method is applicable to all Offers in the Super Order"
          },
          "orderAssociations": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonOrderAssociation"
            },
            "description": "Optional. Reference to an Order and optionally OrderItems for which this payment method applies.\nIf empty, the payment method is applicable to the entire Order"
          },
          "paymentMethodCriteria": {
            "$ref": "#/definitions/commonPaymentMethodCriteria",
            "description": "Optional. Contains information relating to payer preference."
          }
        },
        "description": "Container of all payment relevant functions in the context of an order reprice/requote  request"
      },
      "commonPaymentCardTrxPaymentCard": {
        "type": "object",
        "properties": {
          "cardBrandCode": {
            "$ref": "#/definitions/PaymentCardTrxPaymentCardCreditCardVendorCode",
            "description": "Required. A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa"
          },
          "tokenizedCardId": {
            "type": "string",
            "description": "Identifies a tokenized card number in PCI Proxy.\nUsed when calls are routed through PCI Proxy."
          },
          "cardNumber": {
            "type": "string",
            "description": "The actual card number as indicated on the payment card.\nPassing actual card data in this field is strongly discouraged.\nTo be used in scenarios where PCI Proxy cannot be used."
          },
          "cardSecurityCode": {
            "type": "string",
            "description": "Optional. 3-digit number printed on the signature panel on the back of the card\nand following the last four digits of the Primary Account Number (PAN).\nFor American Express, 4 digits located on the front of the card,\nabove the card number on the right hand side.\nVisa - CVV2, MasterCard - CVC2, American Express - CID,\nDiscover - CMID, Union Pay - CVN2, JCB - CAV2."
          },
          "cardHolderName": {
            "type": "string",
            "description": "Optional. Name of credit card holder. Example: JOHN SMITH"
          },
          "cardholderAddress": {
            "$ref": "#/definitions/commonPostalAddress",
            "description": "Optional. Address of card holder"
          },
          "effectiveDate": {
            "type": "string",
            "description": "Optional. Payment Card Effective Date in mmyy format. Example: 0116"
          },
          "expirationDate": {
            "type": "string",
            "description": "Optional. The last month of validity in mmyy format. Example: 0123"
          },
          "verificationInd": {
            "type": "boolean",
            "description": "Optional. When 'true', this payment requires additional authentication.\nShould not set (i.e. should be `false`) for MOTO transactions\nPlease refer https://guides.developer.iata.org/docs/secure-customer-authentication scenario C.\nSpecifically\n\u003e Booking Agents should not request exemptions at the authentication stage of transactions for which they\n\u003e are not collecting the funds unless they have a specific agreement with the travel supplier (the merchant)\n\u003e and its acquirer to do so. This is essential as the use of exemptions is the prerogative of the merchant’s acquirer,\n\u003e not that of an Agent. The secure corporate payment exemption can generally be used when the booking is initiated\n\u003e from a dedicated corporate processes which is not available to consumers and which is considered secure.\n\u003e Typically only Travel Management Companies (TMC’s) will be permitted to use this exemption."
          },
          "cardProductTypeCode": {
            "$ref": "#/definitions/PaymentCardTrxPaymentCardCardProductTypeCode",
            "description": "Optional. Represents card product type.\nDefault value : Unknown card type\nP-personal or C-Commercial"
          },
          "securePaymentVersion2": {
            "$ref": "#/definitions/commonSecurePaymentVersion2",
            "description": "Optional. Contains all information for the result of 3D-Secure authentication process.\nApplicable to 3DS v2.0 and higher."
          }
        },
        "description": "Payment card transaction details.\nPlease refer https://guides.developer.iata.org/docs/secure-customer-authentication\nNote that calls must be routed through a PCI Proxy when payment card details are involved.\nPlease ask your Verteil contact for details of PCI Proxy endpoint"
      },
      "commonPaymentFunctionChange": {
        "type": "object",
        "properties": {
          "offerAssociation": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonOfferAssociation"
            },
            "description": "Optional. Reference to an Offer and optionally OfferItems for which this payment method applies.\nIf empty, the payment method is applicable to all Offers in the Super Order"
          },
          "paymentProcessingDetails": {
            "$ref": "#/definitions/commonPaymentProcessingDetails",
            "description": "Required. Form of payment details including the amount."
          }
        },
        "description": "Container of all payment relevant functions in the context of an order change transaction",
        "required": [
          "paymentProcessingDetails"
        ]
      },
      "commonPaymentFunctionOffer": {
        "type": "object",
        "properties": {
          "offerAssociations": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonOfferAssociation"
            },
            "description": "Optional. Reference to an Offer and optionally OfferItems for which this payment method applies.\nIf empty, the payment method is applicable to all Offers in the Super Order"
          },
          "orderAssociations": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonOrderAssociation"
            },
            "description": "Optional. Reference to an Order and optionally OrderItems for which this payment method applies.\nIf empty, the payment method is applicable to the entire Order"
          },
          "paymentSupportedMethod": {
            "$ref": "#/definitions/commonPaymentSupportedMethod",
            "description": "Contains information relating to payment method acceptance."
          }
        },
        "description": "Container of all payment relevant functions in the context of an order reshop response"
      },
      "commonPaymentMethod": {
        "type": "object",
        "properties": {
          "paymentCard": {
            "$ref": "#/definitions/commonPaymentCardTrxPaymentCard",
            "description": "Card payment details"
          }
        },
        "description": "Form of payment details.\nChoice of:\n- payment_card\n\\\nOther options (e.g. LoyaltyRedemption) will be added in future"
      },
      "commonPaymentMethodCriteria": {
        "type": "object",
        "properties": {
          "paymentTypeCode": {
            "$ref": "#/definitions/commonPaymentTypeCode",
            "description": "Required. Identifies the form of payment."
          },
          "paymentBrandCode": {
            "$ref": "#/definitions/PaymentCardTrxPaymentCardCreditCardVendorCode",
            "description": "Optional. A Payment Brand code assigned according to ATS Codeset PAYB. Example VI for Visa"
          },
          "cardProductTypeCode": {
            "$ref": "#/definitions/PaymentCardTrxPaymentCardCardProductTypeCode",
            "description": "Optional. Represents card product type.\nP-personal or C-Commercial"
          },
          "issuerIdentificationNumber": {
            "type": "string",
            "description": "Optional. Leading eight digits of the card number defining issuer identification number (IIN) or bank identification number (BIN)"
          }
        },
        "description": "Contains information relating to payer preference.",
        "required": [
          "paymentTypeCode"
        ]
      },
      "commonPaymentProcessingDetails": {
        "type": "object",
        "properties": {
          "typeCode": {
            "$ref": "#/definitions/commonPaymentTypeCode",
            "description": "Required. Identifies the form of payment."
          },
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. The amount applied to the associated payment method. Example: 300 USD"
          },
          "payer": {
            "$ref": "#/definitions/commonPayer",
            "description": "Optional. Party committing to pay.\nRequired for card payments."
          },
          "paymentMethod": {
            "$ref": "#/definitions/commonPaymentMethod",
            "description": "Optional. Transactional information specific to the payment method other than the amount. E.g. Credit Card details."
          },
          "paymentSurchargeAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional.\nAmount added to the final Offer/Order price like a payment processing charge, depending on which payment method is used by the payer."
          },
          "paymentRefId": {
            "type": "string",
            "description": "Optional.\nThe id reference of the already authorized form of payment.\nIf creating the order after payment authorization it is a way of linking an order to an existing payment reference.\nfor eg:- If the payment is done via IFG, this holds the value of the ifg track id."
          }
        },
        "description": "Form of payment details including the amount."
      },
      "commonPaymentSupportedMethod": {
        "type": "object",
        "properties": {
          "paymentSurcharge": {
            "$ref": "#/definitions/commonPaymentSurcharge",
            "description": "Optional. Information about surcharges for payment methods."
          },
          "paymentTypeCode": {
            "$ref": "#/definitions/commonPaymentTypeCode",
            "description": "Required. Identifies the form of payment."
          }
        },
        "description": "Contains information relating to payment method acceptance.",
        "required": [
          "paymentTypeCode"
        ]
      },
      "commonPaymentSurcharge": {
        "type": "object",
        "properties": {
          "preciseAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Maximum fee or charges for a payment method"
          }
        },
        "description": "Information about surcharges for payment methods. E.g. Credit card payment fee charged by an airline.",
        "required": [
          "preciseAmount"
        ]
      },
      "commonPaymentTypeCode": {
        "type": "string",
        "enum": [
          "PAYMENT_TYPE_UNDEFINED",
          "CA",
          "CC",
          "AC",
          "APP_PSP",
          "PAY_BY_LINK",
          "AIRLINE_INVOICE",
          "AG",
          "WL",
          "MS",
          "EP"
        ],
        "default": "PAYMENT_TYPE_UNDEFINED",
        "description": "Enumeration of form of payment codes.\n\n - CA: Cash\n - CC: Credit Card\n - AC: Agency Credit\n - APP_PSP: External Payment Service Provider\n - PAY_BY_LINK: Inbound form of payment when payment is done through a link to customer.\n - AIRLINE_INVOICE: Airline Invoice\n - AG: Airline Agency Pay\n - WL: Verteil Wallet\n - MS: Miscellaneous\n - EP: Easy Pay"
      },
      "commonPenalty": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/commonPenaltyType",
            "description": "Required. Penalty type - Change, Cancel etc."
          },
          "descTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Description of the applicable penalty."
          },
          "feeInd": {
            "type": "boolean",
            "description": "Optional. When TRUE, fee(s) may apply based on PenaltyType"
          },
          "netInd": {
            "type": "boolean",
            "description": "Optional. For each penalty involved in a voluntary servicing action, the airline should inform the seller if the penalty is\nnetted (i.e. taken from any amount that the Airline will owe to the customer consequently to the servicing) or\nto be paid (i.e. charged to the customer upfront any servicing action, and even if customer benefits from a subsequent refund/ residual value)."
          },
          "penaltyPrice": {
            "$ref": "#/definitions/commonPrice",
            "description": "Either Penalty price information or Restrictions with fee details"
          },
          "penaltyRestrictions": {
            "$ref": "#/definitions/commonRestrictions",
            "description": "Either Penalty price information or Restrictions with fee details. A set of qualifying conditions/rules/restriction that are related to a Cancellation/Change/modification action."
          }
        },
        "description": "Information relating to Rules conditions of a offer/order contract (E.g. Change rule, Cancel rule etc.) or penalty imposed as per contract (E.g. Change Fee, Cancellation Fee etc.).",
        "required": [
          "type",
          "penaltyPrice",
          "penaltyRestrictions"
        ]
      },
      "commonPenaltyType": {
        "type": "string",
        "enum": [
          "OTHERS",
          "CHANGE",
          "CANCEL",
          "NO_SHOW",
          "UPGRADE"
        ],
        "default": "OTHERS",
        "description": "Enumeration of penalty types\n - OTHERS: Any other type of penalties apart from the specified ones\n - CHANGE: Change penalty\n - CANCEL: Cancellation penalty\n - NO_SHOW: No show penalty\n - UPGRADE: Upgrade penalty"
      },
      "commonPhone": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/definitions/commonContactType",
            "description": "Optional. Type of contact. E.g. Home or Business or Agency Customer Support. Defaults to `TYPE_OTHER`"
          },
          "countryDialingCode": {
            "type": "string",
            "description": "Required. Numeric telephone dialing prefixes for the member countries of the International Telecommunication Union (ITU)."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Required. Phone number text. 999-999-9999."
          },
          "extensionNumber": {
            "type": "string",
            "description": "Optional. Phone extension number.  Example: 1234"
          }
        },
        "description": "Telephone number details"
      },
      "commonPieceAllowance": {
        "type": "object",
        "properties": {
          "appParty": {
            "$ref": "#/definitions/commonApplicableParty",
            "description": "Optional. Baggage weight restriction application. E.g. `PER_PAX` or `PARTY`. Party applies to all passengers.\nDefault `PER_PAX` application applies if not explicitly specified"
          },
          "combination": {
            "$ref": "#/definitions/commonCombination",
            "description": "Optional. Specifies how this allowance combines with others allowances in the container list\n - `AND` indicates that multiple allowances are applicable\n - `OR` indicates that any one allowance is applicable\nDefault `AND` applies if not explicitly specified."
          },
          "appBagTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Applicable baggage types - e.g. Laptop bag, briefcase etc."
          },
          "zeroBagInd": {
            "type": "boolean",
            "description": "Required."
          },
          "totalQty": {
            "type": "integer",
            "format": "int32",
            "description": "Required."
          },
          "pieceWeightAllowances": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonWeightAllowance"
            },
            "description": "Optional. Baggage weight restrictions applicable to this piece allowance."
          },
          "pieceDimensionAllowances": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonDimensionAllowance"
            },
            "description": "Optional. Baggage dimension restrictions applicable to this piece allowance."
          }
        },
        "description": "Defines the maximum number of each allowable baggage type along with applicable weight and dimension restrictions.",
        "required": [
          "zeroBagInd",
          "totalQty"
        ]
      },
      "commonPostalAddress": {
        "type": "object",
        "properties": {
          "contactType": {
            "$ref": "#/definitions/commonContactType",
            "description": "Optional. Type of contact. E.g. Home or Business or Agency Customer Support. Defaults to `TYPE_OTHER`"
          },
          "streetTexts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Street name and number. Examples: Main Street, 100 Main Street"
          },
          "cityName": {
            "type": "string",
            "description": "Required. The name, expressed as text, of the city, town or village."
          },
          "postalCode": {
            "type": "string",
            "description": "Required. Postal code. Examples: 11001, 11001-2345"
          },
          "countryName": {
            "type": "string",
            "description": "Required. The name, expressed as text, of the country."
          },
          "countryCode": {
            "type": "string",
            "description": "ISO Country Code (can be extended by bilateral agreement in case of exceptions, e.g. Kosovo). Examples: US, FR."
          },
          "countrySubDivisionName": {
            "type": "string",
            "description": "Optional. The name, expressed as text, of the sub-division of a country. E.g. California."
          }
        },
        "description": "Natural or physical address used for postal service. May be a building address, airport address, etc."
      },
      "commonPrice": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Total monetary price amount, including all tax, surcharge, and fee amounts."
          },
          "baseAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. Base Amount excluding taxes, fees, and surcharges.  Example: 200000"
          },
          "taxSummaries": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonTaxSummary"
            },
            "description": "Optional. A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added to the cost of some goods, services, and transactions.\nIf TaxSummary is not provided in the response, tax would be 0 for the fare under scope."
          },
          "surcharges": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonSurcharge"
            },
            "description": "Optional. Surcharge details."
          },
          "fees": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFee"
            },
            "description": "Optional. Amount added on to a charge for a specific product, purpose, or service."
          },
          "discounts": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonDiscount"
            },
            "description": "Optional. Deductions from the price amount, made in advance of its payment."
          },
          "markups": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonMarkup"
            },
            "description": "Optional. The amount added to the cost price of goods to cover overhead and profit."
          },
          "commissions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonCommission"
            },
            "description": "Optional. The commission amount information."
          },
          "curConversions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonCurConversion"
            },
            "description": "Optional. The currency conversion information."
          },
          "dueByAirlineAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Optional. The Amount held by the Airline"
          }
        },
        "description": "The amount of money expected, required, or given in payment for something.",
        "required": [
          "totalAmount"
        ]
      },
      "commonPriceClass": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. Price class name. Example: _SUPERSAVER_"
          },
          "cabinCode": {
            "$ref": "#/definitions/commonCabinCode",
            "description": "Optional. Cabin offering this price class"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. An ordinal number of this price class that may be used to order price classes in cabin.\nPrice classes offering more features and consequently having higher fares typically get higher ordinal value"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFeatureDesc"
            },
            "description": "Optional. Features of this price class - e.g. _Lounge Access_."
          }
        },
        "description": "A price point within a particular Cabin Type (sometimes referred to as 'Fare Families').",
        "required": [
          "name"
        ]
      },
      "commonRemark": {
        "type": "object",
        "properties": {
          "remarkType": {
            "$ref": "#/definitions/RemarkRemarkType",
            "description": "Optional. The type of remark - public vs internal\nIf not specified, defaults to PUBLIC"
          },
          "remarkText": {
            "type": "string",
            "description": "Required. Supplementary information text"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Output Only. Remark creation timestamp.",
            "readOnly": true
          },
          "agentId": {
            "type": "string",
            "description": "Optional.\nThe agent who has updated/added the remark."
          }
        },
        "description": "Supplementary information which will not be processed by the system.",
        "required": [
          "remarkText"
        ]
      },
      "commonRestriction": {
        "type": "object",
        "properties": {
          "journeyStageCode": {
            "$ref": "#/definitions/commonJourneyStageCode",
            "description": "Required. Applicable stage of journey."
          },
          "effectiveTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The effective date used in conjunction with the Expiration date to qualify the applicability of this condition"
          },
          "expirationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The Expiration date used in conjunction with the Effective date to qualify the applicability of this condition"
          },
          "fee": {
            "$ref": "#/definitions/commonChangeOrCancelFee",
            "description": "Required. Amount added on to a charge for changes to an already reserved product, purpose, or service."
          }
        },
        "required": [
          "journeyStageCode",
          "fee"
        ]
      },
      "commonRestrictions": {
        "type": "object",
        "properties": {
          "modificationAllowedInd": {
            "type": "boolean",
            "description": "Optional. Indicates whether modification is allowed.\nIf this is set to FALSE then the condition further identified by the other attributes indicates that no Change is allowed."
          },
          "changeTypeCode": {
            "$ref": "#/definitions/RestrictionsChangeTypeCode",
            "description": "Required. The type of change that applies to the condition. E.g. NAME, FLIGHT"
          },
          "descText": {
            "type": "string",
            "description": "Optional. Describes what this restriction is. E.g.\n * Change allowed within dates(1) specified with associated fee.\n * Change allowed within dates(2) specified with associated fee.\n * No change allowed\n * No change allowed"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonRestriction"
            },
            "description": "Required. A set of rules with fees applicable for the restriction"
          }
        },
        "description": "A set of qualifying conditions/rules/restriction that are related to a constrained priced grouping of\nservices for a Cancellation/Change/modification action.",
        "required": [
          "changeTypeCode",
          "restrictions"
        ]
      },
      "commonSeat": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "integer",
            "format": "int64",
            "description": "Ordinal number identifying a seat row on a transport vehicle"
          },
          "columnId": {
            "type": "string",
            "description": "Alphabetic character identifying a seat within a row."
          },
          "seatProfileRefId": {
            "type": "string",
            "description": "Optional. Reference to a Seat Profile ID within this message."
          }
        },
        "description": "A sitting place for a passenger or crew in a cabin compartment on a transport vehicle."
      },
      "commonSeatAssignment": {
        "type": "object",
        "properties": {
          "segmentLegs": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonDatedOperatingLegsRef"
            },
            "description": "References to dated operating flight legs possibly belonging to different passenger segments"
          },
          "seat": {
            "$ref": "#/definitions/commonSeat",
            "description": "A sitting place for a passenger or crew in a cabin compartment on a transport vehicle."
          },
          "serviceDefRefId": {
            "type": "string",
            "description": "Optional. References a Service Definition within this message."
          }
        },
        "description": "The Seat Location selected by the Passenger (via SeatAvailability)\nor assigned to the Passenger by the Airline for a given segment.\nWhen used, only a single Passenger must be referenced within the Service."
      },
      "commonSeatProfile": {
        "type": "object",
        "properties": {
          "seatProfileId": {
            "type": "string",
            "description": "Required. Unique identifier associated to this Seat Profile."
          },
          "seatCharCodes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SeatProfileSeatCharacteristicCode"
            },
            "description": "Optional. Characteristic of an aircraft seat e.g. A (Aisle seat), E (Exit and emergency exit) etc."
          },
          "marketingInfo": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFeatureDesc"
            },
            "description": "Optional. Describes the seat characteristics"
          }
        },
        "description": "Airline defined group of seats sharing common characteristics.",
        "required": [
          "seatProfileId"
        ]
      },
      "commonSecurePaymentVersion2": {
        "type": "object",
        "properties": {
          "authenticationMerchantName": {
            "type": "string",
            "description": "Optional. Name of the merchant"
          },
          "authenticationTokenValue": {
            "type": "string",
            "description": "Optional. Authentication value of a Token"
          },
          "authenticationValue": {
            "type": "string",
            "description": "Optional. Authentication value"
          },
          "cardNumberCollectionCode": {
            "$ref": "#/definitions/SecurePaymentVersion2CardNumberCollectionCode",
            "description": "Optional. Indicates the collection method of the card number.\nThis will be newly entered or using previously saved information."
          },
          "directoryServerTrxId": {
            "type": "string",
            "description": "Optional. DS (Directory Server) transaction ID"
          },
          "electronicCommerceInd": {
            "type": "string",
            "description": "Optional. ECI (electronic commerce indicator)"
          },
          "payerAuthenticationExemptionCode": {
            "$ref": "#/definitions/SecurePaymentVersion2PayerAuthenticationExemptionCode",
            "description": "Optional. Used to identify an exemption to performing payer authentication.\nDefault value : ND (None defined)"
          },
          "payerAuthenticationFailureToCompleteCode": {
            "$ref": "#/definitions/SecurePaymentVersion2PayerAuthenticationFailureToCompleteCode",
            "description": "Optional. Used to identify possible pre defined reasons for failure to complete payer authentication."
          },
          "paymentTrxChannelCode": {
            "$ref": "#/definitions/SecurePaymentVersion2PaymentTrxChannelCode",
            "description": "Optional. Indicates the payment transaction channel\nDefault value : NS (Not specified)"
          },
          "programProtocolText": {
            "type": "string",
            "description": "Optional. Program Protocol"
          },
          "trxStatusText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Outcome of authentication"
          },
          "trxStatusReasonText": {
            "type": "string",
            "description": "Optional. Reason for transaction status"
          }
        },
        "description": "Contains all information for the result of 3D-Secure authentication process.\nApplicable to 3DS v2.0 and higher."
      },
      "commonServiceBundle": {
        "type": "object",
        "properties": {
          "maxServiceQty": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The maximum number of service definitions that may be selected from those in the bundle.\nThe default is no limit."
          },
          "serviceDefRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. References to services included in the bundle"
          }
        },
        "description": "A set of services offered for sale as a single service.",
        "required": [
          "serviceDefRefIds"
        ]
      },
      "commonServiceDefinition": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Optional. IATA-defined 2-character code of the carrier owning the service"
          },
          "name": {
            "type": "string",
            "description": "Required. Service name. Example: _Lounge Pass_"
          },
          "rfic": {
            "$ref": "#/definitions/ServiceEnumsRFIC",
            "description": "Optional. Service category. Roughly corresponds to IATA Reason For Issuance Code (RFIC)."
          },
          "rficSubCode": {
            "type": "string",
            "description": "Optional. Service sub categories. Roughly corresponds to Reason For Issuance Sub Code. Examples: 0CC (First Checked Bag) 0B1 (In-flight Entertainment) 0BX (Lounge)"
          },
          "ssrCode": {
            "type": "string",
            "description": "Optional. Airline specific service code which can be associated with the Reason for Issuance Sub Code. Sample implementer encoding: XLEG for Extra Leg Room Seat XBAG for Extra Bag"
          },
          "serviceDefAssociation": {
            "$ref": "#/definitions/commonServiceDefinitionAssociation",
            "description": "Optional. Service Definition Association Choice to determine if the information of this ServiceDefinition needs to be extended\nwith specific Bag or Seat characteristics or whether the ServiceDefinition is used as a bundle of further\nServiceDefinitions."
          },
          "desc": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFeatureDesc"
            },
            "description": "Optional. A representation of major characteristics or features of the service."
          },
          "depositTltTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The date by which a deposit must be paid for the service Examples: 2015-01-13T13:59:38Z"
          },
          "nameTltTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time by which an Order must be completed with individual passenger names"
          }
        },
        "description": "Description and characteristics of a non-flight product or service that can be separately sold and delivered. E.g. bag, seat, meal on a flight.",
        "required": [
          "name"
        ]
      },
      "commonServiceDefinitionAssociation": {
        "type": "object",
        "properties": {
          "baggageAllowanceRefId": {
            "type": "string",
            "description": "Required. Reference to a Baggage Allowance\nEither `baggage_allowance_ref_id` or `service_bundle` is set"
          },
          "serviceBundle": {
            "$ref": "#/definitions/commonServiceBundle",
            "description": "Required. A set of services offered for sale as a single service.\nEither `baggage_allowance_ref_id` or `service_bundle` is set"
          }
        },
        "description": "Service Definition Association Choice to determine if the information of this ServiceDefinition needs to be extended\nwith specific Bag or Seat characteristics or whether the ServiceDefinition is used as a bundle of further\nServiceDefinitions.",
        "required": [
          "baggageAllowanceRefId",
          "serviceBundle"
        ]
      },
      "commonStation": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string",
            "description": "Required. IATA 3-letter code specifying the city or airport code"
          },
          "terminalName": {
            "type": "string",
            "description": "Optional. The name of the terminal."
          },
          "schedDateTime": {
            "type": "string",
            "description": "Required. The Scheduled Date and Time of arrival of the aircraft at the terminal or the departure from gate.\nWill be in ISO-8601 format - `yyyy-MM-dd'T'HH:mm`. E.g. `2021-12-03T10:15`"
          },
          "aircraftType": {
            "type": "string",
            "description": "Optional. Code assigned to an aircraft type in IATA SSIM."
          }
        },
        "description": "Defines a transport point or station.",
        "required": [
          "stationCode",
          "schedDateTime"
        ]
      },
      "commonSurcharge": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Total of all surcharge amounts."
          },
          "breakdown": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFee"
            },
            "description": "Optional. Individual surcharges applied."
          }
        },
        "description": "Amount added on to a usual charge for a specific product, purpose, or service.",
        "required": [
          "totalAmount"
        ]
      },
      "commonTax": {
        "type": "object",
        "properties": {
          "taxCode": {
            "type": "string",
            "description": "Optional. Tax Code. Example: AY, GB"
          },
          "amount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Amount. Example: 15000 USD"
          },
          "descText": {
            "type": "string",
            "description": "Optional. Tax short description. Example: $4 per flight segment, per passenger (U.S. domestic segment tax)"
          },
          "refundInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax amount is refundable."
          },
          "qualifierCode": {
            "type": "string",
            "description": "Optional. Used to specify if current, paid, additional taxes Refer to IATA PADIS Code list data element 5305"
          },
          "collectionInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax amount must be collected"
          }
        },
        "description": "A compulsory contribution to state revenue, levied by the government on workers' income and business profits or added\nto the cost of some goods, services, and transactions.",
        "required": [
          "amount"
        ]
      },
      "commonTaxSummary": {
        "type": "object",
        "properties": {
          "totalTaxAmount": {
            "$ref": "#/definitions/typeMoney",
            "description": "Required. Total of all applicable tax amounts included in the price.  If tax breakdowns are provided, this amount should match the sum of the tax breakdown amounts."
          },
          "allRefundableInd": {
            "type": "boolean",
            "description": "Optional. When true, all tax breakdown amounts are refundable."
          },
          "approximateInd": {
            "type": "boolean",
            "description": "Optional. When true, this tax is approximate."
          },
          "collectionInd": {
            "type": "boolean",
            "description": "Optional. When true, all specified tax breakdowns must be collected."
          },
          "breakdown": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonTax"
            },
            "description": "Optional. Individual tax breakdown. This will not be provided during shopping but will be available from subsequent pricing response onwards."
          }
        },
        "description": "Tax summary information, including total tax amount and optional tax breakdown",
        "required": [
          "totalTaxAmount"
        ]
      },
      "commonWarning": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "A code corresponding to the processing warning that can be handled by API consumer.\nPossible warnings codes that can be returned will be documented against each service"
          },
          "message": {
            "type": "string",
            "description": "Free text description of the provided warning."
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/protobufAny"
            },
            "description": "Optional. Any type object providing further details about the warning."
          }
        },
        "description": "Contains information related to potential business errors/warnings detected during\nprocessing of the preceding request."
      },
      "commonWeightAllowance": {
        "type": "object",
        "properties": {
          "appParty": {
            "$ref": "#/definitions/commonApplicableParty",
            "description": "Optional. Baggage weight restriction application. E.g. `PER_PAX` or `PARTY`. Party applies to all passengers.\nDefault `PER_PAX` application applies if not explicitly specified"
          },
          "combination": {
            "$ref": "#/definitions/commonCombination",
            "description": "Optional. Specifies how this allowance combines with others weight allowances in the container list.\n - `AND` indicates that multiple allowances are applicable\n - `OR` indicates that any one allowance is applicable\nDefault `AND` applies if not explicitly specified."
          },
          "appBagTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Applicable baggage types - e.g. Laptop bag, briefcase etc."
          },
          "unit": {
            "$ref": "#/definitions/commonWeightUnit",
            "description": "Required. Weight unit of measurement - e.g. KG"
          },
          "maxWeight": {
            "type": "number",
            "format": "float",
            "description": "Required. Maximum weight value - e.g. 30.0"
          }
        },
        "description": "Baggage weight allowance with application information.",
        "required": [
          "unit",
          "maxWeight"
        ]
      },
      "commonWeightUnit": {
        "type": "string",
        "enum": [
          "WEIGHT_UNIT_UNSPECIFIED",
          "KG",
          "LB"
        ],
        "default": "WEIGHT_UNIT_UNSPECIFIED",
        "description": "Enumeration of units of measurement for weight\n - WEIGHT_UNIT_UNSPECIFIED: Default unspecified\n - KG: Kilogram\n - LB: Pound"
      },
      "offerAddOfferItem": {
        "type": "object",
        "properties": {
          "flightRequest": {
            "$ref": "#/definitions/offerFlightRequest",
            "description": "Required. Choice of Origin Destination or Journey flight information for this shopping request."
          },
          "shoppingCriteria": {
            "$ref": "#/definitions/offerShoppingCriteria",
            "description": "Optional. Further qualifies the flight request by influencing which results are returned in the shopping response,\nincluding preferred or required criteria."
          },
          "responseControls": {
            "$ref": "#/definitions/offerResponseControls",
            "description": "Optional. Guidance on how the response should be returned - sorting, maximum number of results etc."
          }
        },
        "required": [
          "flightRequest"
        ]
      },
      "offerAddedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Required. Unique identifier for this OfferItem instance. Must be unique within XML message."
          },
          "reshopPriceAndFareDetails": {
            "$ref": "#/definitions/offerReshopPriceAndFareDetails",
            "description": "Required. For each offer item, `reshop_price_and_fare_details` allows carrier to inform the seller about the price and fare details\nassociated with this offer item.\n\\\nCarriers can provide this information in two ways\n1- New Offer: Price of the new offer re-shopped by the user.\n2- Differential Offer: Difference between the existing order and new offer re-shopped by the user."
          },
          "offeredServices": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerOfferedService"
            },
            "description": "Required. Offered Service is the instance of a specific flight or Service Definition as it has been offered (and eventually ordered and consumed)\nin the context of a specific Offer and/or Order."
          }
        },
        "description": "A priced grouping of one or more services within an Added Offer.",
        "required": [
          "offerItemId",
          "reshopPriceAndFareDetails",
          "offeredServices"
        ]
      },
      "offerAffectedOrderItemRequest": {
        "type": "object",
        "properties": {
          "orderItemRefId": {
            "type": "string",
            "description": "Required. Reference to the Order Item requested for deletion."
          },
          "retainServiceRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to the Service within the specified Order Item which the Passenger would like the Airline to retain and\nreturn within the proposed Offer Item(s) in the OrderReshopRS."
          }
        },
        "description": "Contains affected existing order items and related services that will be impacted by any new offers in the message.\nThe primary use case is when an existing order item is to be deleted or partial deletion either with a replacement\nin a new offer or an offer to be used for the deletion.",
        "required": [
          "orderItemRefId"
        ]
      },
      "offerBaggageAllowanceSpec": {
        "type": "object",
        "properties": {
          "paxJourneyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. References to pax journeys where the allowance apply"
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. References to passengers for whom the allowance apply"
          },
          "baggageAllowanceRefId": {
            "type": "string",
            "description": "Required. Reference to applicable baggage allowance"
          }
        },
        "description": "Specification of baggage allowances eligible for a set of passengers on a set of pax journeys.",
        "required": [
          "paxJourneyRefIds",
          "paxRefIds",
          "baggageAllowanceRefId"
        ]
      },
      "offerChangedOffer": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Required. Uniquely Identifies an Offer within the context of one message."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "addOfferItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerAddedOfferItem"
            },
            "description": "Required. Offers presented in response to a reshop query with Add or Replace function.\nIf original query also specified items for deletion, the suggested OfferItems here could be meant to replace the\nOrderItems specified in the request's Delete function.\n\\\nPrice and FareDetails can be presented either in the “Differential” or \"New\" structure based on airline behaviour."
          },
          "offerExpirationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Required. The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z\nUpon expiry, the expectation is that the offer is no longer retrievable and the shopping process must begin again.\nNote the presence of an Offer Time Limit does not indicate either a guarantee of price or inventory against a given\nOffer item within the Offer. Should the offer time limit expire, any other time limit also expires unless an Order\nhas been created or changed.\nWhen an offer does not have an expiry the time limit will value will be 9999-12-31T23:59:59Z"
          },
          "paymentTimeLimitDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format by which a commitment to pay must be made for the confirmed items in the offer. Examples: 2015-01-13T13:59:38Z"
          },
          "priceGuaranteeTimeLimitDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format after which the offer price is no longer guaranteed. Examples: 2015-01-13T13:59:38Z"
          },
          "commissions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonCommission"
            },
            "description": "Optional. Commissions applicable on the offer."
          },
          "totalPrice": {
            "$ref": "#/definitions/commonPrice",
            "description": "Required. The amount of money expected, required, or given in payment for something."
          },
          "journeyOverviews": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerJourneyPriceClass"
            },
            "description": "Required. Price class information per Journey. The order of the array will be the order of the flights in the itinerary"
          },
          "baggageAllowanceSpecs": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerBaggageAllowanceSpec"
            },
            "description": "Optional. Eligible baggage allowances for passengers"
          },
          "penaltyRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Reference to penalties applicable on this offer"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "A proposal to sell a specific set of products or services under specific conditions, for a certain price.",
        "required": [
          "offerId",
          "ownerCode",
          "addOfferItems",
          "offerExpirationDateTime",
          "totalPrice",
          "journeyOverviews"
        ]
      },
      "offerDifferentialPriceAndFareDetails": {
        "type": "object",
        "properties": {
          "differentialTypeCode": {
            "$ref": "#/definitions/offerDifferentialTypeCode",
            "description": "Optional. Several types of action are possible when the customer selects a reshopped offer - e.g. additional collection or refund"
          },
          "diff": {
            "$ref": "#/definitions/offerPriceAndFareDetails",
            "description": "Required. Details of difference in Price and FareDetails in the new reshopped offer compared to original offer\n`fare_details` will be set if airline provides differential amounts in fare details"
          },
          "new": {
            "$ref": "#/definitions/offerPriceAndFareDetails",
            "description": "Required. Price and FareDetails of new re-shopped offer\n`fare_details` will be set if airline provides new/actual amounts in fare details"
          },
          "old": {
            "$ref": "#/definitions/offerPriceAndFareDetails",
            "description": "Optional. Existing order price."
          },
          "penaltyRefId": {
            "type": "string",
            "description": "Optional. Reference to Change Fee at OfferItem level. Note: There can be carriers which do not provide penalty in FareDetail."
          }
        },
        "description": "For each offer item, this function allows the airline to inform the seller about amount to be paid based on the\ndifference between current and newly re-shopped itinerary.",
        "required": [
          "diff",
          "new",
          "old"
        ]
      },
      "offerDifferentialTypeCode": {
        "type": "string",
        "enum": [
          "DIFFERENTIAL_TYPE_CODE_UNSPECIFIED",
          "ADD_COL",
          "ADD_COL_AND_REFUND",
          "ADD_COL_AND_RESIDUAL",
          "EVEN_EXCHANGE",
          "REFUND",
          "RESIDUAL",
          "REUSABLE"
        ],
        "default": "DIFFERENTIAL_TYPE_CODE_UNSPECIFIED",
        "description": "Enumeration of Price Differential Type Code\n - DIFFERENTIAL_TYPE_CODE_UNSPECIFIED: Default\n - ADD_COL: Additional collection i.e. due amount is more than 0\nthe change will result into a new payment from the customer (applies to change scenarios)\n - ADD_COL_AND_REFUND: the change will result into both a new payment from customer and a customer refund (applies to cancellation and change scenarios)\n - ADD_COL_AND_RESIDUAL: the change will result into both a new payment from customer and a determined amount kept by airline for future use\n(applies to cancellation and change scenarios)\n - EVEN_EXCHANGE: No addition collection i.e. due amount is 0\nthe change does not have any financial impact to the customer (applies to change scenarios)\n - REFUND: due amount is negative\nthe change will result into a customer refund (applies to cancellation and change scenarios)\n - RESIDUAL: the change will result into a determined amount kept by airline for future use (applies to cancellation and change scenarios)\n - REUSABLE: the financial result of the change will be determined when customer will come back to select new journey options\n(applies to change scenarios when customer does not yet know how to reuse his money)"
      },
      "offerFareCriteria": {
        "type": "object",
        "properties": {
          "fareTypeCodes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/commonFareTypeCode"
            },
            "description": "Optional. Fare type preferences. E.g. Agency Private fare, Marine fare etc."
          }
        },
        "description": "Fare criteria used to filter shopping results."
      },
      "offerFlightOffersGroup": {
        "type": "object",
        "properties": {
          "bestOfferRefId": {
            "type": "string",
            "description": "The Offer ID of the _best_ offer on a flight or flights combination\ndetermined based on `com.verteil.air.offer.shop.v3.ResponseControls.sort_order`."
          },
          "otherOfferRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Offer IDs of all other offers on the same flight or flights combination.\nThe ordering of Offer IDs is based on `com.verteil.air.offer.shop.v3.ResponseControls.sort_order`."
          }
        },
        "description": "Container for grouping offers based on flight or flights combination\n(corresponding to a PaxJourney for one way shopping or PaxJourney combination for return shopping).\nThis is intended for displaying  flight wise offers in shopping results page."
      },
      "offerFlightRequest": {
        "type": "object",
        "properties": {
          "originDestinationsCriteria": {
            "$ref": "#/definitions/offerOriginDestinationsCriteria",
            "description": "Required. A container for a flight request type which allow multiple Origin and Destination flight criteria to be provided."
          },
          "specificOriginDestinations": {
            "$ref": "#/definitions/offerSpecificOriginDestinations",
            "description": "Required. A container for a flight request type which allow multiple specified origin and destinations to be provided.\nThis can be used to initiate targeted search, e.g. BOM-SIN on SQ421 on 25Feb on K RBD connecting to SIN-SFO on SQ322 on 26Feb on K RBD"
          }
        },
        "description": "Flight Request Choice of Affinity, Origin Destination or Journey flight information for this shopping request.\nCurrently only `origin_destinations_criteria` based shopping request is supported.",
        "required": [
          "originDestinationsCriteria",
          "specificOriginDestinations"
        ]
      },
      "offerJourneyPriceClass": {
        "type": "object",
        "properties": {
          "paxJourneyRefId": {
            "type": "string",
            "description": "Required. References to a pax journey"
          },
          "priceClassRefId": {
            "type": "string",
            "description": "Required. Reference to a price class"
          }
        },
        "description": "Price class information per Journey.",
        "required": [
          "paxJourneyRefId",
          "priceClassRefId"
        ]
      },
      "offerOfferServiceAssociation": {
        "type": "object",
        "properties": {
          "paxJourneyRefs": {
            "$ref": "#/definitions/commonPaxJourneyRefs",
            "description": "Required. A collection of flight segments which satisfies transportation of a passenger for a given origin and destination."
          },
          "seatAssignment": {
            "$ref": "#/definitions/commonSeatAssignment",
            "description": "Required. The Seat Location selected by the Passenger (via SeatAvailability)\nor assigned to the Passenger by the Airline for a given segment.\nWhen used, only a single Passenger must be referenced within the Service."
          },
          "serviceDefRef": {
            "$ref": "#/definitions/commonOfferServiceDefinitionRef",
            "description": "Required. Airline specific definition of a product or service (excluding flights) that can be separately sold and delivered.\nE.g. bag, seat, meal on a flight"
          }
        },
        "description": "Offer service association. One of `pax_journey_refs` or `service_def_ref`",
        "required": [
          "paxJourneyRefs",
          "seatAssignment",
          "serviceDefRef"
        ]
      },
      "offerOfferedService": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "Required. Uniquely Identifies a Service within the context of this message."
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. References to passengers"
          },
          "serviceAssociation": {
            "$ref": "#/definitions/offerOfferServiceAssociation",
            "description": "Required. Offer service association. One of `pax_journey_refs` or `service_def_ref`"
          },
          "validatingCarrierCode": {
            "type": "string",
            "description": "Optional. IATA-defined 2-character code of carrier providing the service"
          }
        },
        "description": "Offered Service is the instance of a specific flight or Service Definition as it has been offered (and eventually\nordered and consumed) in the context of an Offer. At time of order, the services should be applied to a single passenger\non a single segment",
        "required": [
          "serviceId",
          "paxRefIds",
          "serviceAssociation"
        ]
      },
      "offerOrderCriteria": {
        "type": "object",
        "properties": {
          "programCriteria": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerProgramCriteria"
            },
            "description": "Optional. Pricing criteria based on discount programs."
          },
          "promotionCriteria": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerPromotionCriteria"
            },
            "description": "Optional. Information related to publicizing a product, organization, or venture so as to increase sales or public awareness."
          }
        },
        "description": "Further qualifies the pricing request by discounted programs or promotions."
      },
      "offerOrderRepriceRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order to which the Seller wants to add, update, delete an OrderItem."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies."
          },
          "repriceOrder": {
            "$ref": "#/definitions/offerRepriceOrder",
            "description": "Optional. Option to Reprice an Order."
          }
        },
        "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an OrderChangeRQ or OrderCancelRQ transaction, to commit the re-shop offer.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
        "required": [
          "ownerCode",
          "orderId"
        ]
      },
      "offerOrderRepriceRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonWarning"
            },
            "description": "Optional. Contains information related to potential business errors detected during processing of the preceding request."
          },
          "repriceResult": {
            "$ref": "#/definitions/offerRepriceResult",
            "description": "Required. Results of the Reprice request providing `repriced_offer` Offer or `no_price_change_ind`."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPaymentFunctionOffer"
            },
            "description": "Optional. Container of all payment relevant functions."
          },
          "dataMap": {
            "$ref": "#/definitions/v3offerDataMap",
            "description": "Required. Data Map information used for intra-message referencing."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an OrderChangeRQ or OrderCancelRQ transaction, to commit the re-shop offer.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
        "required": [
          "repriceResult",
          "dataMap"
        ]
      },
      "offerOrderRequoteRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order to which the Seller wants to add, udpate, delete an OrderItem."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies."
          },
          "requoteOrder": {
            "$ref": "#/definitions/offerRequoteOrder",
            "description": "Required. The order item pricing in the reshop workflow"
          }
        },
        "description": "The OrderRequote transaction return the priced Offer reflecting the Offer/OfferItems requested for pricing after the OrderReshop transaction."
      },
      "offerOrderRequoteRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonWarning"
            },
            "description": "Contains information related to potential business errors detected during processing of the preceding request."
          },
          "shoppingResponseId": {
            "type": "string",
            "description": "Unique shopping session response ID."
          },
          "requotedOffer": {
            "$ref": "#/definitions/offerRequotedOffer",
            "description": "Result of repricing an offer selected from a previous `OrderReshop` response."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPaymentFunctionOffer"
            },
            "description": "Optional.\nContainer of all payment relevant functions."
          },
          "dataMap": {
            "$ref": "#/definitions/v3offerDataMap",
            "description": "Data List information used for inter-message referencing."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "A proposal to sell a specific Offer in the OrderReshop  workflow.\nThe OrderRequote transaction return the priced Offer reflecting the Offer/OfferItems requested for pricing after the\nOrderReshop transaction.\nTODO: Documentations"
      },
      "offerOrderReshopRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order to which the Seller wants to add, udpate, delete an OrderItem."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies."
          },
          "reshopOrder": {
            "$ref": "#/definitions/offerReshopOrder",
            "description": "Required. Option to Reshop an Order.\nIn this version, only Reshop for flight date change is supported currently - Cancel options are being added"
          }
        },
        "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an OrderChangeRQ or OrderCancelRQ transaction, to commit the re-shop offer.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
        "required": [
          "ownerCode",
          "orderId",
          "reshopOrder"
        ]
      },
      "offerOrderReshopRS": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonWarning"
            },
            "description": "Optional. Contains information related to potential business errors detected during processing of the preceding request."
          },
          "shoppingResponseId": {
            "type": "string",
            "description": "Optional. Unique shopping session response ID."
          },
          "reshopOffers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerChangedOffer"
            },
            "description": "Required. Results of the OrderReshop request including reshopped Offers or repriced Offer.\nReshopOffers reshop_results = 3;"
          },
          "flightOffersGroup": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerFlightOffersGroup"
            },
            "description": "Required. Offers grouped by flight or flights combination.\n(corresponding to a PaxJourney for one way shopping or PaxJourney combination for return shopping).\nThis is intended for displaying  flight wise offers in shopping results page.\nThe ordering of flights will be based on `com.verteil.air.offer.shop.v3.ResponseControls.sort_order`"
          },
          "dataMap": {
            "$ref": "#/definitions/v3offerDataMap",
            "description": "Required. Data Map information used for intra-message referencing."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for subsequent pricing and conversion of the offer into order. API consumers\nmust relay all `Augmentation`s referred in the offer they select in subsequent pricing call\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        },
        "description": "The OrderReshop transaction set passes new shopping requests to an airline to replace existing specified order or order items in an Order or for new shopping requests to add to an existing Order. Airline responds with product offers within the context of the existing Order.\nThere is no change to the Order or Order Items, in response to a Reshop request - typically, the Reshop response will be followed by an by an pricing and commit transaction.\nIn the response, the Airline can provide exact instructions as to what actions can finally be executed, as a solution to the initially requested action.",
        "required": [
          "reshopOffers",
          "flightOffersGroup",
          "dataMap"
        ]
      },
      "offerOriginDestCriteria": {
        "type": "object",
        "properties": {
          "originStationCode": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the origin city or airport code."
          },
          "destStationCode": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the destination city or airport code."
          },
          "depDate": {
            "type": "string",
            "description": "Required. The passenger's requested departure date in ISO-8601 format (yyyy-mm-dd)."
          },
          "cabinPreferences": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/commonCabinCode"
            },
            "description": "Optional. Cabin preference. If not provided, offers on all cabins are eligible to be returned"
          },
          "connectionPrefRefId": {
            "type": "string",
            "description": "Optional. Reference to a transfer preference (ShoppingCriteria.ConnectionCriteria).\nTo be provided if more than 1 ShoppingCriteria.ConnectionCriteria are set in this request"
          }
        },
        "description": "The Origin and Destination airport/city pair which confines a passenger journey.",
        "required": [
          "originStationCode",
          "destStationCode",
          "depDate"
        ]
      },
      "offerOriginDestinationsCriteria": {
        "type": "object",
        "properties": {
          "originDestCriteria": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerOriginDestCriteria"
            },
            "description": "Required. The Origin and Destination airport/city pair which confines a passenger journey."
          }
        },
        "description": "A container for a flight request type which allow multiple Origin and Destination flight criteria to be provided.",
        "required": [
          "originDestCriteria"
        ]
      },
      "offerOriginalOrderItem": {
        "type": "object",
        "properties": {
          "orderItemRefId": {
            "type": "string",
            "description": "Required. Reference to the Order Item.\nOwner assigned ID which is unique within an Order."
          },
          "ownerCode": {
            "type": "string",
            "description": "Optional. Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the travel service provider for the OrderItem.\nFor air content, this provide details of the amount charged by the carrier for the carriage of a passenger and his/her allowable free baggage."
          },
          "price": {
            "$ref": "#/definitions/commonPrice",
            "description": "Required. The amount of money charged for the order item."
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerOfferedService"
            },
            "description": "Required. List of services present in this OrderItem\nAt the time of shopping, a service can be sold to multiple passengers on a given journey.\nAt time of order, the services should be applied to a single passenger on a single segment."
          }
        },
        "description": "An individually priced item within the Order, made up of one or more Services.\nMay or may not be a selected Offer Item (e.g. non-chargeable Services available on request such as a wheelchair).\nOriginal Order Item for which the price was repriced",
        "required": [
          "orderItemRefId",
          "price",
          "services"
        ]
      },
      "offerPriceAndFareDetails": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/definitions/commonPrice",
            "description": "Required. The amount of money charged for the offer item.\nCarriers that return amount differentials for new offers will provide price details within `price_differential` field."
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the carrier for the carriage of passenger(s) and her allowable free baggage."
          }
        },
        "required": [
          "price"
        ]
      },
      "offerProgramCriteria": {
        "type": "object",
        "properties": {
          "programAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. An account which provides access to discounted or negotiated prices."
          },
          "programSponsor": {
            "$ref": "#/definitions/offerSponsor",
            "description": "Required. Program Owner Information"
          }
        },
        "description": "Information relating to discount programs.",
        "required": [
          "programAccountIds",
          "programSponsor"
        ]
      },
      "offerPromotionCriteria": {
        "type": "object",
        "properties": {
          "promotionId": {
            "type": "string",
            "description": "Required. Promotion code ID or number. Example: PROMO123."
          },
          "promotionSponsor": {
            "$ref": "#/definitions/offerSponsor",
            "description": "Required. Promotion Issuer or Sponsor"
          }
        },
        "required": [
          "promotionId",
          "promotionSponsor"
        ]
      },
      "offerRepriceOrder": {
        "type": "object",
        "properties": {
          "paymentFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPaymentAssociatedFunctionCriteria"
            },
            "description": "Optional. Container of all payment relevant functions in the context of an order reprice transaction"
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          }
        },
        "description": "Function to Reprice an Order."
      },
      "offerRepriceResult": {
        "type": "object",
        "properties": {
          "noPriceChangeInd": {
            "type": "boolean",
            "description": "Required. When `true`, the Reprice had no effect on the price(s) of the original Order/OrderItems.\nOnly one of `no_price_change_ind` or `reprice_offer` will be returned"
          },
          "repricedOffers": {
            "$ref": "#/definitions/offerRepricedOffers",
            "description": "Required. Repriced Carrier Offers.\nOnly one of `no_price_change_ind` or `repriced_offers` will be returned"
          },
          "noPriceChangeOrderItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerOriginalOrderItem"
            },
            "description": "Optional. information on OrderItems which does not have price change among the OrderItems in OrderViewRS.\nThere can be scenarios in which there is no price change for an unpaid ancillary or a specific passenger."
          },
          "unchangedCommissions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonCommission"
            },
            "description": "Optional. Existing commissions in the order that continue to apply after reprice\nNew commissions can come in `repriced_offers.offers[].commissions`."
          },
          "totalPrice": {
            "$ref": "#/definitions/commonPrice",
            "description": "Required. The total price of the Repriced Order.\nThe total amount that has to be passed in AcceptRepriceRQ."
          }
        },
        "description": "Results of the Reprice request providing `reprice_offer` Offer or `no_price_change_ind`.",
        "required": [
          "noPriceChangeInd",
          "repricedOffers",
          "totalPrice"
        ]
      },
      "offerRepricedOffer": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Required. The unique id of the repriced offer."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "repricedOfferItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerRepricedOfferItem"
            },
            "description": "Required. Offers presented in response to a Reprice query from in OrderRepriceRQ."
          },
          "offerExpirationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z"
          },
          "paymentTimeLimitDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format by which a commitment to pay must be made for the confirmed items in the offer. Example: 2015-01-13T13:59:38Z"
          },
          "priceGuaranteeTimeLimitDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. The time in ISO8601 format after which the offer price is no longer guaranteed. Example: 2015-01-13T13:59:38Z"
          },
          "commissions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonCommission"
            },
            "description": "Optional. Commissions applicable on the offer."
          },
          "totalPrice": {
            "$ref": "#/definitions/commonPrice",
            "description": "Required. The Total amount of all the Offer Items in 'repriced_offer_items'"
          },
          "baggageAllowanceSpecs": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerBaggageAllowanceSpec"
            },
            "description": "Optional. Eligible baggage allowances for passengers"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Augment reference"
          }
        },
        "description": "Returns the result of repricing of an existing Order, possibly as a consequence of expired TimeLimits. Airline\nreturns Offers/OfferItems that describe the changes incurred from the reprice request.",
        "required": [
          "offerId",
          "ownerCode",
          "repricedOfferItems",
          "totalPrice"
        ]
      },
      "offerRepricedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Required. Unique identifier for this offerItem instance. Must be unique within XML message."
          },
          "fareDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonFareDetail"
            },
            "description": "Optional. Detailing of the amount charged by the travel service provider for the OrderItem.\nFor air content, this provide details of the charges for carriage of passenger(s) and her allowable free baggage."
          },
          "price": {
            "$ref": "#/definitions/commonPrice",
            "description": "Required. The amount of money charged for the offer item."
          },
          "originalOrderItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerOriginalOrderItem"
            },
            "description": "Required. Original Order Item for which the price was repriced."
          }
        },
        "description": "A priced grouping of one or more services within a Repriced Offer.",
        "required": [
          "offerItemId",
          "price",
          "originalOrderItems"
        ]
      },
      "offerRepricedOffers": {
        "type": "object",
        "properties": {
          "offers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerRepricedOffer"
            },
            "description": "Required. List of offers which has undergone a price change."
          }
        },
        "description": "The Repriced Carrier Offers",
        "required": [
          "offers"
        ]
      },
      "offerRequestMarketingSegment": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc."
          },
          "flightNumber": {
            "type": "string",
            "description": "Required. The numerical designation of a flight as it is marketed by a carrier."
          },
          "operationalSuffix": {
            "type": "string",
            "description": "Optional. The numerical designation of a flight as it is marketed by a carrier."
          },
          "cabinCode": {
            "$ref": "#/definitions/commonCabinCode",
            "description": "Cabin Code\nEither `cabin_code` or `rbd`"
          },
          "rbd": {
            "type": "string",
            "description": "Reservation Booking Designator\nEither `cabin_code` or `rbd`"
          }
        },
        "description": "The commercial designation under which a Dated Operating Segment can be booked, either under the operating carrier's designator or that of another carrier (codeshare).",
        "required": [
          "carrierCode",
          "flightNumber",
          "cabinCode",
          "rbd"
        ]
      },
      "offerRequestPaxJourney": {
        "type": "object",
        "properties": {
          "paxJourneyId": {
            "type": "string",
            "description": "Required. Pax Journey ID"
          },
          "paxSegments": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerRequestPaxSegment"
            },
            "description": "Required. Transportation of a passenger on a Dated Operating Segment. The array should be ordered according to departure date of segments"
          }
        },
        "description": "A collection of segments which satisfies transportation of passenger for a given origin and destination.",
        "required": [
          "paxJourneyId",
          "paxSegments"
        ]
      },
      "offerRequestPaxSegment": {
        "type": "object",
        "properties": {
          "paxSegmentId": {
            "type": "string",
            "description": "Optional. Pax Segment ID"
          },
          "depStation": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the departure city or airport code."
          },
          "arrivalStation": {
            "type": "string",
            "description": "Required. IATA 3-letter code defining the arrival city or airport code."
          },
          "depDate": {
            "type": "string",
            "description": "Required. The segment departure date in ISO-8601 format (yyyy-mm-dd)."
          },
          "marketingSegment": {
            "$ref": "#/definitions/offerRequestMarketingSegment",
            "description": "Required. The commercial designation under which a Dated Operating Segment can be booked, either under the operating carrier's designator or that of another carrier (codeshare)."
          }
        },
        "description": "Transportation of a passenger on a Dated Operating Segment.",
        "required": [
          "depStation",
          "arrivalStation",
          "depDate",
          "marketingSegment"
        ]
      },
      "offerRequoteOrder": {
        "type": "object",
        "properties": {
          "selectedOffers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerSelectedOffer"
            },
            "description": "Offer selected by the Passenger for requesting an Order to be reshopped."
          },
          "affectedOrderItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerAffectedOrderItemRequest"
            },
            "description": "Contains affected existing order items and related services that will be impacted by any new offers in the message.\nThe primary use case is when an existing order item is to be deleted or partial deletion either with a replacement\nin a new offer or an offer to be used for the deletion."
          },
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPax"
            },
            "description": "Optional. Any person except members of the crew to be carried with the consent of the carrier, on board an aircraft.\nHolds the attributes specific to a one booking, from shopping to fulfillment.\nKey is `pax_id` and value the corresponding `Pax` object"
          },
          "orderCriteria": {
            "$ref": "#/definitions/offerOrderCriteria",
            "description": "Optional. Further qualifies the pricing request by discounted programs or promotions."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPaymentAssociatedFunctionCriteria"
            },
            "description": "Optional. Container of all payment relevant functions in the context of an order change transaction"
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation element from OrderReshopRS. API consumers must relay all `Augmentation`s referred in the offer\nthey select from a shopping response in subsequent pricing call.\nKey is `aug_id` and value the corresponding `Struct` type data."
          }
        }
      },
      "offerRequotedOffer": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Uniquely Identifies an Offer within the context of one message."
          },
          "ownerCode": {
            "type": "string",
            "description": "Airline code assigned to a carrier. Either ICAO-defined 3-character code or IATA-defined 2-character code."
          },
          "addOfferItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerRequotedOfferItem"
            },
            "description": "Requoted OfferItems\nIf original query also specified items for deletion, the suggested OfferItems here could be meant to replace the\nOrderItems specified in the request's Delete function.\nPrice and FareDetails will always be presented in the “Differential” structure.\nTODO: Improve Documentation"
          },
          "offerExpirationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time in ISO8601 format by which the offer must be converted into an order. Example:  2015-01-13T13:59:38Z"
          },
          "paymentTimeLimitDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time in ISO8601 format by which a commitment to pay must be made for the confirmed items in the offer. Examples: 2015-01-13T13:59:38Z"
          },
          "priceGuaranteeTimeLimitDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time in ISO8601 format after which the offer price is no longer guaranteed. Examples: 2015-01-13T13:59:38Z"
          },
          "commissions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonCommission"
            },
            "description": "Optional. Commissions applicable on the offer."
          },
          "totalPrice": {
            "$ref": "#/definitions/commonPrice",
            "description": "The amount of money expected, required, or given in payment for something."
          },
          "journeyOverview": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerJourneyPriceClass"
            },
            "description": "Price class information per Journey."
          },
          "baggageAllowanceSpecs": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerBaggageAllowanceSpec"
            },
            "description": "Eligible baggage allowances for passengers"
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional Augment reference -"
          }
        },
        "description": "A requoted offer in response to a requote request with an offer selected from a previous reshop response.\nTODO: Correct documentation"
      },
      "offerRequotedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemId": {
            "type": "string",
            "description": "Unique identifier for this OfferItem instance. Must be unique within XML message."
          },
          "requoteDiffPriceAndFareDetails": {
            "$ref": "#/definitions/offerDifferentialPriceAndFareDetails",
            "description": "For each offer item, `requote_diff_price_and_fare_details` allows carrier to inform the seller about the price and fare details\nassociated with this offer item as `differential` amounts\n--TODO: Improve documentation"
          },
          "offeredServices": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerOfferedService"
            },
            "description": "Offered Service is the instance of a specific flight or Service Definition as it has been offered (and eventually ordered and consumed)\nin the context of a specific Offer and/or Order.\n-- TODO: Correct documentation"
          },
          "penaltyRefId": {
            "type": "string",
            "description": "Optional. Reference to requote penalty applicable on this offer item"
          }
        },
        "description": "A priced grouping of one or more services within a Requoted Offer."
      },
      "offerReshopOrder": {
        "type": "object",
        "properties": {
          "reshopOrderChoice": {
            "$ref": "#/definitions/offerReshopOrderChoice",
            "description": "Required. Reshop order Choice"
          },
          "paxJourneys": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerRequestPaxJourney"
            },
            "description": "Optional. A collection of segments which satisfies transportation of passenger from origin to destination.\nThe order of collection should be the order of the flights in the itinerary"
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          },
          "fareWaiver": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/v3offerFareWaiver"
            },
            "description": "Optional. Code assigned by the validating carrier that allows fare rule modification or override."
          }
        },
        "description": "Functions to allow a Seller to request additions, replacement or deletions of OrderItems in this specific Order.",
        "required": [
          "reshopOrderChoice"
        ]
      },
      "offerReshopOrderChoice": {
        "type": "object",
        "properties": {
          "serviceOrder": {
            "$ref": "#/definitions/offerServiceOrder",
            "description": "Functions to allow a seller to request additions, replacement or deletions of OrderItems in this specific Order."
          }
        },
        "description": "Reshop order Choice\nOne of service_order, update_pax or update_pax_name. update_pax and update_pax_name to be supported in future"
      },
      "offerReshopPriceAndFareDetails": {
        "type": "object",
        "properties": {
          "new": {
            "$ref": "#/definitions/offerPriceAndFareDetails",
            "description": "Required. Price of the new offer re-shopped by the user."
          },
          "differential": {
            "$ref": "#/definitions/offerDifferentialPriceAndFareDetails",
            "description": "Required. Difference between the existing order and new offer re-shopped by the user."
          }
        },
        "description": "For each offer item, `reshop_price_and_fare_details` allows carrier to inform the seller about the price and fare details\nassociated with this offer item.\n\\\nCarriers can provide this information in two ways\n1- New Price: Price of the new offer re-shopped by the user.\n2- Differential Price: Difference between the existing order and new offer re-shopped by the user.",
        "required": [
          "new",
          "differential"
        ]
      },
      "offerResponseControls": {
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerSort"
            },
            "description": "Optional. The sorting order of offers.\nIf provided, the sorting will be done based based on the first sort control, then with the second to break ties,\nthen with third to break ties and so on.\n\nIf not provided, the default sort order will be [`PRICE`, `STOPS`, `DEPARTURE_TIME`]"
          },
          "resultsLimit": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The maximum number of offers that should be returned.\nIf provided, only top results_limit offers after sorting based on sort_order will be returned.\nIf not provided the system limit of 800 offers will apply.\nIf provided, `result_limit` cannot be more than system limit."
          },
          "resultPreference": {
            "$ref": "#/definitions/offerResultPreference",
            "description": "Optional. Allows fine tuning of the offers that get returned when `result_limit` is applied."
          }
        },
        "description": "Guidance on how the response should be returned - sorting, maximum number of results etc."
      },
      "offerResultPreference": {
        "type": "string",
        "enum": [
          "OPTIMIZED",
          "BEST",
          "FULL"
        ],
        "default": "OPTIMIZED",
        "description": "Enumeration of shopping result preference that allows fine tuning of the offers that get returned when\n`ResponseControls.result_limit` is applied.\n\n - OPTIMIZED: Default. The offers returned tries to meet the following objectives in their order of importance:\n1. Provide best offer as per `ResponseControls.sort_order` on every onward and return flight combination.\n2. Provide all offers with same price class on onward and return for each flight combination, working from top of the best offer list\n   If same price class is not available on onward and return, the next available best price class combination is returned.\nThe objective is to first try and include all flight options in the result, and then try to include all price class\noptions available on those flights with top flight combinations getting higher preference.\n - BEST: Only the best offer as per `ResponseControls.sort_order` on every onward and return flight combination is returned.\n - FULL: All offers are to be returned.\nNote that a shopping response will not have more than `ResponseControls.results_limit` offers. Consequently sorted\noffers that are below the result_limit will be dropped.\nThe primary intention is to *NOT* miss any flight combination, so a certain number of flight combinations will have all possible\noffers, but certain flight combinations will not have anything more than one.\nFor example, if the `ResponseControls.results_limit` is provided as 400 and if there are 500 offers returned by the supplier\nwith 300 unique flight combinations, then we will guarantee that offers returned will have all the 300 unique flight combinations.\nThe remaining 100 out of provided limit 400 will be filled in the topmost flight combinations."
      },
      "offerSelectedOffer": {
        "type": "object",
        "properties": {
          "selectedOfferItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/v3offerSelectedOfferItem"
            },
            "description": "Offer Items to requote"
          },
          "shoppingResponseId": {
            "type": "string",
            "description": "Unique shopping session response ID from order_reshop_rs"
          },
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to the the selected Offer ID (either a standard Offer or an a-la-carte Offer)\nreturned in a previous shopping response."
          }
        },
        "description": "Offer from order_reshop_rs to requote"
      },
      "offerServiceOrder": {
        "type": "object",
        "properties": {
          "addOfferItem": {
            "$ref": "#/definitions/offerAddOfferItem",
            "description": "Optional. Action to request new Added Offer Items for the specified Order. If used in conjunction with a 'Delete' function,\nthe intention is to replace the deleted item with whatever has been requested in this Add function's shopping query."
          },
          "deleteOrderItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerAffectedOrderItemRequest"
            },
            "description": "Optional. Contains affected existing order items and related services that will be impacted by any new offers in the message.\nThe primary use case is when an existing order item needs to be deleted or partially deleted either with a replacement\nin a new offer or an offer to be used for the deletion."
          }
        },
        "description": "Functions to allow a Seller to request additions, replacement or deletions of OrderItems in this specific Order."
      },
      "offerShoppingCriteria": {
        "type": "object",
        "properties": {
          "fareCriteria": {
            "$ref": "#/definitions/offerFareCriteria",
            "description": "Optional. Fare criteria used to filter shopping results.\nIf `fare_criteria` is not provided default values `PVT` and `PUBL` will be applied."
          },
          "programCriteria": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerProgramCriteria"
            },
            "description": "Optional. Filtering criteria based on discount programs."
          },
          "promotionCriteria": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerPromotionCriteria"
            },
            "description": "Optional. Information related to publicizing a product, organization, or venture so as to increase sales or public awareness."
          }
        },
        "description": "Further qualifies the flight request by influencing which results are returned in the shopping response,\nincluding preferred or required criteria."
      },
      "offerSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "$ref": "#/definitions/SortSortParameter",
            "description": "Required. Sort parameter - Price or number of stops or departure time etc."
          },
          "order": {
            "$ref": "#/definitions/SortSortOrder",
            "description": "Optional. Sort order - ascending or descending, Defaults to ascending"
          }
        },
        "description": "A sort control specifying a sorting parameter and the ordering to be applied for that parameter"
      },
      "offerSpecificOriginDestCriteria": {
        "type": "object",
        "properties": {
          "originStationCode": {
            "type": "string",
            "description": "Required. IATA defined code identifying origin city or station."
          },
          "destStationCode": {
            "type": "string",
            "description": "Required. IATA defined code identifying destination city or station."
          },
          "paxJourneyRefId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Reference to a pax_journey within this message."
          }
        },
        "description": "A specific origin and destinations criteria.",
        "required": [
          "originStationCode",
          "destStationCode",
          "paxJourneyRefId"
        ]
      },
      "offerSpecificOriginDestinations": {
        "type": "object",
        "properties": {
          "specificOriginDestCriteria": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/offerSpecificOriginDestCriteria"
            },
            "description": "Required. The Origin and Destination airport/city pair and segments which confines a passenger journey."
          }
        },
        "description": "A container for a flight request type which allow multiple specific origin and destinations criteria to be provided.\nThis can be used to initiate targeted search, e.g. BOM-SIN on SQ421 on 25Feb on K RBD connecting to SIN-SFO on SQ322 on 26Feb on K RBD",
        "required": [
          "specificOriginDestCriteria"
        ]
      },
      "offerSponsor": {
        "type": "object",
        "properties": {
          "carrierCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying the airline which carries the passenger, baggage, or goods, and/or commits to delivering the carriage as well as any related services such as issuance of ticket, creation of Order, etc.\nEither `carrier_code` or `travel_agency_IATA_number` is set."
          },
          "travelAgencyIATANumber": {
            "type": "string",
            "description": "Required. IATA number of the Travel Agency\nEither `carrier_code` or `travel_agency_IATA_number` is set."
          }
        },
        "description": "Promotion Issuer or Sponsor",
        "required": [
          "carrierCode",
          "travelAgencyIATANumber"
        ]
      },
      "orderAcceptChange": {
        "type": "object",
        "properties": {
          "orderItemRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identification for the order item for which the change is accepted"
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process."
          }
        }
      },
      "orderAcceptChangeRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order for which change is accepted."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies."
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          },
          "acceptChange": {
            "$ref": "#/definitions/orderAcceptChange",
            "description": "List of disrupted OrderItems from OrderViewRS\nwhich needs to be accepted by the user inorder to confirm."
          }
        },
        "description": "Request used by the seller to accept the change advised by the airline due to a involuntary change from airline\nThis is preceded by the OCN notification which is sent by the airline during a involuntary change"
      },
      "orderAcceptOffer": {
        "type": "object",
        "properties": {
          "selectedPricedOffers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/orderSelectedPricedOffer"
            },
            "description": "Required. Offer selected by the Passenger for requesting an Order to be created.\nMultiple Offers can be requested at the same time, each of which could originate from different\nshopping responses (each with their own ResponseIDs)."
          }
        },
        "description": "Function to accept a new OfferItem and adding it to the existing Order."
      },
      "orderAcceptRepricedOrder": {
        "type": "object",
        "properties": {
          "commissions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonCommission"
            },
            "description": "Optional. Additional order level price component which needs to be included or excluded during payment- E.g. a service fee, upfront commission etc."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPaymentFunctionChange"
            },
            "description": "Required. Container of all payment relevant functions in the context of an order change transaction."
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          },
          "dataMap": {
            "$ref": "#/definitions/v3orderDataMap",
            "description": "Optional. Data List information used for intra-message referencing."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process.\nThey embed opaque data required for converting the offer into order."
          },
          "updateOrderTags": {
            "$ref": "#/definitions/orderUpdateOrderTags",
            "description": "Optional.\nThe tags (key-value pairs) to be added/removed for the given order."
          },
          "updateOrderRemarks": {
            "$ref": "#/definitions/orderUpdateOrderRemarks",
            "description": "Optional.\nThe remarks to be added for the given order."
          }
        },
        "description": "Contains a choice of functions to update and Order including Update Order Item, Update Passenger,\nand Accept Repriced Order.",
        "required": [
          "paymentFunctions"
        ]
      },
      "orderAcceptRepricedOrderRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. Supplier identifier. For air content, this is the IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order being changed."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies."
          },
          "acceptRepricedOrder": {
            "$ref": "#/definitions/orderAcceptRepricedOrder",
            "description": "Required. Order Change request information."
          }
        },
        "description": "Function used by seller to inform the airline that it is accepting the proposed Order,\nas it has been repriced and returned in the preceding `OrderRepriceRS`.",
        "required": [
          "ownerCode",
          "orderId",
          "acceptRepricedOrder"
        ]
      },
      "orderDivideOrderItems": {
        "type": "object",
        "properties": {
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. Reference IDs of passengers to be deleted from the order."
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          },
          "dataMap": {
            "$ref": "#/definitions/v3orderDataMap",
            "description": "Optional. Data List information used for intra-message referencing. For DivideOrderItemsRQ, data_map is expected to have only passengers."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process."
          }
        }
      },
      "orderDivideOrderItemsRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order being changed."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nWhen not provided, default 'NDC' channel applies."
          },
          "divideOrderItems": {
            "$ref": "#/definitions/orderDivideOrderItems",
            "description": "Required. Divide order items request information."
          }
        },
        "description": "Request used by the seller to request the airline to split the PNR by deleting passengers from the parent PNR.\nThis is preceded by OrderRetrieveRQ and the passenger reference IDs to be deleted are sent to this request along with passenger details."
      },
      "orderPassengerServicing": {
        "type": "object",
        "properties": {
          "passengerId": {
            "type": "string",
            "description": "Uniquely identifies a Passenger within the context of one message."
          },
          "new": {
            "$ref": "#/definitions/commonIndividual",
            "description": "Optional. The new passenger information to be updated like gender/name/birth date."
          },
          "previous": {
            "$ref": "#/definitions/commonIndividual",
            "description": "Optional. The previous passenger details which will be updated like gender/name/birth date."
          }
        },
        "description": "Function to Add, Remove or Update the Passenger Details. Providing the New and Previous values together implies an Update."
      },
      "orderSelectedPricedOffer": {
        "type": "object",
        "properties": {
          "offerRefId": {
            "type": "string",
            "description": "Required. Reference to the OfferID of the selected Offer returned in a previous shopping response."
          },
          "ownerCode": {
            "type": "string",
            "description": "Required. IATA-defined 2-character code identifying airline owning the selected offer"
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel through which offer was sourced. If not provided, the channel used for creating the\nOrder will apply"
          },
          "selectedOfferItems": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/v3orderSelectedOfferItem"
            },
            "description": "Required. OfferItem selected by the Passenger for inclusion in the requested Order."
          },
          "shoppingResponseRefId": {
            "type": "string",
            "description": "Required. Reference to unique shopping session response ID, as provided in the shopping response from which offer was selected."
          },
          "augRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional. Augmentation references"
          }
        },
        "description": "Offer selected by the Passenger for requesting an Order to be created.\nMultiple Offers can be requested at the same time, each of which could originate from different shopping\nresponses (each with their own ResponseIDs)."
      },
      "orderUpdateOrderItems": {
        "type": "object",
        "properties": {
          "acceptOffers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/orderAcceptOffer"
            },
            "description": "Optional. Function to accept a new OfferItem and adding it to the existing Order."
          },
          "paymentFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonPaymentFunctionChange"
            },
            "description": "Optional. Container of all payment relevant functions in the context of an order change transaction\nIf Payment Node is NOT present in the RQ, system considers it as ON HOLD booking."
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          },
          "dataMap": {
            "$ref": "#/definitions/v3orderDataMap",
            "description": "Optional. Data List information used for intra-message referencing."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Augmentation element from OrderRequoteRS.\nAPI consumers must relay all `Augmentation`s returned in OrderRequoteRS in subsequent UpdateOrderItemsRQ.\nKey is `aug_id` and value the corresponding `Struct` type data."
          },
          "updateOrderTags": {
            "$ref": "#/definitions/orderUpdateOrderTags",
            "description": "Optional.\nThe tags (key-value pairs) to be added/removed for the given order."
          },
          "updateOrderRemarks": {
            "$ref": "#/definitions/orderUpdateOrderRemarks",
            "description": "Optional.\nThe remarks to be added for the given order."
          }
        },
        "description": "Contains a choice of functions to update and Order by adding, removing or replacing Order Items\n(with potential refund conditions, in case of cancellations)"
      },
      "orderUpdateOrderItemsRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order being changed."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nWhen not provided, default 'NDC' channel applies."
          },
          "updateOrderItems": {
            "$ref": "#/definitions/orderUpdateOrderItems",
            "description": "Required. Order Change request information."
          }
        },
        "description": "Request used by the seller to request the airline to commit changes to an existing Order\nby adding, removing or replacing Order Items (with potential refund conditions, in case of cancellations).\nThe actions possible are determined by the airline and communicated to the seller via `OrderReshop` and `OrderRequote`\nAPIs (which precedes `UpdateOrderItems`). It is up to the seller to then accept the proposed actions from the\n`OrderRequoteRS` by echoing these functions in this order servicing structure"
      },
      "orderUpdateOrderRemarks": {
        "type": "object",
        "properties": {
          "addRemarks": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/commonRemark"
            },
            "description": "The list of remarks which are to be added against the order."
          }
        },
        "description": "The remarks to be updated for the given order."
      },
      "orderUpdateOrderTags": {
        "type": "object",
        "properties": {
          "deleteTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of keys of the tags which are to be removed from the system for a particular order."
          },
          "addTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags which are to be added to the system for a particular order.\nThe maximum length of a tag key is 125 characters.\nThe maximum length of a tag value is 255 characters."
          },
          "editTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags which are to be edited for a particular order.\nThe maximum length of a tag key is 125 characters.\nThe maximum length of a tag value is 255 characters."
          }
        },
        "description": "The tags which can be used provides users with the ability to associate additional information with their orders by using searchable tags, which are essentially key-value pairs.\nThese tags can be meaningful descriptors that help users categorize and identify orders more efficiently."
      },
      "orderUpdatePaxRQ": {
        "type": "object",
        "properties": {
          "ownerCode": {
            "type": "string",
            "description": "Required. Supplier identifier. For air content, this is IATA-defined 2-character code of the carrier owning the service"
          },
          "orderId": {
            "type": "string",
            "description": "Required. Reference to existing Order being changed."
          },
          "channel": {
            "$ref": "#/definitions/commonChannel",
            "description": "Optional. The channel though which this order is created and managed.\nIf not provided, default 'NDC' channel applies."
          },
          "party": {
            "$ref": "#/definitions/commonParty",
            "description": "Optional. A party is an individual, a group, or a body having a role in the transaction.\nE.g. a corporation that can have special deals with different carriers"
          },
          "passengerServicing": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/definitions/orderPassengerServicing"
            },
            "description": "Function to Add, Remove or Update the Passenger Details. Providing the New and Previous values together implies an Update."
          },
          "augmentations": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Optional. Additional arbitrary data relating to offers that the API consumers are not expected to process."
          }
        },
        "description": "Request used by the seller to request the airline to commit changes to an existing passenger"
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          }
        },
        "additionalProperties": {},
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "protobufNullValue": {
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ],
        "default": "NULL_VALUE",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
      },
      "typeMoney": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string",
            "description": "Required. The 3-letter currency code defined in ISO 4217."
          },
          "units": {
            "type": "string",
            "format": "int64",
            "description": "Optional. The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
          },
          "nanos": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
          }
        },
        "description": "Represents an amount of money with its currency type. When the money value is \"Zero\" the response will only have currency code.",
        "required": [
          "currencyCode"
        ]
      },
      "v3commonFareWaiver": {
        "type": "object",
        "properties": {
          "fareRuleWaiverCode": {
            "type": "string",
            "description": "Required. Code assigned by the validating carrier that allows fare rule modification or override."
          },
          "fareWaiverType": {
            "type": "string",
            "description": "Optional. Waiver type. Examples: ExchangeReissued, FareComponent."
          }
        },
        "description": "Validating carrier-assigned fare rule modification or override information.",
        "required": [
          "fareRuleWaiverCode"
        ]
      },
      "v3offerDataMap": {
        "type": "object",
        "properties": {
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPax"
            },
            "description": "Optional. Passenger reference data definition.\nKey is `pax_id` and value the corresponding `Pax` data"
          },
          "contactInfos": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonContactInfo"
            },
            "description": "Optional. Contact info data definition.\nThe electronic or geographic address which a party has provided as the contact channel. For example, contact email, contact postal address, contact phone number.\nKey is `contact_info_id` and value the corresponding `ContactInfo` data"
          },
          "paxSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPaxSegment"
            },
            "description": "Optional. Segment reference data definition.\nKey is `pax_segment_id` and value the corresponding `PaxSegment` data"
          },
          "paxJourneys": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPaxJourney"
            },
            "description": "Optional. Journey reference data definition.\nKey is `pax_journey_id` and value the corresponding `PaxJourney` data"
          },
          "baggageAllowances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonBaggageAllowance"
            },
            "description": "Optional. Baggage allowance reference data definition\nKey is `baggage_allowance_id` and value the corresponding `BaggageAllowance` data"
          },
          "serviceDefs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonServiceDefinition"
            },
            "description": "Optional. Service Definition reference data definition\nKey is `service_def_id` and value the corresponding `ServiceDefinition` data"
          },
          "seatProfiles": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonSeatProfile"
            },
            "description": "Optional. Seat Profile reference data definition.\nKey is `seat_profile_id` and value the corresponding `ServiceDefinition` data"
          },
          "penalties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPenalty"
            },
            "description": "Optional. Penalty reference data definition\nKey is `penalty_id` and value the corresponding `Penalty` data"
          },
          "priceClasses": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPriceClass"
            },
            "description": "Optional. PriceClass reference data definition.\nKey is `price_class_id` and value the corresponding `PriceClass` data"
          },
          "medias": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonMedia"
            },
            "description": "Optional. Media reference data definition.\nKey is `media_id` and value the corresponding `Media` data"
          }
        },
        "description": "Data Map information used for intra-message referencing."
      },
      "v3offerFareWaiver": {
        "type": "object",
        "properties": {
          "waiverCode": {
            "type": "string",
            "description": "Required. Code assigned by the validating carrier that allows fare rule modification or override."
          },
          "waiverType": {
            "type": "string",
            "description": "Required. Waiver type code assigned by the validating carrier that allows fare rule modification or override."
          }
        },
        "description": "Validating carrier-assigned fare rule modification or override information."
      },
      "v3offerSelectedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemRefId": {
            "type": "string",
            "description": "Reference to offer item"
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "References to passenger"
          },
          "selectedServiceRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "References to services"
          }
        },
        "description": "Offer Item to requote"
      },
      "v3orderDataMap": {
        "type": "object",
        "properties": {
          "passengers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPax"
            },
            "description": "Passenger reference data definition.\nKey is `pax_id` and value the corresponding `Pax` data"
          },
          "contactInfos": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonContactInfo"
            },
            "description": "Optional. Contact info data definition.\nThe electronic or geographic address which a party has provided as the contact channel. For example, contact email,\ncontact postal address, contact phone number."
          },
          "paxSegments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPaxSegment"
            },
            "description": "Segment reference data definition.\nKey is `pax_segment_id` and value the corresponding `PaxSegment` data"
          },
          "paxJourneys": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPaxJourney"
            },
            "description": "Journey reference data definition.\nKey is `pax_journey_id` and value the corresponding `PaxJourney` data"
          },
          "baggageAllowances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonBaggageAllowance"
            },
            "description": "Baggage allowance reference data definition\nKey is `baggage_allowance_id` and value the corresponding `BaggageAllowance` data"
          },
          "serviceDefs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonServiceDefinition"
            },
            "description": "Service Definition reference data definition\nKey is `service_def_id` and value the corresponding `ServiceDefinition` data"
          },
          "seatProfiles": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonSeatProfile"
            },
            "description": "Optional. Seat Profile reference data definition.\nKey is `seat_profile_id` and value the corresponding `ServiceDefinition` data"
          },
          "penalties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPenalty"
            },
            "description": "Penalty reference data definition.\nKey is `penalty_id` and value the corresponding `Penalty` data"
          },
          "priceClasses": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonPriceClass"
            },
            "description": "PriceClass reference data definition.\nKey is `price_class_id` and value the corresponding `PriceClass` data"
          },
          "medias": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/commonMedia"
            },
            "description": "Media reference data definition.\nKey is `media_id` and value the corresponding `Media` data"
          }
        },
        "description": "Data Map information used for intra-message referencing."
      },
      "v3orderSelectedOfferItem": {
        "type": "object",
        "properties": {
          "offerItemRefId": {
            "type": "string",
            "description": "Required. To specify the offer items"
          },
          "paxRefIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required. List of passenger references"
          }
        },
        "description": "Selected offer Item for OrderChange"
      }
    }
  }